D G "__PCH__" 0 35 ""5.109""
D G "__DEVICE__" 0 35 "4610"
D G "__DATE__" 0 35 ""13-Jun-25""
D G "__TIME__" 0 35 ""13:22:59""
D G "_UNICODE" 0 35 ""?""
D G "__EVAL" 0 35 ""?"" "Standard Header file for the PIC18F46Q10 device ////////////////"
c L "set_tris_a" 2 3 25 "FUNCTION"
F N "set_tris_a" 2 70 ""
V L "value" 2 70 "int8" `56 
F B "set_tris_a" 2 70 "void(int8 value)" `55 
F N "set_tris_b" 2 71 ""
V L "value" 2 71 "int8" `58 
F B "set_tris_b" 2 71 "void(int8 value)" `57 
F N "set_tris_c" 2 72 ""
V L "value" 2 72 "int8" `60 
F B "set_tris_c" 2 72 "void(int8 value)" `59 
F N "set_tris_d" 2 73 ""
V L "value" 2 73 "int8" `62 
F B "set_tris_d" 2 73 "void(int8 value)" `61 
F N "set_tris_e" 2 74 ""
V L "value" 2 74 "int8" `64 
F B "set_tris_e" 2 74 "void(int8 value)" `63 
F N "set_input_level_a" 2 75 ""
V L "value" 2 75 "int8" `66 
F B "set_input_level_a" 2 75 "void(int8 value)" `65 
F N "set_input_level_b" 2 76 ""
V L "value" 2 76 "int8" `68 
F B "set_input_level_b" 2 76 "void(int8 value)" `67 
F N "set_input_level_c" 2 77 ""
V L "value" 2 77 "int8" `70 
F B "set_input_level_c" 2 77 "void(int8 value)" `69 
F N "set_input_level_d" 2 78 ""
V L "value" 2 78 "int8" `72 
F B "set_input_level_d" 2 78 "void(int8 value)" `71 
F N "set_input_level_e" 2 79 ""
V L "value" 2 79 "int8" `74 
F B "set_input_level_e" 2 79 "void(int8 value)" `73 
F N "set_open_drain_a" 2 80 ""
V L "value" 2 80 "int8" `76 
F B "set_open_drain_a" 2 80 "void(int8 value)" `75 
F N "set_open_drain_b" 2 81 ""
V L "value" 2 81 "int8" `78 
F B "set_open_drain_b" 2 81 "void(int8 value)" `77 
F N "set_open_drain_c" 2 82 ""
V L "value" 2 82 "int8" `80 
F B "set_open_drain_c" 2 82 "void(int8 value)" `79 
F N "set_open_drain_d" 2 83 ""
V L "value" 2 83 "int8" `82 
F B "set_open_drain_d" 2 83 "void(int8 value)" `81 
F N "set_open_drain_e" 2 84 ""
V L "value" 2 84 "int8" `84 
F B "set_open_drain_e" 2 84 "void(int8 value)" `83 
F N "get_tris_a" 2 85 ""
F B "get_tris_a" 2 85 "int8()" `85 
F N "get_tris_b" 2 86 ""
F B "get_tris_b" 2 86 "int8()" `86 
F N "get_tris_c" 2 87 ""
F B "get_tris_c" 2 87 "int8()" `87 
F N "get_tris_d" 2 88 ""
F B "get_tris_d" 2 88 "int8()" `88 
F N "get_tris_e" 2 89 ""
F B "get_tris_e" 2 89 "int8()" `89 
F N "output_a" 2 90 ""
V L "value" 2 90 "int8" `91 
F B "output_a" 2 90 "void(int8 value)" `90 
F N "output_b" 2 91 ""
V L "value" 2 91 "int8" `93 
F B "output_b" 2 91 "void(int8 value)" `92 
F N "output_c" 2 92 ""
V L "value" 2 92 "int8" `95 
F B "output_c" 2 92 "void(int8 value)" `94 
F N "output_d" 2 93 ""
V L "value" 2 93 "int8" `97 
F B "output_d" 2 93 "void(int8 value)" `96 
F N "output_e" 2 94 ""
V L "value" 2 94 "int8" `99 
F B "output_e" 2 94 "void(int8 value)" `98 
F N "input_a" 2 95 ""
F B "input_a" 2 95 "int8()" `100 
F N "input_b" 2 96 ""
F B "input_b" 2 96 "int8()" `101 
F N "input_c" 2 97 ""
F B "input_c" 2 97 "int8()" `102 
F N "input_d" 2 98 ""
F B "input_d" 2 98 "int8()" `103 
F N "input_e" 2 99 ""
F B "input_e" 2 99 "int8()" `104 
F N "input_change_a" 2 100 ""
F B "input_change_a" 2 100 "int8()" `105 
F N "input_change_b" 2 101 ""
F B "input_change_b" 2 101 "int8()" `106 
F N "input_change_c" 2 102 ""
F B "input_change_c" 2 102 "int8()" `107 
F N "input_change_d" 2 103 ""
F B "input_change_d" 2 103 "int8()" `108 
F N "input_change_e" 2 104 ""
F B "input_change_e" 2 104 "int8()" `109 
F N "port_a_pullups" 2 105 ""
V L "upmask" 2 105 "int8" `111 
F B "port_a_pullups" 2 105 "void(int8 upmask)" `110 
F N "port_b_pullups" 2 106 ""
V L "upmask" 2 106 "int8" `113 
F B "port_b_pullups" 2 106 "void(int8 upmask)" `112 
F N "port_c_pullups" 2 107 ""
V L "upmask" 2 107 "int8" `115 
F B "port_c_pullups" 2 107 "void(int8 upmask)" `114 
F N "port_d_pullups" 2 108 ""
V L "upmask" 2 108 "int8" `117 
F B "port_d_pullups" 2 108 "void(int8 upmask)" `116 
F N "port_e_pullups" 2 109 ""
V L "upmask" 2 109 "int8" `119 
F B "port_e_pullups" 2 109 "void(int8 upmask)" `118 
F N "set_slow_slew_a" 2 110 ""
V L "value" 2 110 "int8" `121 
F B "set_slow_slew_a" 2 110 "void(int8 value)" `120 
F N "set_slow_slew_b" 2 111 ""
V L "value" 2 111 "int8" `123 
F B "set_slow_slew_b" 2 111 "void(int8 value)" `122 
F N "set_slow_slew_c" 2 112 ""
V L "value" 2 112 "int8" `125 
F B "set_slow_slew_c" 2 112 "void(int8 value)" `124 
F N "set_slow_slew_d" 2 113 ""
V L "value" 2 113 "int8" `127 
F B "set_slow_slew_d" 2 113 "void(int8 value)" `126 
F N "set_slow_slew_e" 2 114 ""
V L "value" 2 114 "int8" `129 
F B "set_slow_slew_e" 2 114 "void(int8 value)" `128 
F N "input" 2 115 ""
V L "pin" 2 115 "int16" `131 
F B "input" 2 115 "int8(int16 pin)" `130 
F N "input_state" 2 116 ""
V L "pin" 2 116 "int16" `133 
F B "input_state" 2 116 "int8(int16 pin)" `132 
F N "output_low" 2 117 ""
V L "pin" 2 117 "int16" `135 
F B "output_low" 2 117 "void(int16 pin)" `134 
F N "output_high" 2 118 ""
V L "pin" 2 118 "int16" `137 
F B "output_high" 2 118 "void(int16 pin)" `136 
F N "output_toggle" 2 119 ""
V L "pin" 2 119 "int16" `139 
F B "output_toggle" 2 119 "void(int16 pin)" `138 
F N "output_bit" 2 120 ""
V L "pin" 2 120 "int16" `141 
V L "level" 2 120 "int8" `142 
F B "output_bit" 2 120 "void(int16 pin,int8 level)" `140 
F N "output_float" 2 121 ""
V L "pin" 2 121 "int16" `144 
F B "output_float" 2 121 "void(int16 pin)" `143 
F N "output_drive" 2 122 ""
V L "pin" 2 122 "int16" `146 
F B "output_drive" 2 122 "void(int16 pin)" `145  "Constants used to identify pins in the above are:"
D G "PIN_A0" 2 126 "31840"
D G "PIN_A1" 2 127 "31841"
D G "PIN_A2" 2 128 "31842"
D G "PIN_A3" 2 129 "31843"
D G "PIN_A4" 2 130 "31844"
D G "PIN_A5" 2 131 "31845"
D G "PIN_A6" 2 132 "31846"
D G "PIN_A7" 2 133 "31847"
D G "PIN_B0" 2 135 "31848"
D G "PIN_B1" 2 136 "31849"
D G "PIN_B2" 2 137 "31850"
D G "PIN_B3" 2 138 "31851"
D G "PIN_B4" 2 139 "31852"
D G "PIN_B5" 2 140 "31853"
D G "PIN_B6" 2 141 "31854"
D G "PIN_B7" 2 142 "31855"
D G "PIN_C0" 2 144 "31856"
D G "PIN_C1" 2 145 "31857"
D G "PIN_C2" 2 146 "31858"
D G "PIN_C3" 2 147 "31859"
D G "PIN_C4" 2 148 "31860"
D G "PIN_C5" 2 149 "31861"
D G "PIN_C6" 2 150 "31862"
D G "PIN_C7" 2 151 "31863"
D G "PIN_D0" 2 153 "31864"
D G "PIN_D1" 2 154 "31865"
D G "PIN_D2" 2 155 "31866"
D G "PIN_D3" 2 156 "31867"
D G "PIN_D4" 2 157 "31868"
D G "PIN_D5" 2 158 "31869"
D G "PIN_D6" 2 159 "31870"
D G "PIN_D7" 2 160 "31871"
D G "PIN_E0" 2 162 "31872"
D G "PIN_E1" 2 163 "31873"
D G "PIN_E2" 2 164 "31874"
D G "PIN_E3" 2 165 "31875"
D G "FALSE" 2 168 "0"
D G "TRUE" 2 169 "1"
D G "BYTE" 2 171 "int8"
D G "BOOLEAN" 2 172 "int1"
D G "getc" 2 174 "getch"
D G "fgetc" 2 175 "getch"
D G "getchar" 2 176 "getch"
D G "putc" 2 177 "putchar"
D G "fputc" 2 178 "putchar"
D G "fgets" 2 179 "gets"
D G "fputs" 2 180 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
F N "restart_cause" 2 185 ""
F B "restart_cause" 2 185 "int16()" `147 
F N "reset_cpu" 2 186 ""
F B "reset_cpu" 2 186 "void()" `148 
F N "sleep" 2 187 ""
F B "sleep" 2 187 "void()" `149 
F N "sleep" 2 188 ""
V L "type" 2 188 "int8" `151 
F B "sleep" 2 188 "void(int8 type)" `150  "Constants returned from RESTART_CAUSE() are:"
D G "RESTART_NONE" 2 190 "0xF3F" "No restart occurred, most common cause for returning this is restart_cause() was called multiple times."
D G "NORMAL_POWER_UP" 2 191 "0xF3C"
D G "BROWNOUT_RESTART" 2 192 "0xF3E"
D G "RESET_INSTRUCTION" 2 193 "0xF3B"
D G "MCLR_FROM_RUN" 2 194 "0xF37"
D G "WDT_TIMEOUT" 2 195 "0xD2F"
D G "WDT_WINDOW_VIOLATION" 2 196 "0xF1F"
D G "STACK_UNDERFLOW" 2 197 "0xF7F"
D G "STACK_OVERFLOW" 2 198 "0xFBF"
D G "CONFIG_CORRUPTION" 2 199 "0xB3F"
D G "MCLR_FROM_SLEEP" 2 200 "0xE37"
D G "WDT_FROM_SLEEP" 2 201 "0xC3F"
D G "INTERRUPT_FROM_SLEEP" 2 202 "0xE3F"
D G "REG_LOW_POWER" 2 205 "2"
D G "REG_NORMAL" 2 206 "0" "default"
D G "SLEEP_FULL" 2 209 "0" "Default"
D G "SLEEP_IDLE" 2 210 "1" "Clock and peripherals don't stop"
c L "sleep" 2 3 6 "FUNCTION"
F N "setup_timer_0" 2 218 ""
V L "mode" 2 218 "int16" `153 
F B "setup_timer_0" 2 218 "void(int16 mode)" `152 
F N "setup_timer_0" 2 219 ""
V L "mode" 2 219 "int16" `155 
V L "postscale" 2 219 "int8" `156 
F B "setup_timer_0" 2 219 "void(int16 mode,int8 postscale)" `154 
F N "setup_timer_0" 2 220 ""
V L "mode" 2 220 "int16" `158 
V L "period" 2 220 "int8" `159 
V L "postscale" 2 220 "int8" `160 
F B "setup_timer_0" 2 220 "void(int16 mode,int8 period,int8 postscale)" `157  "8-bit mode only"
F N "set_timer0" 2 221 ""
V L "value" 2 221 "int8" `162 
F B "set_timer0" 2 221 "void(int8 value)" `161 
F N "set_timer0" 2 222 ""
V L "value" 2 222 "int16" `164 
F B "set_timer0" 2 222 "void(int16 value)" `163 
F N "get_timer0" 2 223 ""
F B "get_timer0" 2 223 "int8()" `165 
F N "get_timer0" 2 224 ""
f G "get_timer0" 2 224 "int16(int8 mode,int8 prescaler)" `166 
F N "setup_counters" 2 225 ""
V L "mode" 2 225 "int8" `167 
V L "prescaler" 2 225 "int8" `168 
F B "setup_counters" 2 225 "void(int8 mode,int8 prescaler)" `166 
F N "set_rtcc" 2 226 ""
V L "value" 2 226 "int8" `170 
F B "set_rtcc" 2 226 "void(int8 value)" `169 
F N "set_rtcc" 2 227 ""
V L "value" 2 227 "int16" `172 
F B "set_rtcc" 2 227 "void(int16 value)" `171 
F N "get_rtcc" 2 228 ""
F B "get_rtcc" 2 228 "int8()" `173 
F N "get_rtcc" 2 229 ""
f G "get_rtcc" 2 229 "int16(int16 mode)" `174  "Constants used for SETUP_TIMER_0() first parameter are:"
D G "T0_INTERNAL" 2 231 "0x8040"
D G "T0_HFINTOSC" 2 232 "0x8060"
D G "T0_LFINTOSC" 2 233 "0x8080"
D G "T0_SOSC" 2 234 "0x80A0"
D G "T0_EXT_L_TO_H" 2 235 "0x8000"
D G "T0_EXT_H_TO_L" 2 236 "0x8020"
D G "T0_OFF" 2 237 "0"
D G "T0_INPUT_SYNCRONIZED" 2 239 "0x0000"
D G "T0_INPUT_NOT_SYNCRONIZED" 2 240 "0x0010"
D G "T0_DIV_1" 2 242 "0x0000"
D G "T0_DIV_2" 2 243 "0x0001"
D G "T0_DIV_4" 2 244 "0x0002"
D G "T0_DIV_8" 2 245 "0x0003"
D G "T0_DIV_16" 2 246 "0x0004"
D G "T0_DIV_32" 2 247 "0x0005"
D G "T0_DIV_64" 2 248 "0x0006"
D G "T0_DIV_128" 2 249 "0x0007"
D G "T0_DIV_256" 2 250 "0x0008"
D G "T0_DIV_512" 2 251 "0x0009"
D G "T0_DIV_1024" 2 252 "0x000A"
D G "T0_DIV_2048" 2 253 "0x000B"
D G "T0_DIV_4096" 2 254 "0x000C"
D G "T0_DIV_8192" 2 255 "0x000D"
D G "T0_DIV_16384" 2 256 "0x000E"
D G "T0_DIV_32768" 2 257 "0x000F"
D G "T0_8_BIT" 2 259 "0x1000"
D G "T0_16_BIT" 2 260 "0x0000"
D G "RTCC_INTERNAL" 2 265 "0x8040"
D G "RTCC_EXT_L_TO_H" 2 266 "0x8000"
D G "RTCC_EXT_H_TO_L" 2 267 "0x8020"
D G "RTCC_OFF" 2 268 "0x0000"
D G "RTCC_8_BIT" 2 269 "0x1000"
D G "RTCC_DIV_1" 2 271 "0x0000"
D G "RTCC_DIV_2" 2 272 "0x0001"
D G "RTCC_DIV_4" 2 273 "0x0002"
D G "RTCC_DIV_8" 2 274 "0x0003"
D G "RTCC_DIV_16" 2 275 "0x0004"
D G "RTCC_DIV_32" 2 276 "0x0005"
D G "RTCC_DIV_64" 2 277 "0x0006"
D G "RTCC_DIV_128" 2 278 "0x0007"
D G "RTCC_DIV_256" 2 279 "0x0008"
c L "get_rtcc" 2 3 6 "FUNCTION"
F N "setup_wdt" 2 287 ""
V L "mode" 2 287 "int16" `175 
F B "setup_wdt" 2 287 "void(int16 mode)" `174 
F N "restart_wdt" 2 288 ""
F B "restart_wdt" 2 288 "void()" `176 
F N "get_wdt" 2 289 ""
F B "get_wdt" 2 289 "int8()" `177  "Constants used for SETUP_WDT() are:"
D G "WDT_ON" 2 292 "0x8000"
D G "WDT_OFF" 2 293 "0x0000"
D G "WDT_1MS" 2 296 "0x0001"
D G "WDT_2MS" 2 297 "0x0003"
D G "WDT_4MS" 2 298 "0x0005"
D G "WDT_8MS" 2 299 "0x0007"
D G "WDT_16MS" 2 300 "0x0009"
D G "WDT_32MS" 2 301 "0x000B"
D G "WDT_64MS" 2 302 "0x000D"
D G "WDT_128MS" 2 303 "0x000F"
D G "WDT_256MS" 2 304 "0x0011"
D G "WDT_512MS" 2 305 "0x0013"
D G "WDT_1S" 2 306 "0x0015"
D G "WDT_2S" 2 307 "0x0017"
D G "WDT_4S" 2 308 "0x0019"
D G "WDT_8S" 2 309 "0x001B"
D G "WDT_16S" 2 310 "0x001D"
D G "WDT_32S" 2 311 "0x001F"
D G "WDT_64S" 2 312 "0x0021"
D G "WDT_128S" 2 313 "0x0023"
D G "WDT_256S" 2 314 "0x0025"
D G "WDT_WINDOW_12_PERCENT" 2 317 "0x0800"
D G "WDT_WINDOW_25_PERCENT" 2 318 "0x0100"
D G "WDT_WINDOW_37_PERCENT" 2 319 "0x0200"
D G "WDT_WINDOW_50_PERCENT" 2 320 "0x0300"
D G "WDT_WINDOW_62_PERCENT" 2 321 "0x0400"
D G "WDT_WINDOW_75_PERCENT" 2 322 "0x0500"
D G "WDT_WINDOW_87_PERCENT" 2 323 "0x0600"
D G "WDT_WINDOW_100_PERCENT" 2 324 "0x0700"
D G "WDT_CLK_31000" 2 327 "0x0000"
D G "WDT_CLK_31250" 2 328 "0x1000"
c L "get_wdt" 2 3 3 "FUNCTION"
F N "setup_timer_1" 2 335 ""
V L "mode" 2 335 "int32" `180 
F B "setup_timer_1" 2 335 "void(int32 mode)" `179 
F N "get_timer1" 2 336 ""
F B "get_timer1" 2 336 "int16()" `181 
F N "set_timer1" 2 337 ""
V L "value" 2 337 "int16" `183 
F B "set_timer1" 2 337 "void(int16 value)" `182  "Constants used for SETUP_TIMER_1() are:"
D G "T1_DISABLED" 2 340 "0"
D G "T1_EXTERNAL" 2 341 "0x0003"
D G "T1_INTERNAL" 2 342 "0x0103"
D G "T1_FOSC" 2 343 "0x0203"
D G "T1_HFINTRC" 2 344 "0x0303"
D G "T1_LFINTRC" 2 345 "0x0403"
D G "T1_MFINTRC" 2 346 "0x0503"
D G "T1_SOSC" 2 347 "0x0603"
D G "T1_CLKREF" 2 348 "0x0703"
D G "T1_TIMER0" 2 349 "0x0803"
D G "T1_TIMER3" 2 350 "0x0A03"
D G "T1_TIMER5" 2 351 "0x0B03"
D G "T1_CLC1" 2 352 "0x1003"
D G "T1_CLC2" 2 353 "0x1103"
D G "T1_CLC3" 2 354 "0x1203"
D G "T1_CLC4" 2 355 "0x1303"
D G "T1_CLC5" 2 356 "0x1403"
D G "T1_CLC6" 2 357 "0x1503"
D G "T1_CLC7" 2 358 "0x1603"
D G "T1_CLC8" 2 359 "0x1703"
D G "T1_SYNC" 2 361 "0x04"
D G "T1_DIV_BY_1" 2 363 "0"
D G "T1_DIV_BY_2" 2 364 "0x10"
D G "T1_DIV_BY_4" 2 365 "0x20"
D G "T1_DIV_BY_8" 2 366 "0x30"
D G "T1_GATE" 2 368 "0x8000"
D G "T1_GATE_INVERTED" 2 369 "0xC000"
D G "T1_GATE_TOGGLE" 2 370 "0xA000"
D G "T1_GATE_SINGLE" 2 371 "0x9000"
D G "T1_GATE_TIMER0" 2 372 "0x018000"
D G "T1_GATE_TIMER2" 2 373 "0x038000"
D G "T1_GATE_TIMER3" 2 374 "0x048000"
D G "T1_GATE_TIMER4" 2 375 "0x058000"
D G "T1_GATE_TIMER5" 2 376 "0x068000"
D G "T1_GATE_TIMER6" 2 377 "0x078000"
D G "T1_GATE_CCP1" 2 378 "0x088000"
D G "T1_GATE_CCP2" 2 379 "0x098000"
D G "T1_GATE_PWM3" 2 380 "0x0A8000"
D G "T1_GATE_PWM4" 2 381 "0x0B8000"
D G "T1_GATE_COMP1" 2 382 "0x0C8000"
D G "T1_GATE_COMP2" 2 383 "0x0D8000"
D G "T1_GATE_ZCD" 2 384 "0x0E8000"
D G "T1_GATE_CLC1" 2 385 "0x108000"
D G "T1_GATE_CLC2" 2 386 "0x118000"
D G "T1_GATE_CLC3" 2 387 "0x128000"
D G "T1_GATE_CLC4" 2 388 "0x138000"
D G "T1_GATE_CLC5" 2 389 "0x148000"
D G "T1_GATE_CLC6" 2 390 "0x158000"
D G "T1_GATE_CLC7" 2 391 "0x168000"
D G "T1_GATE_CLC8" 2 392 "0x178000"
c L "set_timer1" 2 3 3 "FUNCTION"
F N "setup_timer_2" 2 397 ""
V L "mode" 2 397 "int32" `185 
V L "period" 2 397 "int8" `186 
V L "postscaler" 2 397 "int8" `187 
F B "setup_timer_2" 2 397 "void(int32 mode,int8 period,int8 postscaler)" `184 
F N "get_timer2" 2 398 ""
F B "get_timer2" 2 398 "int8()" `188 
F N "set_timer2" 2 399 ""
V L "value" 2 399 "int8" `190 
F B "set_timer2" 2 399 "void(int8 value)" `189  "Constants used for SETUP_TIMER_2() are:"
D G "T2_DISABLED" 2 401 "0"
D G "T2_DIV_BY_1" 2 402 "0x80"
D G "T2_DIV_BY_2" 2 403 "0x90"
D G "T2_DIV_BY_4" 2 404 "0xA0"
D G "T2_DIV_BY_8" 2 405 "0xB0"
D G "T2_DIV_BY_16" 2 406 "0xC0"
D G "T2_DIV_BY_32" 2 407 "0xD0"
D G "T2_DIV_BY_64" 2 408 "0xE0"
D G "T2_DIV_BY_128" 2 409 "0xF0"
D G "T2_CLK_T2IN" 2 411 "0"
D G "T2_CLK_INTERNAL" 2 412 "0x0100" "FOSC/4"
D G "T2_CLK_FOSC" 2 413 "0x0200"
D G "T2_CLK_HFINTRC" 2 414 "0x0300"
D G "T2_CLK_LFINTRC" 2 415 "0x0400"
D G "T2_CLK_MFINTRC" 2 416 "0x0500"
D G "T2_CLK_SOSC" 2 417 "0x0600"
D G "T2_CLK_CLKR" 2 418 "0x0700"
D G "T2_CLK_ZCD" 2 419 "0x0800"
D G "T2_CLK_CLC1" 2 420 "0x1000"
D G "T2_CLK_CLC2" 2 421 "0x1100"
D G "T2_CLK_CLC3" 2 422 "0x1200"
D G "T2_CLK_CLC4" 2 423 "0x1300"
D G "T2_CLK_CLC5" 2 424 "0x1400"
D G "T2_CLK_CLC6" 2 425 "0x1500"
D G "T2_CLK_CLC7" 2 426 "0x1600"
D G "T2_CLK_CLC8" 2 427 "0x1700"
D G "T2_START_IMMEDIATELY" 2 430 "0"
D G "T2_START_WHEN_HIGH" 2 431 "0x010000"
D G "T2_START_WHEN_LOW" 2 432 "0x020000"
D G "T2_RESET_ON_BOTH_EDGES" 2 433 "0x030000"
D G "T2_RESET_ON_RE" 2 434 "0x040000"
D G "T2_RESET_ON_FE" 2 435 "0x050000"
D G "T2_RESET_WHEN_LOW" 2 436 "0x060000"
D G "T2_RESET_WHEN_HIGH" 2 437 "0x070000"
D G "T2_ONE_SHOT_START_IMMEDIATELY" 2 438 "0x080000"
D G "T2_ONE_SHOT_START_ON_RE" 2 439 "0x090000"
D G "T2_ONE_SHOT_START_ON_FE" 2 440 "0x0A0000"
D G "T2_ONE_SHOT_START_ON_BOTH_EDGES" 2 441 "0x0B0000"
D G "T2_ONE_SHOT_START_ON_RE_RESET_ON_RE" 2 442 "0x0C0000" "starts on first rising edge, resets on subsequent rising edges"
D G "T2_ONE_SHOT_START_ON_FE_RESET_ON_FE" 2 443 "0x0D0000" "starts on first falling edge, resets on subsequent falling edges"
D G "T2_ONE_SHOT_START_ON_RE_RESET_WHEN_LOW" 2 444 "0x0E0000"
D G "T2_ONE_SHOT_START_ON_FE_RESET_WHEN_HIGH" 2 445 "0x0F0000"
D G "T2_MONO_STABLE_START_ON_RE" 2 446 "0x110000"
D G "T2_MONO_STABLE_START_ON_FE" 2 447 "0x120000"
D G "T2_MONO_STABLE_START_ON_EE" 2 448 "0x130000"
D G "T2_ONE_SHOT_START_WHEN_HIGH_RESET_WHEN_LOW" 2 449 "0x160000"
D G "T2_ONE_SHOT_START_WHEN_LOW_RESET_WHEN_HIGH" 2 450 "0x170000"
D G "T2_SYNC_ON_WITH_T2CLK" 2 452 "0x200000"
D G "T2_INVERTED" 2 453 "0x400000"
D G "T2_SYNC_PRESCALER_WITH_CLK" 2 454 "0x800000"
D G "T2_RESET_FROM_T2IN" 2 457 "0"
D G "T2_RESET_FROM_TMR4" 2 458 "0x02000000"
D G "T2_RESET_FROM_TMR6" 2 459 "0x03000000"
D G "T2_RESET_FROM_CCP1" 2 460 "0x04000000"
D G "T2_RESET_FROM_CCP2" 2 461 "0x05000000"
D G "T2_RESET_FROM_PWM3" 2 462 "0x06000000"
D G "T2_RESET_FROM_PWM4" 2 463 "0x07000000"
D G "T2_RESET_FROM_C1OUT" 2 464 "0x08000000"
D G "T2_RESET_FROM_C2OUT" 2 465 "0x09000000"
D G "T2_RESET_FROM_ZCD" 2 466 "0x0A000000"
D G "T2_RESET_FROM_U1DT" 2 467 "0x0C000000"
D G "T2_RESET_FROM_U1TX" 2 468 "0x0D000000"
D G "T2_RESET_FROM_U2DT" 2 469 "0x0E000000"
D G "T2_RESET_FROM_U2TX" 2 470 "0x0F000000"
D G "T2_RESET_FROM_CLC1" 2 471 "0x10000000"
D G "T2_RESET_FROM_CLC2" 2 472 "0x11000000"
D G "T2_RESET_FROM_CLC3" 2 473 "0x12000000"
D G "T2_RESET_FROM_CLC4" 2 474 "0x13000000"
D G "T2_RESET_FROM_CLC5" 2 475 "0x14000000"
D G "T2_RESET_FROM_CLC6" 2 476 "0x15000000"
D G "T2_RESET_FROM_CLC7" 2 477 "0x16000000"
D G "T2_RESET_FROM_CLC8" 2 478 "0x17000000"
c L "set_timer2" 2 3 3 "FUNCTION"
F N "setup_timer_3" 2 483 ""
V L "mode" 2 483 "int32" `192 
F B "setup_timer_3" 2 483 "void(int32 mode)" `191 
F N "get_timer3" 2 484 ""
F B "get_timer3" 2 484 "int16()" `193 
F N "set_timer3" 2 485 ""
V L "value" 2 485 "int16" `195 
F B "set_timer3" 2 485 "void(int16 value)" `194  "Constants used for SETUP_TIMER_3() are:"
D G "T3_DISABLED" 2 488 "0"
D G "T3_EXTERNAL" 2 489 "0x0003"
D G "T3_INTERNAL" 2 490 "0x0103"
D G "T3_FOSC" 2 491 "0x0203"
D G "T3_HFINTRC" 2 492 "0x0303"
D G "T3_LFINTRC" 2 493 "0x0403"
D G "T3_MFINTRC" 2 494 "0x0503"
D G "T3_SOSC" 2 495 "0x0603"
D G "T3_CLKREF" 2 496 "0x0703"
D G "T3_TIMER0" 2 497 "0x0803"
D G "T3_TIMER1" 2 498 "0x0903"
D G "T3_TIMER5" 2 499 "0x0B03"
D G "T3_CLC1" 2 500 "0x1003"
D G "T3_CLC2" 2 501 "0x1103"
D G "T3_CLC3" 2 502 "0x1203"
D G "T3_CLC4" 2 503 "0x1303"
D G "T3_CLC5" 2 504 "0x1403"
D G "T3_CLC6" 2 505 "0x1503"
D G "T3_CLC7" 2 506 "0x1603"
D G "T3_CLC8" 2 507 "0x1703"
D G "T3_SYNC" 2 509 "0x04"
D G "T3_DIV_BY_1" 2 511 "0"
D G "T3_DIV_BY_2" 2 512 "0x10"
D G "T3_DIV_BY_4" 2 513 "0x20"
D G "T3_DIV_BY_8" 2 514 "0x30"
D G "T3_GATE" 2 516 "0x8000"
D G "T3_GATE_INVERTED" 2 517 "0xC000"
D G "T3_GATE_TOGGLE" 2 518 "0xA000"
D G "T3_GATE_SINGLE" 2 519 "0x9000"
D G "T3_GATE_TIMER0" 2 520 "0x018000"
D G "T3_GATE_TIMER1" 2 521 "0x028000"
D G "T3_GATE_TIMER2" 2 522 "0x038000"
D G "T3_GATE_TIMER4" 2 523 "0x058000"
D G "T3_GATE_TIMER5" 2 524 "0x068000"
D G "T3_GATE_TIMER6" 2 525 "0x078000"
D G "T3_GATE_CCP1" 2 526 "0x088000"
D G "T3_GATE_CCP2" 2 527 "0x098000"
D G "T3_GATE_PWM3" 2 528 "0x0A8000"
D G "T3_GATE_PWM4" 2 529 "0x0B8000"
D G "T3_GATE_COMP1" 2 530 "0x0C8000"
D G "T3_GATE_COMP2" 2 531 "0x0D8000"
D G "T3_GATE_ZCD" 2 532 "0x0E8000"
D G "T3_GATE_CLC1" 2 533 "0x108000"
D G "T3_GATE_CLC2" 2 534 "0x118000"
D G "T3_GATE_CLC3" 2 535 "0x128000"
D G "T3_GATE_CLC4" 2 536 "0x138000"
D G "T3_GATE_CLC5" 2 537 "0x148000"
D G "T3_GATE_CLC6" 2 538 "0x158000"
D G "T3_GATE_CLC7" 2 539 "0x168000"
D G "T3_GATE_CLC8" 2 540 "0x178000"
c L "set_timer3" 2 3 3 "FUNCTION"
F N "setup_timer_4" 2 545 ""
V L "mode" 2 545 "int32" `197 
V L "period" 2 545 "int8" `198 
V L "postscaler" 2 545 "int8" `199 
F B "setup_timer_4" 2 545 "void(int32 mode,int8 period,int8 postscaler)" `196 
F N "get_timer4" 2 546 ""
F B "get_timer4" 2 546 "int8()" `200 
F N "set_timer4" 2 547 ""
V L "value" 2 547 "int8" `202 
F B "set_timer4" 2 547 "void(int8 value)" `201  "Constants used for SETUP_TIMER_4() are:"
D G "T4_DISABLED" 2 549 "0"
D G "T4_DIV_BY_1" 2 550 "0x80"
D G "T4_DIV_BY_2" 2 551 "0x90"
D G "T4_DIV_BY_4" 2 552 "0xA0"
D G "T4_DIV_BY_8" 2 553 "0xB0"
D G "T4_DIV_BY_16" 2 554 "0xC0"
D G "T4_DIV_BY_32" 2 555 "0xD0"
D G "T4_DIV_BY_64" 2 556 "0xE0"
D G "T4_DIV_BY_128" 2 557 "0xF0"
D G "T4_CLK_T4IN" 2 559 "0"
D G "T4_CLK_INTERNAL" 2 560 "0x0100" "FOSC/4"
D G "T4_CLK_FOSC" 2 561 "0x0200"
D G "T4_CLK_HFINTRC" 2 562 "0x0300"
D G "T4_CLK_LFINTRC" 2 563 "0x0400"
D G "T4_CLK_MFINTRC" 2 564 "0x0500"
D G "T4_CLK_SOSC" 2 565 "0x0600"
D G "T4_CLK_CLKR" 2 566 "0x0700"
D G "T4_CLK_ZCD" 2 567 "0x0800"
D G "T4_CLK_CLC1" 2 568 "0x1000"
D G "T4_CLK_CLC2" 2 569 "0x1100"
D G "T4_CLK_CLC3" 2 570 "0x1200"
D G "T4_CLK_CLC4" 2 571 "0x1300"
D G "T4_CLK_CLC5" 2 572 "0x1400"
D G "T4_CLK_CLC6" 2 573 "0x1500"
D G "T4_CLK_CLC7" 2 574 "0x1600"
D G "T4_CLK_CLC8" 2 575 "0x1700"
D G "T4_START_IMMEDIATELY" 2 578 "0"
D G "T4_START_WHEN_HIGH" 2 579 "0x010000"
D G "T4_START_WHEN_LOW" 2 580 "0x020000"
D G "T4_RESET_ON_BOTH_EDGES" 2 581 "0x030000"
D G "T4_RESET_ON_RE" 2 582 "0x040000"
D G "T4_RESET_ON_FE" 2 583 "0x050000"
D G "T4_RESET_WHEN_LOW" 2 584 "0x060000"
D G "T4_RESET_WHEN_HIGH" 2 585 "0x070000"
D G "T4_ONE_SHOT_START_IMMEDIATELY" 2 586 "0x080000"
D G "T4_ONE_SHOT_START_ON_RE" 2 587 "0x090000"
D G "T4_ONE_SHOT_START_ON_FE" 2 588 "0x0A0000"
D G "T4_ONE_SHOT_START_ON_BOTH_EDGES" 2 589 "0x0B0000"
D G "T4_ONE_SHOT_START_ON_RE_RESET_ON_RE" 2 590 "0x0C0000" "starts on first rising edge, resets on subsequent rising edges"
D G "T4_ONE_SHOT_START_ON_FE_RESET_ON_FE" 2 591 "0x0D0000" "starts on first falling edge, resets on subsequent falling edges"
D G "T4_ONE_SHOT_START_ON_RE_RESET_WHEN_LOW" 2 592 "0x0E0000"
D G "T4_ONE_SHOT_START_ON_FE_RESET_WHEN_HIGH" 2 593 "0x0F0000"
D G "T4_MONO_STABLE_START_ON_RE" 2 594 "0x110000"
D G "T4_MONO_STABLE_START_ON_FE" 2 595 "0x120000"
D G "T4_MONO_STABLE_START_ON_EE" 2 596 "0x130000"
D G "T4_ONE_SHOT_START_WHEN_HIGH_RESET_WHEN_LOW" 2 597 "0x160000"
D G "T4_ONE_SHOT_START_WHEN_LOW_RESET_WHEN_HIGH" 2 598 "0x170000"
D G "T4_SYNC_ON_WITH_T2CLK" 2 601 "0x200000"
D G "T4_INVERTED" 2 602 "0x400000"
D G "T4_SYNC_PRESCALER_WITH_CLK" 2 603 "0x800000"
D G "T4_RESET_FROM_T4IN" 2 606 "0"
D G "T4_RESET_FROM_TMR2" 2 607 "0x01000000"
D G "T4_RESET_FROM_TMR6" 2 608 "0x03000000"
D G "T4_RESET_FROM_CCP1" 2 609 "0x04000000"
D G "T4_RESET_FROM_CCP2" 2 610 "0x05000000"
D G "T4_RESET_FROM_PWM3" 2 611 "0x06000000"
D G "T4_RESET_FROM_PWM4" 2 612 "0x07000000"
D G "T4_RESET_FROM_C1OUT" 2 613 "0x08000000"
D G "T4_RESET_FROM_C2OUT" 2 614 "0x09000000"
D G "T4_RESET_FROM_ZCD" 2 615 "0x0A000000"
D G "T4_RESET_FROM_U1DT" 2 616 "0x0C000000"
D G "T4_RESET_FROM_U1TX" 2 617 "0x0D000000"
D G "T4_RESET_FROM_U2DT" 2 618 "0x0E000000"
D G "T4_RESET_FROM_U2TX" 2 619 "0x0F000000"
D G "T4_RESET_FROM_CLC1" 2 620 "0x10000000"
D G "T4_RESET_FROM_CLC2" 2 621 "0x11000000"
D G "T4_RESET_FROM_CLC3" 2 622 "0x12000000"
D G "T4_RESET_FROM_CLC4" 2 623 "0x13000000"
D G "T4_RESET_FROM_CLC5" 2 624 "0x14000000"
D G "T4_RESET_FROM_CLC6" 2 625 "0x15000000"
D G "T4_RESET_FROM_CLC7" 2 626 "0x16000000"
D G "T4_RESET_FROM_CLC8" 2 627 "0x17000000"
c L "set_timer4" 2 3 3 "FUNCTION"
F N "setup_timer_5" 2 632 ""
V L "mode" 2 632 "int32" `204 
F B "setup_timer_5" 2 632 "void(int32 mode)" `203 
F N "get_timer5" 2 633 ""
F B "get_timer5" 2 633 "int16()" `205 
F N "set_timer5" 2 634 ""
V L "value" 2 634 "int16" `207 
F B "set_timer5" 2 634 "void(int16 value)" `206  "Constants used for SETUP_TIMER_5() are:"
D G "T5_DISABLED" 2 637 "0"
D G "T5_EXTERNAL" 2 638 "0x0003"
D G "T5_INTERNAL" 2 639 "0x0103"
D G "T5_FOSC" 2 640 "0x0203"
D G "T5_HFINTRC" 2 641 "0x0303"
D G "T5_LFINTRC" 2 642 "0x0403"
D G "T5_MFINTRC" 2 643 "0x0503"
D G "T5_SOSC" 2 644 "0x0603"
D G "T5_CLKREF" 2 645 "0x0703"
D G "T5_TIMER0" 2 646 "0x0803"
D G "T5_TIMER1" 2 647 "0x0903"
D G "T5_TIMER3" 2 648 "0x0A03"
D G "T5_CLC1" 2 649 "0x1003"
D G "T5_CLC2" 2 650 "0x1103"
D G "T5_CLC3" 2 651 "0x1203"
D G "T5_CLC4" 2 652 "0x1303"
D G "T5_CLC5" 2 653 "0x1403"
D G "T5_CLC6" 2 654 "0x1503"
D G "T5_CLC7" 2 655 "0x1603"
D G "T5_CLC8" 2 656 "0x1703"
D G "T5_SYNC" 2 658 "0x04"
D G "T5_DIV_BY_1" 2 660 "0"
D G "T5_DIV_BY_2" 2 661 "0x10"
D G "T5_DIV_BY_4" 2 662 "0x20"
D G "T5_DIV_BY_8" 2 663 "0x30"
D G "T5_GATE" 2 665 "0x8000"
D G "T5_GATE_INVERTED" 2 666 "0xC000"
D G "T5_GATE_TOGGLE" 2 667 "0xA000"
D G "T5_GATE_SINGLE" 2 668 "0x9000"
D G "T5_GATE_TIMER0" 2 669 "0x018000"
D G "T5_GATE_TIMER1" 2 670 "0x028000"
D G "T5_GATE_TIMER2" 2 671 "0x038000"
D G "T5_GATE_TIMER3" 2 672 "0x048000"
D G "T5_GATE_TIMER4" 2 673 "0x058000"
D G "T5_GATE_TIMER6" 2 674 "0x078000"
D G "T5_GATE_CCP1" 2 675 "0x088000"
D G "T5_GATE_CCP2" 2 676 "0x098000"
D G "T5_GATE_PWM3" 2 677 "0x0A8000"
D G "T5_GATE_PWM4" 2 678 "0x0B8000"
D G "T5_GATE_COMP1" 2 679 "0x0C8000"
D G "T5_GATE_COMP2" 2 680 "0x0D8000"
D G "T5_GATE_ZCD" 2 681 "0x0E8000"
D G "T5_GATE_CLC1" 2 682 "0x108000"
D G "T5_GATE_CLC2" 2 683 "0x118000"
D G "T5_GATE_CLC3" 2 684 "0x128000"
D G "T5_GATE_CLC4" 2 685 "0x138000"
D G "T5_GATE_CLC5" 2 686 "0x148000"
D G "T5_GATE_CLC6" 2 687 "0x158000"
D G "T5_GATE_CLC7" 2 688 "0x168000"
D G "T5_GATE_CLC8" 2 689 "0x178000"
c L "set_timer5" 2 3 3 "FUNCTION"
F N "setup_timer_6" 2 694 ""
V L "mode" 2 694 "int32" `209 
V L "period" 2 694 "int8" `210 
V L "postscaler" 2 694 "int8" `211 
F B "setup_timer_6" 2 694 "void(int32 mode,int8 period,int8 postscaler)" `208 
F N "get_timer6" 2 695 ""
F B "get_timer6" 2 695 "int8()" `212 
F N "set_timer6" 2 696 ""
V L "value" 2 696 "int8" `214 
F B "set_timer6" 2 696 "void(int8 value)" `213  "Constants used for SETUP_TIMER_6() are:"
D G "T6_DISABLED" 2 698 "0"
D G "T6_DIV_BY_1" 2 699 "0x80"
D G "T6_DIV_BY_2" 2 700 "0x90"
D G "T6_DIV_BY_4" 2 701 "0xA0"
D G "T6_DIV_BY_8" 2 702 "0xB0"
D G "T6_DIV_BY_16" 2 703 "0xC0"
D G "T6_DIV_BY_32" 2 704 "0xD0"
D G "T6_DIV_BY_64" 2 705 "0xE0"
D G "T6_DIV_BY_128" 2 706 "0xF0"
D G "T6_CLK_T6IN" 2 708 "0"
D G "T6_CLK_INTERNAL" 2 709 "0x0100" "FOSC/4"
D G "T6_CLK_FOSC" 2 710 "0x0200"
D G "T6_CLK_HFINTRC" 2 711 "0x0300"
D G "T6_CLK_LFINTRC" 2 712 "0x0400"
D G "T6_CLK_MFINTRC" 2 713 "0x0500"
D G "T6_CLK_SOSC" 2 714 "0x0600"
D G "T6_CLK_CLKR" 2 715 "0x0700"
D G "T6_CLK_ZCD" 2 716 "0x0800"
D G "T6_CLK_CLC1" 2 717 "0x1000"
D G "T6_CLK_CLC2" 2 718 "0x1100"
D G "T6_CLK_CLC3" 2 719 "0x1200"
D G "T6_CLK_CLC4" 2 720 "0x1300"
D G "T6_CLK_CLC5" 2 721 "0x1400"
D G "T6_CLK_CLC6" 2 722 "0x1500"
D G "T6_CLK_CLC7" 2 723 "0x1600"
D G "T6_CLK_CLC8" 2 724 "0x1700"
D G "T6_START_IMMEDIATELY" 2 727 "0"
D G "T6_START_WHEN_HIGH" 2 728 "0x010000"
D G "T6_START_WHEN_LOW" 2 729 "0x020000"
D G "T6_RESET_ON_BOTH_EDGES" 2 730 "0x030000"
D G "T6_RESET_ON_RE" 2 731 "0x040000"
D G "T6_RESET_ON_FE" 2 732 "0x050000"
D G "T6_RESET_WHEN_LOW" 2 733 "0x060000"
D G "T6_RESET_WHEN_HIGH" 2 734 "0x070000"
D G "T6_ONE_SHOT_START_IMMEDIATELY" 2 735 "0x080000"
D G "T6_ONE_SHOT_START_ON_RE" 2 736 "0x090000"
D G "T6_ONE_SHOT_START_ON_FE" 2 737 "0x0A0000"
D G "T6_ONE_SHOT_START_ON_BOTH_EDGES" 2 738 "0x0B0000"
D G "T6_ONE_SHOT_START_ON_RE_RESET_ON_RE" 2 739 "0x0C0000" "starts on first rising edge, resets on subsequent rising edges"
D G "T6_ONE_SHOT_START_ON_FE_RESET_ON_FE" 2 740 "0x0D0000" "starts on first falling edge, resets on subsequent falling edges"
D G "T6_ONE_SHOT_START_ON_RE_RESET_WHEN_LOW" 2 741 "0x0E0000"
D G "T6_ONE_SHOT_START_ON_FE_RESET_WHEN_HIGH" 2 742 "0x0F0000"
D G "T6_MONO_STABLE_START_ON_RE" 2 743 "0x110000"
D G "T6_MONO_STABLE_START_ON_FE" 2 744 "0x120000"
D G "T6_MONO_STABLE_START_ON_EE" 2 745 "0x130000"
D G "T6_ONE_SHOT_START_WHEN_HIGH_RESET_WHEN_LOW" 2 746 "0x160000"
D G "T6_ONE_SHOT_START_WHEN_LOW_RESET_WHEN_HIGH" 2 747 "0x170000"
D G "T6_SYNC_ON_WITH_T2CLK" 2 749 "0x200000"
D G "T6_INVERTED" 2 750 "0x400000"
D G "T6_SYNC_PRESCALER_WITH_CLK" 2 751 "0x800000"
D G "T6_RESET_FROM_T6IN" 2 754 "0"
D G "T6_RESET_FROM_TMR2" 2 755 "0x01000000"
D G "T6_RESET_FROM_TMR4" 2 756 "0x02000000"
D G "T6_RESET_FROM_CCP1" 2 757 "0x04000000"
D G "T6_RESET_FROM_CCP2" 2 758 "0x05000000"
D G "T6_RESET_FROM_PWM3" 2 759 "0x06000000"
D G "T6_RESET_FROM_PWM4" 2 760 "0x07000000"
D G "T6_RESET_FROM_C1OUT" 2 761 "0x08000000"
D G "T6_RESET_FROM_C2OUT" 2 762 "0x09000000"
D G "T6_RESET_FROM_ZCD" 2 763 "0x0A000000"
D G "T6_RESET_FROM_U1DT" 2 764 "0x0C000000"
D G "T6_RESET_FROM_U1TX" 2 765 "0x0D000000"
D G "T6_RESET_FROM_U2DT" 2 766 "0x0E000000"
D G "T6_RESET_FROM_U2TX" 2 767 "0x0F000000"
D G "T6_RESET_FROM_CLC1" 2 768 "0x10000000"
D G "T6_RESET_FROM_CLC2" 2 769 "0x11000000"
D G "T6_RESET_FROM_CLC3" 2 770 "0x12000000"
D G "T6_RESET_FROM_CLC4" 2 771 "0x13000000"
D G "T6_RESET_FROM_CLC5" 2 772 "0x14000000"
D G "T6_RESET_FROM_CLC6" 2 773 "0x15000000"
D G "T6_RESET_FROM_CLC7" 2 774 "0x16000000"
D G "T6_RESET_FROM_CLC8" 2 775 "0x17000000"
c L "set_timer6" 2 3 4 "FUNCTION"
F N "setup_ccp1" 2 781 ""
V L "mode" 2 781 "int32" `216 
F B "setup_ccp1" 2 781 "void(int32 mode)" `215 
F N "setup_ccp1" 2 782 ""
V L "mode" 2 782 "int32" `218 
V L "pwm" 2 782 "int8" `219 
F B "setup_ccp1" 2 782 "void(int32 mode,int8 pwm)" `217 
F N "set_pwm1_duty" 2 783 ""
V L "value" 2 783 "int8" `221 
F B "set_pwm1_duty" 2 783 "void(int8 value)" `220 
F N "set_pwm1_duty" 2 784 ""
V L "value" 2 784 "int16" `223 
F B "set_pwm1_duty" 2 784 "void(int16 value)" `222  "Constants used for SETUP_CCPx() are:"
D G "CCP_OFF" 2 786 "0"
D G "CCP_CAPTURE_EE" 2 787 "0x03"
D G "CCP_CAPTURE_FE" 2 788 "0x04"
D G "CCP_CAPTURE_RE" 2 789 "0x05"
D G "CCP_CAPTURE_DIV_4" 2 790 "0x06"
D G "CCP_CAPTURE_DIV_16" 2 791 "0x07"
D G "CCP_COMPARE_TOGGLE_RESET_TIMER" 2 792 "0x01"
D G "CCP_COMPARE_TOGGLE" 2 793 "0x02"
D G "CCP_COMPARE_SET_ON_MATCH" 2 794 "0x08"
D G "CCP_COMPARE_CLR_ON_MATCH" 2 795 "0x09"
D G "CCP_COMPARE_PULSE" 2 796 "0x0A"
D G "CCP_COMPARE_PULSE_RESET_TIMER" 2 797 "0x0B"
D G "CCP_PWM" 2 798 "0x0C"
D G "CCP_CAPTURE_INPUT_CCP_PIN" 2 800 "0"
D G "CCP_CAPTURE_INPUT_C1OUT" 2 801 "0x010000"
D G "CCP_CAPTURE_INPUT_C2OUT" 2 802 "0x020000"
D G "CCP_CAPTURE_INPUT_IOC_INTERRUPT" 2 803 "0x030000"
D G "CCP_CAPTURE_INPUT_CLC1" 2 804 "0x080000"
D G "CCP_CAPTURE_INPUT_CLC2" 2 805 "0x090000"
D G "CCP_CAPTURE_INPUT_CLC3" 2 806 "0x0A0000"
D G "CCP_CAPTURE_INPUT_CLC4" 2 807 "0x0B0000"
D G "CCP_CAPTURE_INPUT_CLC5" 2 808 "0x0C0000"
D G "CCP_CAPTURE_INPUT_CLC6" 2 809 "0x0D0000"
D G "CCP_CAPTURE_INPUT_CLC7" 2 810 "0x0E0000"
D G "CCP_CAPTURE_INPUT_CLC8" 2 811 "0x0F0000"
D G "CCP_PWM_LEFT_JUSTIFIED_DUTY" 2 813 "0x10"
D G "CCP_USE_TIMER1_AND_TIMER2" 2 822 "0x0000"
D G "CCP_USE_TIMER3_AND_TIMER4" 2 823 "0x0100"
D G "CCP_USE_TIMER5_AND_TIMER6" 2 824 "0x0200"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
F N "setup_ccp2" 2 827 ""
V L "mode" 2 827 "int32" `228 
F B "setup_ccp2" 2 827 "void(int32 mode)" `227 
F N "setup_ccp2" 2 828 ""
V L "mode" 2 828 "int32" `230 
V L "pwm" 2 828 "int8" `231 
F B "setup_ccp2" 2 828 "void(int32 mode,int8 pwm)" `229 
F N "set_pwm2_duty" 2 829 ""
V L "value" 2 829 "int8" `233 
F B "set_pwm2_duty" 2 829 "void(int8 value)" `232 
F N "set_pwm2_duty" 2 830 ""
V L "value" 2 830 "int16" `235 
F B "set_pwm2_duty" 2 830 "void(int16 value)" `234 
c L "set_pwm2_duty" 2 3 3 "FUNCTION"
F N "setup_pwm3" 2 838 ""
V L "mode" 2 838 "int16" `240 
F B "setup_pwm3" 2 838 "void(int16 mode)" `239 
F N "set_pwm3_duty" 2 839 ""
V L "value" 2 839 "int8" `242 
F B "set_pwm3_duty" 2 839 "void(int8 value)" `241 
F N "set_pwm3_duty" 2 840 ""
V L "value" 2 840 "int16" `244 
F B "set_pwm3_duty" 2 840 "void(int16 value)" `243 
F N "setup_pwm4" 2 841 ""
V L "mode" 2 841 "int16" `246 
F B "setup_pwm4" 2 841 "void(int16 mode)" `245 
F N "set_pwm4_duty" 2 842 ""
V L "value" 2 842 "int8" `248 
F B "set_pwm4_duty" 2 842 "void(int8 value)" `247 
F N "set_pwm4_duty" 2 843 ""
V L "value" 2 843 "int16" `250 
F B "set_pwm4_duty" 2 843 "void(int16 value)" `249  "Constants used for SETUP_PWMx() are:"
D G "PWM_ENABLED" 2 845 "0x80"
D G "PWM_DISABLED" 2 846 "0x0400"
D G "PWM_ACTIVE_LOW" 2 848 "0x10"
D G "PWM_ACTIVE_HIGH" 2 849 "0"
D G "PWM_TIMER2" 2 852 "0x0000"
D G "PWM_TIMER4" 2 853 "0x0100"
D G "PWM_TIMER6" 2 854 "0x0200"
c L "set_pwm4_duty" 2 3 3 "FUNCTION"
F N "setup_spi" 2 863 ""
V L "mode" 2 863 "int32" `254 
F B "setup_spi" 2 863 "void(int32 mode)" `253 
F N "spi_write" 2 864 ""
V L "value" 2 864 "int8" `256 
F B "spi_write" 2 864 "void(int8 value)" `255 
F N "spi_write" 2 865 ""
V L "wait" 2 865 "int8" `258 
V L "value" 2 865 "int8" `259 
F B "spi_write" 2 865 "void(int8 wait,int8 value)" `257 
F N "spi_read" 2 866 ""
F B "spi_read" 2 866 "int8()" `260 
F N "spi_read" 2 867 ""
V L "value" 2 867 "int8" `262 
F B "spi_read" 2 867 "int8(int8 value)" `261 
F N "spi_data_is_in" 2 868 ""
F B "spi_data_is_in" 2 868 "int8()" `263 
F N "setup_spi2" 2 869 ""
V L "mode" 2 869 "int32" `265 
F B "setup_spi2" 2 869 "void(int32 mode)" `264 
F N "spi_write2" 2 870 ""
V L "value" 2 870 "int8" `267 
F B "spi_write2" 2 870 "void(int8 value)" `266 
F N "spi_read2" 2 871 ""
F B "spi_read2" 2 871 "int8()" `268 
F N "spi_read2" 2 872 ""
V L "value" 2 872 "int8" `270 
F B "spi_read2" 2 872 "int8(int8 value)" `269 
F N "spi_data_is_in2" 2 873 ""
F B "spi_data_is_in2" 2 873 "int8()" `271  "Constants used in SETUP_SPI() are:"
D G "SPI_DISABLED" 2 875 "0x00"
D G "SPI_MASTER" 2 876 "0x20"
D G "SPI_SLAVE" 2 877 "0x24"
D G "SPI_SCK_IDLE_HIGH" 2 878 "0x10"
D G "SPI_SCK_IDLE_LOW" 2 879 "0x00"
D G "SPI_CLK_DIV_4" 2 880 "0x00"
D G "SPI_CLK_DIV_16" 2 881 "0x01"
D G "SPI_CLK_DIV_64" 2 882 "0x02"
D G "SPI_CLK_T2" 2 883 "0x03"
D G "SPI_SS_DISABLED" 2 884 "0x01"
D G "SPI_CLK_EXTOSC" 2 885 "0x030000"
D G "SPI_CLK_CLKR" 2 886 "0x040000"
D G "SPI_CLK_TIMER0" 2 887 "0x050000"
D G "SPI_CLK_TIMER2" 2 888 "0x060000"
D G "SPI_CLK_TIMER4" 2 889 "0x070000"
D G "SPI_CLK_TIMER6" 2 890 "0x080000"
D G "SPI_CLK_SMT1" 2 891 "0x0E0000"
D G "SPI_CLK_CLC1" 2 892 "0x0F0000"
D G "SPI_CLK_CLC2" 2 893 "0x100000"
D G "SPI_CLK_CLC3" 2 894 "0x110000"
D G "SPI_CLK_CLC4" 2 895 "0x120000"
D G "SPI_CLK_CLC5" 2 896 "0x130000"
D G "SPI_CLK_CLC6" 2 897 "0x140000"
D G "SPI_CLK_CLC7" 2 898 "0x150000"
D G "SPI_CLK_CLC8" 2 899 "0x160000"
D G "SPI_XMIT_L_TO_H" 2 901 "0x4000"
D G "SPI_XMIT_H_TO_L" 2 902 "0x0000"
D G "SPI_SAMPLE_AT_MIDDLE" 2 904 "0x0000"
D G "SPI_SAMPLE_AT_END" 2 905 "0x8000"
D G "SPI_L_TO_H" 2 908 "SPI_SCK_IDLE_LOW"
D G "SPI_H_TO_L" 2 909 "SPI_SCK_IDLE_HIGH"
c L "spi_data_is_in2" 2 3 2 "FUNCTION"
F N "setup_uart" 2 913 ""
V L "baud" 2 913 "int32" `273 
F B "setup_uart" 2 913 "void(int32 baud)" `272 
F N "setup_uart" 2 914 ""
V L "baud" 2 914 "int32" `275 
V L "stream" 2 914 "int8" `276 
F B "setup_uart" 2 914 "void(int32 baud,int8 stream)" `274 
F N "setup_uart" 2 915 ""
V L "baud" 2 915 "int32" `278 
V L "stream" 2 915 "int8" `279 
V L "clock" 2 915 "int32" `280 
F B "setup_uart" 2 915 "void(int32 baud,int8 stream,int32 clock)" `277 
F N "set_uart_speed" 2 916 ""
V L "baud" 2 916 "int32" `282 
F B "set_uart_speed" 2 916 "void(int32 baud)" `281 
F N "set_uart_speed" 2 917 ""
V L "baud" 2 917 "int32" `284 
V L "stream" 2 917 "int8" `285 
F B "set_uart_speed" 2 917 "void(int32 baud,int8 stream)" `283 
F N "set_uart_speed" 2 918 ""
V L "baud" 2 918 "int32" `287 
V L "stream" 2 918 "int8" `288 
V L "clock" 2 918 "int32" `289 
F B "set_uart_speed" 2 918 "void(int32 baud,int8 stream,int32 clock)" `286  "Constants used in setup_uart() are:"
D G "UART_ADDRESS" 2 922 "2"
D G "UART_DATA" 2 923 "4"
D G "UART_AUTODETECT" 2 924 "8"
D G "UART_AUTODETECT_NOWAIT" 2 925 "9"
D G "UART_WAKEUP_ON_RDA" 2 926 "10"
D G "UART_SEND_BREAK" 2 927 "13"
c L "set_uart_speed" 2 3 3 "FUNCTION"
F N "setup_comparator" 2 932 ""
V L "mode" 2 932 "int32" `291 
F B "setup_comparator" 2 932 "void(int32 mode)" `290  "Constants used in setup_comparator() are:"
D G "NC_NC_NC_NC" 2 935 "0x003F003F"
D G "CP1_A0_A2" 2 938 "0x8000"
D G "CP1_A1_A2" 2 939 "0x8001"
D G "CP1_B3_A2" 2 940 "0x8002"
D G "CP1_B1_A2" 2 941 "0x8003"
D G "CP1_FVR_A2" 2 942 "0x8006"
D G "CP1_VSS_A2" 2 943 "0x8007"
D G "CP1_A0_A3" 2 944 "0x8008"
D G "CP1_A1_A3" 2 945 "0x8009"
D G "CP1_B3_A3" 2 946 "0x800A"
D G "CP1_B1_A3" 2 947 "0x800B"
D G "CP1_FVR_A3" 2 948 "0x800E"
D G "CP1_VSS_A3" 2 949 "0x800F"
D G "CP1_A0_DAC" 2 950 "0x8028"
D G "CP1_A1_DAC" 2 951 "0x8029"
D G "CP1_B3_DAC" 2 952 "0x802A"
D G "CP1_B1_DAC" 2 953 "0x802B"
D G "CP1_FVR_DAC" 2 954 "0x802E"
D G "CP1_VSS_DAC" 2 955 "0x802F"
D G "CP1_A0_FVR" 2 956 "0x8030"
D G "CP1_A1_FVR" 2 957 "0x8031"
D G "CP1_B3_FVR" 2 958 "0x8032"
D G "CP1_B1_FVR" 2 959 "0x8033"
D G "CP1_FVR_FVR" 2 960 "0x8036"
D G "CP1_VSS_FVR" 2 961 "0x8037"
D G "CP1_A0_VSS" 2 962 "0x8038"
D G "CP1_A1_VSS" 2 963 "0x8039"
D G "CP1_B3_VSS" 2 964 "0x803A"
D G "CP1_B1_VSS" 2 965 "0x803B"
D G "CP1_FVR_VSS" 2 966 "0x803E"
D G "CP1_VSS_VSS" 2 967 "0x803F"
D G "CP1_INT_L2H" 2 969 "0x0080"
D G "CP1_INT_H2L" 2 970 "0x0040"
D G "CP1_INVERT" 2 971 "0x1000"
D G "CP1_HYST" 2 972 "0x0200"
D G "CP1_SYNC" 2 973 "0x0100"
D G "CP2_A0_A2" 2 976 "0x80000000"
D G "CP2_A1_A2" 2 977 "0x80010000"
D G "CP2_B3_A2" 2 978 "0x80020000"
D G "CP2_B1_A2" 2 979 "0x80030000"
D G "CP2_FVR_A2" 2 980 "0x80060000"
D G "CP2_VSS_A2" 2 981 "0x80070000"
D G "CP2_A0_B0" 2 982 "0x80080000"
D G "CP2_A1_B0" 2 983 "0x80090000"
D G "CP2_B3_B0" 2 984 "0x800A0000"
D G "CP2_B1_B0" 2 985 "0x800B0000"
D G "CP2_FVR_B0" 2 986 "0x800E0000"
D G "CP2_VSS_B0" 2 987 "0x800F0000"
D G "CP2_A0_DAC" 2 988 "0x80280000"
D G "CP2_A1_DAC" 2 989 "0x80290000"
D G "CP2_B3_DAC" 2 990 "0x802A0000"
D G "CP2_B1_DAC" 2 991 "0x802B0000"
D G "CP2_FVR_DAC" 2 992 "0x802E0000"
D G "CP2_VSS_DAC" 2 993 "0x802F0000"
D G "CP2_A0_FVR" 2 994 "0x80300000"
D G "CP2_A1_FVR" 2 995 "0x80310000"
D G "CP2_B3_FVR" 2 996 "0x80320000"
D G "CP2_B1_FVR" 2 997 "0x80330000"
D G "CP2_FVR_FVR" 2 998 "0x80360000"
D G "CP2_VSS_FVR" 2 999 "0x80370000"
D G "CP2_A0_VSS" 2 1000 "0x80380000"
D G "CP2_A1_VSS" 2 1001 "0x80390000"
D G "CP2_B3_VSS" 2 1002 "0x803A0000"
D G "CP2_B1_VSS" 2 1003 "0x803B0000"
D G "CP2_FVR_VSS" 2 1004 "0x803E0000"
D G "CP2_VSS_VSS" 2 1005 "0x803F0000"
D G "CP2_INT_L2H" 2 1007 "0x00800000"
D G "CP2_INT_H2L" 2 1008 "0x00400000"
D G "CP2_INVERT" 2 1009 "0x10000000"
D G "CP2_HYST" 2 1010 "0x02000000"
D G "CP2_SYNC" 2 1011 "0x01000000"
c L "setup_comparator" 2 3 2 "FUNCTION"
F N "setup_vref" 2 1018 ""
V L "mode" 2 1018 "int8" `295 
F B "setup_vref" 2 1018 "void(int8 mode)" `294  "Constants used in setup_vref() are:"
D G "VREF_OFF" 2 1020 "0"
D G "VREF_ON" 2 1021 "0x80"
D G "VREF_ADC_OFF" 2 1023 "0"
D G "VREF_ADC_1v024" 2 1024 "0x81"
D G "VREF_ADC_2v048" 2 1025 "0x82"
D G "VREF_ADC_4v096" 2 1026 "0x83"
D G "VREF_COMP_DAC_OFF" 2 1028 "0"
D G "VREF_COMP_DAC_1v024" 2 1029 "0x84"
D G "VREF_COMP_DAC_2v048" 2 1030 "0x88"
D G "VREF_COMP_DAC_4v096" 2 1031 "0x8C"
D G "TEMPERATURE_INDICATOR_DISABLED" 2 1033 "0"
D G "TEMPERATURE_INDICATOR_ENABLED" 2 1034 "0x20"
D G "TEMPERATURE_RANGE_LOW" 2 1035 "0"
D G "TEMPERATURE_RANGE_HIGH" 2 1036 "0x10"
c L "setup_vref" 2 3 2 "FUNCTION"
F N "setup_low_volt_detect" 2 1040 ""
V L "mode" 2 1040 "int8" `297 
F B "setup_low_volt_detect" 2 1040 "void(int8 mode)" `296  "Constants used in setup_low_volt_detect() are:"
D G "LVD_47" 2 1042 "0x8E"
D G "LVD_44" 2 1043 "0x8D"
D G "LVD_42" 2 1044 "0x8C"
D G "LVD_40" 2 1045 "0x8B"
D G "LVD_38" 2 1046 "0x8A"
D G "LVD_36" 2 1047 "0x89"
D G "LVD_34" 2 1048 "0x88"
D G "LVD_32" 2 1049 "0x87"
D G "LVD_29" 2 1050 "0x86"
D G "LVD_28" 2 1051 "0x85"
D G "LVD_26" 2 1052 "0x84"
D G "LVD_25" 2 1053 "0x83"
D G "LVD_23" 2 1054 "0x82"
D G "LVD_21" 2 1055 "0x81"
D G "LVD_19" 2 1056 "0x80"
D G "LVD_INT_WHEN_BELOW" 2 1058 "0x10"
D G "LVD_INT_WHEN_ABOVE" 2 1059 "0x20"
c L "setup_low_volt_detect" 2 3 3 "FUNCTION"
F N "setup_dac" 2 1067 ""
V L "mode" 2 1067 "int8" `301 
F B "setup_dac" 2 1067 "void(int8 mode)" `300 
F N "dac_write" 2 1068 ""
V L "value" 2 1068 "int8" `303 
F B "dac_write" 2 1068 "void(int8 value)" `302  "Constants used in SETUP_DAC() are:"
D G "DAC_OFF" 2 1070 "0"
D G "DAC_VSS_VDD" 2 1071 "0x80"
D G "DAC_VREF_VDD" 2 1072 "0x81"
D G "DAC_VSS_VREF" 2 1073 "0x84"
D G "DAC_VREF_VREF" 2 1074 "0x85"
D G "DAC_VSS_FVR" 2 1075 "0x88"
D G "DAC_VREF_FVR" 2 1076 "0x89"
D G "DAC_OUTPUT2" 2 1078 "0x10"
D G "DAC_OUTPUT" 2 1079 "0x20"
c L "dac_write" 2 3 3 "FUNCTION"
F N "setup_cwg" 2 1084 ""
V L "mode" 2 1084 "int32" `305 
V L "shutdown" 2 1084 "int16" `306 
V L "dt_rising" 2 1084 "int8" `307 
V L "dt_falling" 2 1084 "int8" `308 
F B "setup_cwg" 2 1084 "void(int32 mode,int16 shutdown,int8 dt_rising,int8 dt_falling)" `304 
F N "cwg_restart" 2 1085 ""
F B "cwg_restart" 2 1085 "void()" `309 
F N "cwg_status" 2 1086 ""
F B "cwg_status" 2 1086 "int8()" `310  "Constants used in SETUP_CWG() first parameter are:"
D G "CWG_ENABLED" 2 1088 "0x80"
D G "CWG_DISABLED" 2 1089 "0x00"
D G "CWG_MODE_STEERING" 2 1091 "0x00"
D G "CWG_MODE_SYNCRONOUS_STEERING" 2 1092 "0x01"
D G "CWG_MODE_FULL_BRIDGE" 2 1093 "0x02"
D G "CWG_MODE_FULL_BRIDGE_REV" 2 1094 "0x03"
D G "CWG_MODE_HALF_BRIDGE" 2 1095 "0x04"
D G "CWG_MODE_PUSH_PULL" 2 1096 "0x05"
D G "CWG_CLOCK_HFINTOSC" 2 1098 "0x0100"
D G "CWG_CLOCK_FOSC" 2 1099 "0x0000"
D G "CWG_INPUT_CWG1IN" 2 1101 "0x0000"
D G "CWG_INPUT_CCP1" 2 1102 "0x1000"
D G "CWG_INPUT_CCP2" 2 1103 "0x2000"
D G "CWG_INPUT_PWM3" 2 1104 "0x3000"
D G "CWG_INPUT_PMW4" 2 1105 "0x4000"
D G "CWG_INPUT_COMP1" 2 1106 "0x5000"
D G "CWG_INPUT_COMP2" 2 1107 "0x6000"
D G "CWG_INPUT_DSM" 2 1108 "0x7000"
D G "CWG_INPUT_CLC1" 2 1109 "0x8000"
D G "CWG_INPUT_CLC2" 2 1110 "0x9000"
D G "CWG_INPUT_CLC3" 2 1111 "0xA000"
D G "CWG_INPUT_CLC4" 2 1112 "0xB000"
D G "CWG_INPUT_CLC5" 2 1113 "0xC000"
D G "CWG_INPUT_CLC6" 2 1114 "0xD000"
D G "CWG_INPUT_CLC7" 2 1115 "0xE000"
D G "CWG_INPUT_CLC8" 2 1116 "0xF000"
D G "CWG_A_INVERTED" 2 1118 "0x010000"
D G "CWG_B_INVERTED" 2 1119 "0x020000"
D G "CWG_C_INVERTED" 2 1120 "0x040000"
D G "CWG_D_INVERTED" 2 1121 "0x080000"
D G "CWG_A_FORCE_HIGH" 2 1123 "0x10000000" "Only available in Steering modes"
D G "CWG_A_FORCE_LOW" 2 1124 "0x00000000" "Only available in Steering modes"
D G "CWG_A_OUTPUT_PWM" 2 1125 "0x01000000" "Only available in Steering modes"
D G "CWG_B_FORCE_HIGH" 2 1127 "0x20000000" "Only available in Steering modes"
D G "CWG_B_FORCE_LOW" 2 1128 "0x00000000" "Only available in Steering modes"
D G "CWG_B_OUTPUT_PWM" 2 1129 "0x02000000" "Only available in Steering modes"
D G "CWG_C_FORCE_HIGH" 2 1131 "0x40000000" "Only available in Steering modes"
D G "CWG_C_FORCE_LOW" 2 1132 "0x00000000" "Only available in Steering modes"
D G "CWG_C_OUTPUT_PWM" 2 1133 "0x04000000" "Only available in Steering modes"
D G "CWG_D_FORCE_HIGH" 2 1135 "0x80000000" "Only available in Steering modes"
D G "CWG_D_FORCE_LOW" 2 1136 "0x00000000" "Only available in Steering modes"
D G "CWG_D_OUTPUT_PWM" 2 1137 "0x08000000" "Only available in Steering modes"
D G "CWG_NO_AUTO_SHUTDOWN" 2 1141 "0x0000"
D G "CWG_SHUTDOWN_ON_CWG1IN" 2 1142 "0x0001"
D G "CWG_SHUTDOWN_ON_TMR2" 2 1143 "0x0002"
D G "CWG_SHUTDOWN_ON_TMR4" 2 1144 "0x0004"
D G "CWG_SHUTDOWN_ON_TMR6" 2 1145 "0x0008"
D G "CWG_SHUTDOWN_ON_COMP1" 2 1146 "0x0010"
D G "CWG_SHUTDOWN_ON_COMP2" 2 1147 "0x0020"
D G "CWG_SHUTDOWN_ON_CLC2" 2 1148 "0x0040"
D G "CWG_SHUTDOWN_ON_CLC6" 2 1149 "0x0080"
D G "CWG_AUTO_RESTART" 2 1150 "0x4000"
D G "CWG_SHUTDOWN_AC_INACTIVE_STATE" 2 1152 "0x0000"
D G "CWG_SHUTDOWN_AC_TRISTATE" 2 1153 "0x0400"
D G "CWG_SHUTDOWN_AC_LOW" 2 1154 "0x0800"
D G "CWG_SHUTDOWN_AC_HIGH" 2 1155 "0x0C00"
D G "CWG_SHUTDOWN_BD_INACTIVE_STATE" 2 1157 "0"
D G "CWG_SHUTDOWN_BD_TRISTATE" 2 1158 "0x1000"
D G "CWG_SHUTDOWN_BD_LOW" 2 1159 "0x2000"
D G "CWG_SHUTDOWN_BD_HIGH" 2 1160 "0x3000"
D G "CWG_AUTO_SHUTDOWN" 2 1163 "0x80"
c L "cwg_status" 2 3 4 "FUNCTION"
F N "setup_clc1" 2 1169 ""
V L "mode" 2 1169 "int32" `312 
F B "setup_clc1" 2 1169 "void(int32 mode)" `311 
F N "setup_clc2" 2 1170 ""
V L "mode" 2 1170 "int32" `314 
F B "setup_clc2" 2 1170 "void(int32 mode)" `313 
F N "setup_clc3" 2 1171 ""
V L "mode" 2 1171 "int32" `316 
F B "setup_clc3" 2 1171 "void(int32 mode)" `315 
F N "setup_clc4" 2 1172 ""
V L "mode" 2 1172 "int32" `318 
F B "setup_clc4" 2 1172 "void(int32 mode)" `317 
F N "setup_clc5" 2 1173 ""
V L "mode" 2 1173 "int32" `320 
F B "setup_clc5" 2 1173 "void(int32 mode)" `319 
F N "setup_clc6" 2 1174 ""
V L "mode" 2 1174 "int32" `322 
F B "setup_clc6" 2 1174 "void(int32 mode)" `321 
F N "setup_clc7" 2 1175 ""
V L "mode" 2 1175 "int32" `324 
F B "setup_clc7" 2 1175 "void(int32 mode)" `323 
F N "setup_clc8" 2 1176 ""
V L "mode" 2 1176 "int32" `326 
F B "setup_clc8" 2 1176 "void(int32 mode)" `325 
F N "clc1_setup_input" 2 1177 ""
V L "input" 2 1177 "int8" `328 
V L "selection" 2 1177 "int8" `329 
F B "clc1_setup_input" 2 1177 "void(int8 input,int8 selection)" `327 
F N "clc2_setup_input" 2 1178 ""
V L "input" 2 1178 "int8" `331 
V L "selection" 2 1178 "int8" `332 
F B "clc2_setup_input" 2 1178 "void(int8 input,int8 selection)" `330 
F N "clc3_setup_input" 2 1179 ""
V L "input" 2 1179 "int8" `334 
V L "selection" 2 1179 "int8" `335 
F B "clc3_setup_input" 2 1179 "void(int8 input,int8 selection)" `333 
F N "clc4_setup_input" 2 1180 ""
V L "input" 2 1180 "int8" `337 
V L "selection" 2 1180 "int8" `338 
F B "clc4_setup_input" 2 1180 "void(int8 input,int8 selection)" `336 
F N "clc5_setup_input" 2 1181 ""
V L "input" 2 1181 "int8" `340 
V L "selection" 2 1181 "int8" `341 
F B "clc5_setup_input" 2 1181 "void(int8 input,int8 selection)" `339 
F N "clc6_setup_input" 2 1182 ""
V L "input" 2 1182 "int8" `343 
V L "selection" 2 1182 "int8" `344 
F B "clc6_setup_input" 2 1182 "void(int8 input,int8 selection)" `342 
F N "clc7_setup_input" 2 1183 ""
V L "input" 2 1183 "int8" `346 
V L "selection" 2 1183 "int8" `347 
F B "clc7_setup_input" 2 1183 "void(int8 input,int8 selection)" `345 
F N "clc8_setup_input" 2 1184 ""
V L "input" 2 1184 "int8" `349 
V L "selection" 2 1184 "int8" `350 
F B "clc8_setup_input" 2 1184 "void(int8 input,int8 selection)" `348 
F N "clc1_setup_gate" 2 1185 ""
V L "gate" 2 1185 "int8" `352 
V L "mode" 2 1185 "int16" `353 
F B "clc1_setup_gate" 2 1185 "void(int8 gate,int16 mode)" `351 
F N "clc2_setup_gate" 2 1186 ""
V L "gate" 2 1186 "int8" `355 
V L "mode" 2 1186 "int16" `356 
F B "clc2_setup_gate" 2 1186 "void(int8 gate,int16 mode)" `354 
F N "clc3_setup_gate" 2 1187 ""
V L "gate" 2 1187 "int8" `358 
V L "mode" 2 1187 "int16" `359 
F B "clc3_setup_gate" 2 1187 "void(int8 gate,int16 mode)" `357 
F N "clc4_setup_gate" 2 1188 ""
V L "gate" 2 1188 "int8" `361 
V L "mode" 2 1188 "int16" `362 
F B "clc4_setup_gate" 2 1188 "void(int8 gate,int16 mode)" `360 
F N "clc5_setup_gate" 2 1189 ""
V L "gate" 2 1189 "int8" `364 
V L "mode" 2 1189 "int16" `365 
F B "clc5_setup_gate" 2 1189 "void(int8 gate,int16 mode)" `363 
F N "clc6_setup_gate" 2 1190 ""
V L "gate" 2 1190 "int8" `367 
V L "mode" 2 1190 "int16" `368 
F B "clc6_setup_gate" 2 1190 "void(int8 gate,int16 mode)" `366 
F N "clc7_setup_gate" 2 1191 ""
V L "gate" 2 1191 "int8" `370 
V L "mode" 2 1191 "int16" `371 
F B "clc7_setup_gate" 2 1191 "void(int8 gate,int16 mode)" `369 
F N "clc8_setup_gate" 2 1192 ""
V L "gate" 2 1192 "int8" `373 
V L "mode" 2 1192 "int16" `374 
F B "clc8_setup_gate" 2 1192 "void(int8 gate,int16 mode)" `372  "Constants used in SETUP_CLCx() are:"
D G "CLC_ENABLED" 2 1194 "0x080"
D G "CLC_DISABLED" 2 1195 "0"
D G "CLC_INT_L_TO_H" 2 1197 "0x010"
D G "CLC_INT_H_TO_L" 2 1198 "0x008"
D G "CLC_OUTPUT_INVERTED" 2 1199 "0x100"
D G "CLC_MODE_AND_OR" 2 1201 "0x000"
D G "CLC_MODE_OR_XOR" 2 1202 "0x001"
D G "CLC_MODE_AND" 2 1203 "0x002"
D G "CLC_MODE_SR_LATCH" 2 1204 "0x003"
D G "CLC_MODE_1_INPUT_D_FLIP_FLOP" 2 1205 "0x004"
D G "CLC_MODE_2_INPUT_D_FLIP_FLOP" 2 1206 "0x005"
D G "CLC_MODE_JK_FLIP_FLOP" 2 1207 "0x006"
D G "CLC_MODE_1_INPUT_TRANSPARENT_LATCH" 2 1208 "0x007"
D G "CLC_INPUT_CLCIN0" 2 1211 "0"
D G "CLC_INPUT_CLCIN1" 2 1212 "0x01"
D G "CLC_INPUT_CLCIN2" 2 1213 "0x02"
D G "CLC_INPUT_CLCIN3" 2 1214 "0x03"
D G "CLC_INPUT_CLCIN4" 2 1215 "0x04"
D G "CLC_INPUT_CLCIN5" 2 1216 "0x05"
D G "CLC_INPUT_CLCIN6" 2 1217 "0x06"
D G "CLC_INPUT_CLCIN7" 2 1218 "0x07"
D G "CLC_INPUT_FOSC" 2 1219 "0x08"
D G "CLC_INPUT_HFINTOSC" 2 1220 "0x09"
D G "CLC_INPUT_LFINTOSC" 2 1221 "0x0A"
D G "CLC_INPUT_MFINTOSC_500KHZ" 2 1222 "0x0B"
D G "CLC_INPUT_MFINTOSC" 2 1223 "0x0C"
D G "CLC_INPUT_SFINTOSC" 2 1224 "0x0D"
D G "CLC_INPUT_SOSC" 2 1225 "0x0E"
D G "CLC_INPUT_ADCRC" 2 1226 "0x0F"
D G "CLC_INPUT_CLKR" 2 1227 "0x10"
D G "CLC_INPUT_TIMER0" 2 1228 "0x11"
D G "CLC_INPUT_TIMER1" 2 1229 "0x12"
D G "CLC_INPUT_TIMER2" 2 1230 "0x13"
D G "CLC_INPUT_TIMER3" 2 1231 "0x14"
D G "CLC_INPUT_TIMER4" 2 1232 "0x15"
D G "CLC_INPUT_TIMER5" 2 1233 "0x16"
D G "CLC_INPUT_TIMER6" 2 1234 "0x17"
D G "CLC_INPUT_CCP1" 2 1235 "0x18"
D G "CLC_INPUT_CCP2" 2 1236 "0x19"
D G "CLC_INPUT_PWM3" 2 1237 "0x1A"
D G "CLC_INPUT_PWM4" 2 1238 "0x1B"
D G "CLC_INPUT_C1OUT" 2 1239 "0x1C"
D G "CLC_INPUT_C2OUT" 2 1240 "0x1D"
D G "CLC_INPUT_ZCD" 2 1241 "0x1E"
D G "CLC_INPUT_IOCIF" 2 1242 "0x1F"
D G "CLC_INPUT_DSM" 2 1243 "0x20"
D G "CLC_INPUT_CLC1" 2 1244 "0x21"
D G "CLC_INPUT_CLC2" 2 1245 "0x22"
D G "CLC_INPUT_CLC3" 2 1246 "0x23"
D G "CLC_INPUT_CLC4" 2 1247 "0x24"
D G "CLC_INPUT_CLC5" 2 1248 "0x25"
D G "CLC_INPUT_CLC6" 2 1249 "0x26"
D G "CLC_INPUT_CLC7" 2 1250 "0x27"
D G "CLC_INPUT_CLC8" 2 1251 "0x28"
D G "CLC_INPUT_U1DT" 2 1252 "0x29"
D G "CLC_INPUT_U1TX" 2 1253 "0x2A"
D G "CLC_INPUT_U2DT" 2 1254 "0x2B"
D G "CLC_INPUT_U2TX" 2 1255 "0x2C"
D G "CLC_INPUT_SDO1" 2 1256 "0x2D"
D G "CLC_INPUT_SCK1" 2 1257 "0x2E"
D G "CLC_INPUT_SDO2" 2 1258 "0x2F"
D G "CLC_INPUT_SCK2" 2 1259 "0x30"
D G "CLC_INPUT_CWG1A" 2 1260 "0x31"
D G "CLC_INPUT_CWG1B" 2 1261 "0x32"
D G "CLC_GATE_AND" 2 1266 "0x155"
D G "CLC_GATE_NAND" 2 1267 "0x055"
D G "CLC_GATE_NOR" 2 1268 "0x1AA"
D G "CLC_GATE_OR" 2 1269 "0x0AA"
D G "CLC_GATE_CLEAR" 2 1270 "0"
D G "CLC_GATE_SET" 2 1271 "0x100"
D G "CLC_GATE_INVERTED_INPUT_1" 2 1275 "0x001"
D G "CLC_GATE_NON_INVERTED_INPUT_1" 2 1276 "0x002"
D G "CLC_GATE_INVERTED_INPUT_2" 2 1277 "0x004"
D G "CLC_GATE_NON_INVERTED_INPUT_2" 2 1278 "0x008"
D G "CLC_GATE_INVERTED_INPUT_3" 2 1279 "0x010"
D G "CLC_GATE_NON_INVERTED_INPUT_3" 2 1280 "0x020"
D G "CLC_GATE_INVERTED_INPUT_4" 2 1281 "0x040"
D G "CLC_GATE_NON_INVERTED_INPUT_4" 2 1282 "0x080"
D G "CLC_GATE_OUTPUT_INVERTED" 2 1283 "0x100"
c L "clc8_setup_gate" 2 3 4 "FUNCTION"
F N "setup_crc" 2 1298 ""
V L "poly_terms" 2 1298 "int8" `384 
F B "setup_crc" 2 1298 "void(int8 poly_terms,*int8 _VA_LIST)" `383 
F N "crc_init" 2 1299 ""
V L "value" 2 1299 "int16" `387 
F B "crc_init" 2 1299 "void(int16 value)" `386 
F N "crc_calc16" 2 1300 ""
V L "data" 2 1300 "int16" `389 
F B "crc_calc16" 2 1300 "int16(int16 data)" `388 
F N "crc_calc16" 2 1301 ""
V L "data" 2 1301 "int16" `391 
V L "data_width" 2 1301 "int8" `392 
F B "crc_calc16" 2 1301 "int16(int16 data,int8 data_width)" `390 
F N "crc_calc16" 2 1302 ""
V L "data" 2 1302 "int8" `394 
V L "data_width" 2 1302 "int8" `395 
F B "crc_calc16" 2 1302 "int16(int8 data,int8 data_width)" `393 
F N "crc_calc16" 2 1303 ""
V L "ptr" 2 1303 "*int16" `397 
V L "count" 2 1303 "int16" `398 
F B "crc_calc16" 2 1303 "int16(*int16 ptr,int16 count)" `396 
F N "crc_calc16" 2 1304 ""
V L "ptr" 2 1304 "*int16" `400 
V L "count" 2 1304 "int16" `401 
V L "data_width" 2 1304 "int8" `402 
F B "crc_calc16" 2 1304 "int16(*int16 ptr,int16 count,int8 data_width)" `399 
F N "crc_calc16" 2 1305 ""
V L "ptr" 2 1305 "*int8" `404 
V L "count" 2 1305 "int16" `405 
V L "data_width" 2 1305 "int8" `406 
F B "crc_calc16" 2 1305 "int16(*int8 ptr,int16 count,int8 data_width)" `403 
F N "crc_calc8" 2 1306 ""
V L "data" 2 1306 "int8" `408 
F B "crc_calc8" 2 1306 "int8(int8 data)" `407 
F N "crc_calc8" 2 1307 ""
V L "data" 2 1307 "int8" `410 
V L "data_width" 2 1307 "int8" `411 
F B "crc_calc8" 2 1307 "int8(int8 data,int8 data_width)" `409 
F N "crc_calc8" 2 1308 ""
V L "ptr" 2 1308 "*int8" `413 
V L "count" 2 1308 "int16" `414 
F B "crc_calc8" 2 1308 "int8(*int8 ptr,int16 count)" `412 
F N "crc_calc8" 2 1309 ""
V L "ptr" 2 1309 "*int8" `416 
V L "count" 2 1309 "int16" `417 
V L "data_width" 2 1309 "int8" `418 
F B "crc_calc8" 2 1309 "int8(*int8 ptr,int16 count,int8 data_width)" `415 
F N "crc_calc" 2 1310 ""
V L "data" 2 1310 "int16" `420 
F B "crc_calc" 2 1310 "int16(int16 data)" `419 
F N "crc_calc" 2 1311 ""
V L "data" 2 1311 "int16" `422 
V L "data_width" 2 1311 "int8" `423 
F B "crc_calc" 2 1311 "int16(int16 data,int8 data_width)" `421 
F N "crc_calc" 2 1312 ""
V L "data" 2 1312 "int8" `425 
V L "data_width" 2 1312 "int8" `426 
F B "crc_calc" 2 1312 "int16(int8 data,int8 data_width)" `424 
F N "crc_calc" 2 1313 ""
V L "ptr" 2 1313 "*int16" `428 
V L "count" 2 1313 "int16" `429 
F B "crc_calc" 2 1313 "int16(*int16 ptr,int16 count)" `427 
F N "crc_calc" 2 1314 ""
V L "ptr" 2 1314 "*int16" `431 
V L "count" 2 1314 "int16" `432 
V L "data_width" 2 1314 "int8" `433 
F B "crc_calc" 2 1314 "int16(*int16 ptr,int16 count,int8 data_width)" `430 
F N "crc_calc" 2 1315 ""
V L "ptr" 2 1315 "*int8" `435 
V L "count" 2 1315 "int16" `436 
V L "data_width" 2 1315 "int8" `437 
F B "crc_calc" 2 1315 "int16(*int8 ptr,int16 count,int8 data_width)" `434 
F N "crc_write" 2 1316 ""
V L "data" 2 1316 "int16" `439 
F B "crc_write" 2 1316 "void(int16 data)" `438 
F N "crc_write" 2 1317 ""
V L "data" 2 1317 "int16" `441 
V L "data_width" 2 1317 "int8" `442 
F B "crc_write" 2 1317 "void(int16 data,int8 data_width)" `440 
F N "crc_write" 2 1318 ""
V L "data" 2 1318 "int8" `444 
V L "data_width" 2 1318 "int8" `445 
F B "crc_write" 2 1318 "void(int8 data,int8 data_width)" `443 
F N "crc_read" 2 1319 ""
F B "crc_read" 2 1319 "int16()" `446  "Constants used in setup_crc() are:"
D G "CRC_LITTLE_ENDIAN" 2 1321 "128"
c L "crc_read" 2 3 3 "FUNCTION"
F N "setup_zcd" 2 1326 ""
V L "mode" 2 1326 "int8" `448 
F B "setup_zcd" 2 1326 "void(int8 mode)" `447 
F N "zcd_status" 2 1327 ""
F B "zcd_status" 2 1327 "int8()" `449  "Constants used in SETUP_ZCD() are:"
D G "ZCD_ENABLE" 2 1329 "0x80"
D G "ZCD_DISABLE" 2 1330 "0"
D G "ZCD_INVERTED" 2 1332 "0x10"
D G "ZCD_INT_L_TO_H" 2 1333 "0x02"
D G "ZCD_INT_H_TO_L" 2 1334 "0x01"
D G "ZCD_IS_SINKING" 2 1337 "0x20" "If ZCD_INVERTED is used the return"
D G "ZCD_IS_SOURCING" 2 1338 "0" "value will be reversed."
c L "zcd_status" 2 3 3 "FUNCTION"
F N "setup_dsm" 2 1343 ""
V L "enable" 2 1343 "int8" `451 
F B "setup_dsm" 2 1343 "void(int8 enable)" `450 
F N "setup_dsm" 2 1344 ""
V L "mode" 2 1344 "int16" `453 
V L "source" 2 1344 "int8" `454 
F B "setup_dsm" 2 1344 "void(int16 mode,int8 source)" `452 
F N "setup_dsm" 2 1345 ""
V L "mode" 2 1345 "int16" `456 
V L "source" 2 1345 "int8" `457 
V L "carrier" 2 1345 "int16" `458 
F B "setup_dsm" 2 1345 "void(int16 mode,int8 source,int16 carrier)" `455  "Constants used in SETUP_DSM() first parameter are:"
D G "DSM_ENABLED" 2 1347 "0x80"
D G "DSM_DISABLED" 2 1348 "0x00"
D G "DSM_OUTPUT_INVERTED" 2 1350 "0x10"
D G "DSM_SYNC_CARRIER_LOW" 2 1351 "0x0100"
D G "DSM_INVERT_CARRIER_LOW" 2 1352 "0x0200"
D G "DSM_SYNC_CARRIER_HIGH" 2 1353 "0x1000"
D G "DSM_INVERT_CARRIER_HIGH" 2 1354 "0x2000"
D G "DSM_SOURCE_MDSCR" 2 1356 "0x00"
D G "DSM_SOURCE_MANUAL" 2 1357 "0x01"
D G "DSM_SOURCE_CCP1" 2 1358 "0x02"
D G "DSM_SOURCE_CCP2" 2 1359 "0x03"
D G "DSM_SOURCE_PWM3" 2 1360 "0x04"
D G "DSM_SOURCE_PWM4" 2 1361 "0x05"
D G "DSM_SOURCE_C1OUT" 2 1362 "0x06"
D G "DSM_SOURCE_C2OUT" 2 1363 "0x07"
D G "DSM_SOURCE_U1RX" 2 1364 "0x08"
D G "DSM_SOURCE_U1TX" 2 1365 "0x09"
D G "DSM_SOURCE_SDO1" 2 1366 "0x0A"
D G "DSM_SOURCE_SDO2" 2 1367 "0x0B"
D G "DSM_SOURCE_U2RX" 2 1368 "0x0C"
D G "DSM_SOURCE_U2TX" 2 1369 "0x0D"
D G "DSM_SOURCE_CLC1" 2 1370 "0x10"
D G "DSM_SOURCE_CLC2" 2 1371 "0x11"
D G "DSM_SOURCE_CLC3" 2 1372 "0x12"
D G "DSM_SOURCE_CLC4" 2 1373 "0x13"
D G "DSM_SOURCE_CLC5" 2 1374 "0x14"
D G "DSM_SOURCE_CLC6" 2 1375 "0x15"
D G "DSM_SOURCE_CLC7" 2 1376 "0x16"
D G "DSM_SOURCE_CLC8" 2 1377 "0x17"
D G "DSM_CARRIER_LOW_MDCARL" 2 1379 "0x0000"
D G "DSM_CARRIER_LOW_SYSTEM_CLOCK" 2 1380 "0x0001"
D G "DSM_CARRIER_LOW_HFINTOSC" 2 1381 "0x0002"
D G "DSM_CARRIER_LOW_CLKR" 2 1382 "0x0003"
D G "DSM_CARRIER_LOW_CCP1" 2 1383 "0x0004"
D G "DSM_CARRIER_LOW_CCP2" 2 1384 "0x0005"
D G "DSM_CARRIER_LOW_PWM3" 2 1385 "0x0006"
D G "DSM_CARRIER_LOW_PWM4" 2 1386 "0x0007"
D G "DSM_CARRIER_LOW_CLC1" 2 1387 "0x0008"
D G "DSM_CARRIER_LOW_CLC2" 2 1388 "0x0009"
D G "DSM_CARRIER_LOW_CLC3" 2 1389 "0x000A"
D G "DSM_CARRIER_LOW_CLC4" 2 1390 "0x000B"
D G "DSM_CARRIER_LOW_CLC5" 2 1391 "0x000C"
D G "DSM_CARRIER_LOW_CLC6" 2 1392 "0x000D"
D G "DSM_CARRIER_LOW_CLC7" 2 1393 "0x000E"
D G "DSM_CARRIER_LOW_CLC8" 2 1394 "0x000F"
D G "DSM_CARRIER_HIGH_MDCARH" 2 1395 "0x0000"
D G "DSM_CARRIER_HIGH_SYSTEM_CLOCK" 2 1396 "0x0100"
D G "DSM_CARRIER_HIGH_HFINTOSC" 2 1397 "0x0200"
D G "DSM_CARRIER_HIGH_CLKR" 2 1398 "0x0300"
D G "DSM_CARRIER_HIGH_CCP1" 2 1399 "0x0400"
D G "DSM_CARRIER_HIGH_CCP2" 2 1400 "0x0500"
D G "DSM_CARRIER_HIGH_PWM3" 2 1401 "0x0600"
D G "DSM_CARRIER_HIGH_PWM4" 2 1402 "0x0700"
D G "DSM_CARRIER_HIGH_CLC1" 2 1403 "0x0800"
D G "DSM_CARRIER_HIGH_CLC2" 2 1404 "0x0900"
D G "DSM_CARRIER_HIGH_CLC3" 2 1405 "0x0A00"
D G "DSM_CARRIER_HIGH_CLC4" 2 1406 "0x0B00"
D G "DSM_CARRIER_HIGH_CLC5" 2 1407 "0x0C00"
D G "DSM_CARRIER_HIGH_CLC6" 2 1408 "0x0D00"
D G "DSM_CARRIER_HIGH_CLC7" 2 1409 "0x0E00"
D G "DSM_CARRIER_HIGH_CLC8" 2 1410 "0x0F00"
c L "setup_dsm" 2 3 2 "FUNCTION"
F N "setup_oscillator" 2 1418 ""
V L "mode" 2 1418 "int32" `462 
F B "setup_oscillator" 2 1418 "int16(int32 mode)" `461 
F N "setup_oscillator" 2 1419 ""
V L "mode" 2 1419 "int32" `464 
V L "tune" 2 1419 "sint8" `465 
F B "setup_oscillator" 2 1419 "int16(int32 mode,sint8 tune)" `463  "Constants used in setup_oscillator() are:"
D G "OSC_HFINTRC_1MHZ" 2 1422 "0x00000060"
D G "OSC_HFINTRC_2MHZ" 2 1423 "0x00000160"
D G "OSC_HFINTRC_4MHZ" 2 1424 "0x00000260"
D G "OSC_HFINTRC_8MHZ" 2 1425 "0x00000360"
D G "OSC_HFINTRC_12MHZ" 2 1426 "0x00000460"
D G "OSC_HFINTRC_16MHZ" 2 1427 "0x00000560"
D G "OSC_HFINTRC_32MHZ" 2 1428 "0x00000660"
D G "OSC_HFINTRC_48MHZ" 2 1429 "0x00000760"
D G "OSC_HFINTRC_64MHZ" 2 1430 "0x00000860"
D G "OSC_EXTOSC_PLL" 2 1431 "0x00000020"
D G "OSC_SOSC" 2 1432 "0x00000040"
D G "OSC_LFINTRC" 2 1433 "0x00000050"
D G "OSC_EXTOSC" 2 1434 "0x00000070"
D G "OSC_CLK_DIV_BY_1" 2 1436 "0x00000000"
D G "OSC_CLK_DIV_BY_2" 2 1437 "0x00000001"
D G "OSC_CLK_DIV_BY_4" 2 1438 "0x00000002"
D G "OSC_CLK_DIV_BY_8" 2 1439 "0x00000003"
D G "OSC_CLK_DIV_BY_16" 2 1440 "0x00000004"
D G "OSC_CLK_DIV_BY_32" 2 1441 "0x00000005"
D G "OSC_CLK_DIV_BY_64" 2 1442 "0x00000006"
D G "OSC_CLK_DIV_BY_128" 2 1443 "0x00000007"
D G "OSC_CLK_DIV_BY_256" 2 1444 "0x00000008"
D G "OSC_CLK_DIV_BY_512" 2 1445 "0x00000009"
D G "OSC_SOSC_PWR_LOW" 2 1447 "0x00000000"
D G "OSC_SOSC_PWR_HIGH" 2 1448 "0x00400000"
D G "OSC_CLOCK_SWITCH_HOLD" 2 1450 "0x00800000"
D G "OSC_ADOSC_ENABLED" 2 1451 "0x04000000"
D G "OSC_SOSC_ENABLED" 2 1452 "0x08000000"
D G "OSC_LFINTRC_ENABLED" 2 1453 "0x10000000"
D G "OSC_MFINTRC_ENABLED" 2 1454 "0x20000000"
D G "OSC_HFINTRC_ENABLED" 2 1455 "0x40000000"
D G "OSC_EXTOSC_ENABLED" 2 1456 "0x80000000"
D G "OSC_PLL_READY" 2 1460 "0x0001"
D G "OSC_ADCRC_READY" 2 1461 "0x0004"
D G "OSC_SOSC_READY" 2 1462 "0x0008"
D G "OSC_LFINTRC_READY" 2 1463 "0x0010"
D G "OSC_MFINTRC_READY" 2 1464 "0x0020"
D G "OSC_HFINTRC_READY" 2 1465 "0x0040"
D G "OSC_EXTOSC_READY" 2 1466 "0x0080"
D G "OSC_CLOCK_SWITCH_IN_PROGRESS" 2 1467 "0x0800"
D G "OSC_CLOCK_SWITCH_COMPLETE" 2 1468 "0x1000"
c L "setup_oscillator" 2 3 4 "FUNCTION"
F N "setup_adc" 2 1475 ""
V L "mode" 2 1475 "int32" `467 
F B "setup_adc" 2 1475 "void(int32 mode)" `466 
F N "setup_adc" 2 1476 ""
V L "mode" 2 1476 "int32" `469 
V L "ADCRS" 2 1476 "int8" `470 
V L "ADRPT" 2 1476 "int8" `471 
F B "setup_adc" 2 1476 "void(int32 mode,int8 ADCRS,int8 ADRPT)" `468 
F N "set_adc_trigger" 2 1477 ""
V L "trigger" 2 1477 "int8" `473 
F B "set_adc_trigger" 2 1477 "void(int8 trigger)" `472 
F N "read_adc" 2 1478 ""
F B "read_adc" 2 1478 "int8()" `474 
F N "read_adc" 2 1479 ""
V L "mode" 2 1479 "int8" `476 
F B "read_adc" 2 1479 "int8(int8 mode)" `475 
F N "read_adc" 2 1480 ""
f G "read_adc" 2 1480 "int16()" `477 
F N "read_adc" 2 1481 ""
V L "mode" 2 1481 "int8" `478 
f G "read_adc" 2 1481 "int16(int8 mode,int8 which)" `477 
F N "adc_done" 2 1482 ""
F B "adc_done" 2 1482 "int8(int8 mode,int8 which)" `477 
F N "adc_read" 2 1483 ""
V L "which" 2 1483 "int8" `479 
F B "adc_read" 2 1483 "int8(int8 which)" `478 
F N "adc_read" 2 1484 ""
V L "which" 2 1484 "int8" `481 
f G "adc_read" 2 1484 "int16(int8 which,int8 value)" `480 
F N "adc_write" 2 1485 ""
V L "which" 2 1485 "int8" `481 
V L "value" 2 1485 "int8" `482 
F B "adc_write" 2 1485 "void(int8 which,int8 value)" `480 
F N "adc_write" 2 1486 ""
V L "which" 2 1486 "int8" `484 
V L "value" 2 1486 "int16" `485 
F B "adc_write" 2 1486 "void(int8 which,int16 value)" `483 
F N "adc_status" 2 1487 ""
F B "adc_status" 2 1487 "int8()" `486  "Constants used for SETUP_ADC() first parameter are:"
D G "ADC_LEGACY_MODE" 2 1489 "0"
D G "ADC_ACCUMULATE_MODE" 2 1490 "0x00010000"
D G "ADC_AVERAGE_MODE" 2 1491 "0x00020000"
D G "ADC_BURST_AVERAGE_MODE" 2 1492 "0x00030000"
D G "ADC_LOW_PASS_FILTER_MODE" 2 1493 "0x00040000"
D G "ADC_OFF" 2 1494 "0x80000000"
D G "ADC_CLOCK_DIV_2" 2 1501 "0"
D G "ADC_CLOCK_DIV_4" 2 1502 "0x00000001"
D G "ADC_CLOCK_DIV_8" 2 1503 "0x00000003"
D G "ADC_CLOCK_DIV_16" 2 1504 "0x00000007"
D G "ADC_CLOCK_DIV_32" 2 1505 "0x0000000F"
D G "ADC_CLOCK_DIV_64" 2 1506 "0x0000001F"
D G "ADC_CLOCK_DIV_128" 2 1507 "0x0000003F"
D G "ADC_CLOCK_INTERNAL" 2 1508 "0x00000080"
D G "ADC_TAD_MUL_0" 2 1515 "0x0000FF00"
D G "ADC_TAD_MUL_2" 2 1516 "0x0000FD00"
D G "ADC_TAD_MUL_4" 2 1517 "0x0000FB00"
D G "ADC_TAD_MUL_8" 2 1518 "0x0000F700"
D G "ADC_TAD_MUL_16" 2 1519 "0x0000EF00"
D G "ADC_TAD_MUL_32" 2 1520 "0x0000DF00"
D G "ADC_TAD_MUL_64" 2 1521 "0x0000BF00"
D G "ADC_TAD_MUL_128" 2 1522 "0x00007F00"
D G "ADC_TAD_MUL_255" 2 1523 "0"
D G "ADC_ADFLTR_TO_ADPREV_AT_START" 2 1525 "0"
D G "ADC_ADRES_TO_ADPREV_AT_START" 2 1526 "0x00800000"
D G "ADC_THRESHOLD_INT_DISABLED" 2 1528 "0"
D G "ADC_THRESHOLD_INT_ADERR_LT_ADLTH" 2 1529 "0x01000000"
D G "ADC_THRESHOLD_INT_ADERR_GTE_ADLTH" 2 1530 "0x02000000"
D G "ADC_THRESHOLD_INT_ADERR_GT_ADLTH_AND_LT_ADUTH" 2 1531 "0x03000000"
D G "ADC_THRESHOLD_INT_ADERR_LT_ATLTH_OR_GT_ADUTH" 2 1532 "0x04000000"
D G "ADC_THRESHOLD_INT_ADERR_LTE_ADUTH" 2 1533 "0x05000000"
D G "ADC_THRESHOLD_INT_ADERR_GT_ADUTH" 2 1534 "0x06000000"
D G "ADC_THRESHOLD_INT_END_OF_CALCULATION" 2 1535 "0x07000000"
D G "ADC_ERR_CALC_MODE_ADRES_MINUS_ADPREV" 2 1537 "0"
D G "ADC_ERR_CALC_MODE_ADRES_MINUS_ADSTPT" 2 1538 "0x10000000"
D G "ADC_ERR_CALC_MODE_ADRES_MINUS_ADFLTR" 2 1539 "0x20000000"
D G "ADC_ERR_CALC_MODE_ADPREV_MINUS_ADFLTR" 2 1540 "0x40000000"
D G "ADC_ERR_CALC_MODE_ADFLTR_MINUS_ADSTPT" 2 1541 "0x50000000"
D G "ADC_CONTINUOUS_OPERATION_ENABLED" 2 1543 "0x00000040"
D G "ADC_STOP_WHEN_THRESHOLD_CONDITIONS_MET" 2 1544 "0x08000000" "If Continuous Operation is enabled"
D G "ADC_RESULT" 2 1559 "0"
D G "ADC_PREV_RESULT" 2 1560 "1"
D G "ADC_ACCUMULATOR" 2 1561 "2"
D G "ADC_FILTER" 2 1562 "3"
D G "ADC_ERROR" 2 1563 "4"
D G "ADC_COUNT" 2 1564 "5"
D G "ADC_REPEAT" 2 1565 "6"
D G "ADC_SET_POINT" 2 1566 "7"
D G "ADC_LOWER_THRESHOLD" 2 1567 "8"
D G "ADC_UPPER_THRESHOLD" 2 1568 "9"
D G "ADC_TRIGGER_DISABLED" 2 1571 "0" "External trigger disabled, use read_adc() to start conversion"
D G "ADC_TRIGGER_ADACT_PIN" 2 1572 "0x01"
D G "ADC_TRIGGER_TIMER0" 2 1573 "0x02"
D G "ADC_TRIGGER_TIMER1" 2 1574 "0x03"
D G "ADC_TRIGGER_TIMER2" 2 1575 "0x04"
D G "ADC_TRIGGER_TIMER3" 2 1576 "0x05"
D G "ADC_TRIGGER_TIMER4" 2 1577 "0x06"
D G "ADC_TRIGGER_TIMER5" 2 1578 "0x07"
D G "ADC_TRIGGER_TIMER6" 2 1579 "0x08"
D G "ADC_TRIGGER_CCP1" 2 1580 "0x09"
D G "ADC_TRIGGER_CCP2" 2 1581 "0x0A"
D G "ADC_TRIGGER_PWM3" 2 1582 "0x0B"
D G "ADC_TRIGGER_PWM4" 2 1583 "0x0C"
D G "ADC_TRIGGER_COMP1" 2 1584 "0x0D"
D G "ADC_TRIGGER_COMP2" 2 1585 "0x0E"
D G "ADC_TRIGGER_IOC" 2 1586 "0x0F"
D G "ADC_TRIGGER_ADERR" 2 1587 "0x1C" "Read of ADERR register"
D G "ADC_TRIGGER_ADRESH" 2 1588 "0x1D" "Read of ADRESH register"
D G "ADC_TRIGGER_ADPCH" 2 1589 "0x1F" "Read of ADPCH register"
D G "ADC_OVERFLOWED" 2 1592 "0x80"
D G "ADC_GT_UPPER_THRESHOLD" 2 1593 "0x40"
D G "ADC_LT_LOWER_THRESHOLD" 2 1594 "0x20"
D G "ADC_UPDATING" 2 1595 "0x10"
c L "adc_status" 2 3 3 "FUNCTION"
c L "adc_status" 2 3 1 "FUNCTION"
F N "setup_adc_ports" 2 1603 ""
V L "pins" 2 1603 "int32" `489 
F B "setup_adc_ports" 2 1603 "void(int32 pins)" `488 
F N "setup_adc_ports" 2 1604 ""
V L "pins" 2 1604 "int32" `491 
V L "p2_pins" 2 1604 "int32" `492 
F B "setup_adc_ports" 2 1604 "void(int32 pins,int32 p2_pins)" `490 
F N "setup_adc_ports" 2 1605 ""
V L "pins" 2 1605 "int32" `494 
V L "p2_pins" 2 1605 "int32" `495 
V L "reference" 2 1605 "int32" `496 
F B "setup_adc_ports" 2 1605 "void(int32 pins,int32 p2_pins,int32 reference)" `493 
F N "set_analog_pins" 2 1606 ""
V L "pin" 2 1606 "int8" `498 
F B "set_analog_pins" 2 1606 "void(int8 pin,*int8 _VA_LIST)" `497 
F N "setup_adc_reference" 2 1607 ""
V L "reference" 2 1607 "int32" `501 
F B "setup_adc_reference" 2 1607 "void(int32 reference)" `500 
F N "set_adc_channel" 2 1608 ""
V L "channel" 2 1608 "int8" `503 
F B "set_adc_channel" 2 1608 "void(int8 channel)" `502  "Constants used in SETUP_ADC_PORTS() are:"
D G "sAN0" 2 1612 "0x01000000" "| A0"
D G "sAN1" 2 1613 "0x02000000" "| A1"
D G "sAN2" 2 1614 "0x04000000" "| A2"
D G "sAN3" 2 1615 "0x08000000" "| A3"
D G "sAN4" 2 1616 "0x10000000" "| A4"
D G "sAN5" 2 1617 "0x20000000" "| A5"
D G "sAN6" 2 1618 "0x40000000" "| A6"
D G "sAN7" 2 1619 "0x80000000" "| A7"
D G "sAN8" 2 1620 "0x00010000" "| B0"
D G "sAN9" 2 1621 "0x00020000" "| B1"
D G "sAN10" 2 1622 "0x00040000" "| B2"
D G "sAN11" 2 1623 "0x00080000" "| B3"
D G "sAN12" 2 1624 "0x00100000" "| B4"
D G "sAN13" 2 1625 "0x00200000" "| B5"
D G "sAN14" 2 1626 "0x00400000" "| B6"
D G "sAN15" 2 1627 "0x00800000" "| B7"
D G "sAN16" 2 1628 "0x00000100" "| C0"
D G "sAN17" 2 1629 "0x00000200" "| C1"
D G "sAN18" 2 1630 "0x00000400" "| C2"
D G "sAN19" 2 1631 "0x00000800" "| C3"
D G "sAN20" 2 1632 "0x00001000" "| C4"
D G "sAN21" 2 1633 "0x00002000" "| C5"
D G "sAN22" 2 1634 "0x00004000" "| C6"
D G "sAN23" 2 1635 "0x00008000" "| C7"
D G "sAN24" 2 1636 "0x00000001" "| D0"
D G "sAN25" 2 1637 "0x00000002" "| D1"
D G "sAN26" 2 1638 "0x00000004" "| D2"
D G "sAN27" 2 1639 "0x00000008" "| D3"
D G "sAN28" 2 1640 "0x00000010" "| D4"
D G "sAN29" 2 1641 "0x00000020" "| D5"
D G "sAN30" 2 1642 "0x00000040" "| D6"
D G "sAN31" 2 1643 "0x00000080" "| D7"
D G "NO_ANALOGS" 2 1644 "0" "None"
D G "ALL_ANALOG" 2 1645 "0xFFFFFFFF" "A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 C0 C1 C2 C3 C4 C5 C6 C7 D0 D1 D2 D3 D4 D5 D6 D7"
D G "sAN32" 2 1648 "0x00000100" "| E0"
D G "sAN33" 2 1649 "0x00000200" "| E1"
D G "sAN34" 2 1650 "0x00000400" "| E2"
D G "NO_ANALOGS_P2" 2 1651 "0" "None"
D G "ALL_ANALOG_P2" 2 1652 "0x00000700" "E0 E1 E2"
D G "VSS_VDD" 2 1655 "0x00000000" "| Range 0-Vdd"
D G "VSS_VREF" 2 1656 "0x00000002" "| Range 0-VrefH"
D G "VSS_FVR" 2 1657 "0x00000003" "| Range 0-Fixed Voltage Reference"
D G "VREF_VDD" 2 1658 "0x00000010" "| Range VrefL-Vdd"
D G "VREF_VREF" 2 1659 "0x00000012" "| Range VrefL-VrefH"
D G "VREF_FVR" 2 1660 "0x00000013" "| Range VrefL-Fixed Voltage Reference"
D G "AVSS_CHANNEL" 2 1664 "0x3C"
D G "TEMPERATURE_INDICATOR" 2 1665 "0x3D"
D G "DAC_CHANNEL" 2 1666 "0x3E"
D G "FVR_CHANNEL" 2 1667 "0x3F"
D G "ADC_START_AND_READ" 2 1670 "7" "This is the default if nothing is specified"
D G "ADC_START_ONLY" 2 1671 "1"
D G "ADC_READ_ONLY" 2 1672 "6"
c L "set_adc_channel" 2 3 3 "FUNCTION"
F N "abs" 2 1678 ""
V L "x" 2 1678 "sint8" `505 
F B "abs" 2 1678 "sint8(sint8 x)" `504 
F N "abs" 2 1679 ""
V L "x" 2 1679 "sint16" `507 
F B "abs" 2 1679 "sint16(sint16 x)" `506 
F N "abs" 2 1680 ""
V L "x" 2 1680 "sint32" `509 
F B "abs" 2 1680 "sint32(sint32 x)" `508 
F N "abs" 2 1681 ""
V L "x" 2 1681 "float" `511 
F B "abs" 2 1681 "float(float x)" `510 
F N "_mul" 2 1682 ""
V L "??65535" 2 1682 "int8" `513 
V L "??65535" 2 1682 "int8" `514 
F B "_mul" 2 1682 "int16(int8 ,int8 )" `512 
F N "_mul" 2 1683 ""
V L "??65535" 2 1683 "sint8" `516 
V L "??65535" 2 1683 "sint8" `517 
F B "_mul" 2 1683 "sint16(sint8 ,sint8 )" `515 
F N "_mul" 2 1684 ""
V L "??65535" 2 1684 "int16" `519 
V L "??65535" 2 1684 "int16" `520 
F B "_mul" 2 1684 "int32(int16 ,int16 )" `518 
F N "_mul" 2 1685 ""
V L "??65535" 2 1685 "sint16" `522 
V L "??65535" 2 1685 "sint16" `523 
F B "_mul" 2 1685 "sint32(sint16 ,sint16 )" `521  "Memory Manipulation Prototypes:"
F N "read_bank" 2 1688 ""
V L "bank" 2 1688 "int8" `525 
V L "offset" 2 1688 "int8" `526 
F B "read_bank" 2 1688 "int8(int8 bank,int8 offset)" `524 
F N "write_bank" 2 1689 ""
V L "bank" 2 1689 "int8" `528 
V L "offset" 2 1689 "int8" `529 
V L "value" 2 1689 "int8" `530 
F B "write_bank" 2 1689 "void(int8 bank,int8 offset,int8 value)" `527 
F N "strcpy" 2 1690 ""
V L "dest" 2 1690 "*int8" `532 
V L "src" 2 1690 "*int8" `533 
F B "strcpy" 2 1690 "void(*int8 dest,*int8 src)" `531 
F N "memset" 2 1691 ""
V L "destination" 2 1691 "*int8" `535 
V L "value" 2 1691 "int8" `536 
V L "num" 2 1691 "int16" `537 
F B "memset" 2 1691 "void(*int8 destination,int8 value,int16 num)" `534 
F N "memcpy" 2 1692 ""
V L "destination" 2 1692 "*int8" `539 
V L "source" 2 1692 "*int8" `540 
V L "num" 2 1692 "int16" `541 
F B "memcpy" 2 1692 "void(*int8 destination,*int8 source,int16 num)" `538  "String Prototypes:"
F N "toupper" 2 1695 ""
V L "cvalue" 2 1695 "int8" `543 
F B "toupper" 2 1695 "int8(int8 cvalue)" `542 
F N "tolower" 2 1696 ""
V L "cvalue" 2 1696 "int8" `545 
F B "tolower" 2 1696 "int8(int8 cvalue)" `544 
F N "sprintf" 2 1697 ""
V L "string" 2 1697 "*int8" `547 
V L "cstring" 2 1697 "*int8" `548 
F B "sprintf" 2 1697 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `546  "Data Manipulators Prototypes:"
F N "shift_left" 2 1700 ""
V L "address" 2 1700 "*int8" `551 
V L "bytes" 2 1700 "int8" `552 
V L "value" 2 1700 "int8" `553 
F B "shift_left" 2 1700 "int8(*int8 address,int8 bytes,int8 value)" `550 
F N "shift_right" 2 1701 ""
V L "address" 2 1701 "*int8" `555 
V L "bytes" 2 1701 "int8" `556 
V L "value" 2 1701 "int8" `557 
F B "shift_right" 2 1701 "int8(*int8 address,int8 bytes,int8 value)" `554 
F N "rotate_left" 2 1702 ""
V L "address" 2 1702 "*int8" `559 
V L "bytes" 2 1702 "int8" `560 
F B "rotate_left" 2 1702 "void(*int8 address,int8 bytes)" `558 
F N "rotate_right" 2 1703 ""
V L "address" 2 1703 "*int8" `562 
V L "bytes" 2 1703 "int8" `563 
F B "rotate_right" 2 1703 "void(*int8 address,int8 bytes)" `561 
F N "swap" 2 1704 ""
V L "value" 2 1704 "int8" `565 
F B "swap" 2 1704 "void(int8 value)" `564 
F N "make8" 2 1705 ""
V L "var" 2 1705 "int16" `567 
V L "offset" 2 1705 "int8" `568 
F B "make8" 2 1705 "int8(int16 var,int8 offset)" `566 
F N "make8" 2 1706 ""
V L "var" 2 1706 "int32" `570 
V L "offset" 2 1706 "int8" `571 
F B "make8" 2 1706 "int8(int32 var,int8 offset)" `569 
F N "make16" 2 1707 ""
V L "varhigh" 2 1707 "int8" `573 
V L "varlow" 2 1707 "int8" `574 
F B "make16" 2 1707 "int16(int8 varhigh,int8 varlow)" `572 
F N "make32" 2 1708 ""
V L "var1" 2 1708 "int16" `576 
F B "make32" 2 1708 "int32(int16 var1)" `575 
F N "make32" 2 1709 ""
V L "var1" 2 1709 "int16" `578 
V L "var2" 2 1709 "int16" `579 
F B "make32" 2 1709 "int32(int16 var1,int16 var2)" `577 
F N "make32" 2 1710 ""
V L "var1" 2 1710 "int16" `581 
V L "var2" 2 1710 "int8" `582 
F B "make32" 2 1710 "int32(int16 var1,int8 var2)" `580 
F N "make32" 2 1711 ""
V L "var1" 2 1711 "int16" `584 
V L "var2" 2 1711 "int8" `585 
V L "var3" 2 1711 "int8" `586 
F B "make32" 2 1711 "int32(int16 var1,int8 var2,int8 var3)" `583 
F N "make32" 2 1712 ""
V L "var1" 2 1712 "int8" `588 
F B "make32" 2 1712 "int32(int8 var1)" `587 
F N "make32" 2 1713 ""
V L "var1" 2 1713 "int8" `590 
V L "var2" 2 1713 "int8" `591 
F B "make32" 2 1713 "int32(int8 var1,int8 var2)" `589 
F N "make32" 2 1714 ""
V L "var1" 2 1714 "int8" `593 
V L "var2" 2 1714 "int8" `594 
V L "var3" 2 1714 "int8" `595 
F B "make32" 2 1714 "int32(int8 var1,int8 var2,int8 var3)" `592 
F N "make32" 2 1715 ""
V L "var1" 2 1715 "int8" `597 
V L "var2" 2 1715 "int8" `598 
V L "var3" 2 1715 "int8" `599 
V L "var4" 2 1715 "int8" `600 
F B "make32" 2 1715 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `596 
F N "make32" 2 1716 ""
V L "var1" 2 1716 "int8" `602 
V L "var2" 2 1716 "int16" `603 
F B "make32" 2 1716 "int32(int8 var1,int16 var2)" `601 
F N "make32" 2 1717 ""
V L "var1" 2 1717 "int8" `605 
V L "var2" 2 1717 "int16" `606 
V L "var3" 2 1717 "int8" `607 
F B "make32" 2 1717 "int32(int8 var1,int16 var2,int8 var3)" `604 
F N "make32" 2 1718 ""
V L "var1" 2 1718 "int8" `609 
V L "var2" 2 1718 "int8" `610 
V L "var3" 2 1718 "int16" `611 
F B "make32" 2 1718 "int32(int8 var1,int8 var2,int16 var3)" `608 
F N "bit_set" 2 1719 ""
V L "var" 2 1719 "int8" `613 
V L "bit" 2 1719 "int8" `614 
F B "bit_set" 2 1719 "void(int8 var,int8 bit)" `612 
F N "bit_set" 2 1720 ""
V L "var" 2 1720 "int16" `616 
V L "bit" 2 1720 "int8" `617 
F B "bit_set" 2 1720 "void(int16 var,int8 bit)" `615 
F N "bit_set" 2 1721 ""
V L "var" 2 1721 "int32" `619 
V L "bit" 2 1721 "int8" `620 
F B "bit_set" 2 1721 "void(int32 var,int8 bit)" `618 
F N "bit_clear" 2 1722 ""
V L "var" 2 1722 "int8" `622 
V L "bit" 2 1722 "int8" `623 
F B "bit_clear" 2 1722 "void(int8 var,int8 bit)" `621 
F N "bit_clear" 2 1723 ""
V L "var" 2 1723 "int16" `625 
V L "bit" 2 1723 "int8" `626 
F B "bit_clear" 2 1723 "void(int16 var,int8 bit)" `624 
F N "bit_clear" 2 1724 ""
V L "var" 2 1724 "int32" `628 
V L "bit" 2 1724 "int8" `629 
F B "bit_clear" 2 1724 "void(int32 var,int8 bit)" `627 
F N "bit_test" 2 1725 ""
V L "var" 2 1725 "int8" `631 
V L "bit" 2 1725 "int8" `632 
F B "bit_test" 2 1725 "int8(int8 var,int8 bit)" `630 
F N "bit_test" 2 1726 ""
V L "var" 2 1726 "int16" `634 
V L "bit" 2 1726 "int8" `635 
F B "bit_test" 2 1726 "int8(int16 var,int8 bit)" `633 
F N "bit_test" 2 1727 ""
V L "var" 2 1727 "int32" `637 
V L "bit" 2 1727 "int8" `638 
F B "bit_test" 2 1727 "int8(int32 var,int8 bit)" `636  "#use delay() Prototypes:"
F N "delay_cycles" 2 1730 ""
V L "count" 2 1730 "int8" `640 
F B "delay_cycles" 2 1730 "void(int8 count)" `639 
F N "delay_ms" 2 1731 ""
V L "time" 2 1731 "int16" `642 
F B "delay_ms" 2 1731 "void(int16 time)" `641 
F N "delay_us" 2 1732 ""
V L "time" 2 1732 "int16" `644 
F B "delay_us" 2 1732 "void(int16 time)" `643  "#use rs232() Prototypes:"
F N "putchar" 2 1735 ""
V L "cdata" 2 1735 "int8" `646 
F B "putchar" 2 1735 "void(int8 cdata)" `645 
F N "putchar" 2 1736 ""
V L "cdata" 2 1736 "int8" `648 
V L "stream" 2 1736 "int8" `649 
F B "putchar" 2 1736 "void(int8 cdata,int8 stream)" `647 
F N "puts" 2 1737 ""
V L "string" 2 1737 "*int8" `651 
F B "puts" 2 1737 "void(*int8 string)" `650 
F N "puts" 2 1738 ""
V L "string" 2 1738 "*int8" `653 
V L "stream" 2 1738 "int8" `654 
F B "puts" 2 1738 "void(*int8 string,int8 stream)" `652 
F N "getch" 2 1739 ""
F B "getch" 2 1739 "int8()" `655 
F N "getch" 2 1740 ""
V L "stream" 2 1740 "int8" `657 
F B "getch" 2 1740 "int8(int8 stream)" `656 
F N "gets" 2 1741 ""
V L "string" 2 1741 "*int8" `659 
F B "gets" 2 1741 "void(*int8 string)" `658 
F N "gets" 2 1742 ""
V L "string" 2 1742 "*int8" `661 
V L "stream" 2 1742 "int8" `662 
F B "gets" 2 1742 "void(*int8 string,int8 stream)" `660 
F N "kbhit" 2 1743 ""
F B "kbhit" 2 1743 "int8()" `663 
F N "kbhit" 2 1744 ""
V L "stream" 2 1744 "int8" `665 
F B "kbhit" 2 1744 "int8(int8 stream)" `664 
F N "printf" 2 1745 ""
V L "string" 2 1745 "*int8" `667 
F B "printf" 2 1745 "void(*int8 string,*int8 _VA_LIST)" `666 
F N "fprintf" 2 1746 ""
V L "stream" 2 1746 "int8" `670 
V L "string" 2 1746 "*int8" `671 
F B "fprintf" 2 1746 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `669 
F N "putc_send" 2 1747 ""
F B "putc_send" 2 1747 "void()" `673 
F N "fputc_send" 2 1748 ""
V L "stream" 2 1748 "int8" `675 
F B "fputc_send" 2 1748 "void(int8 stream)" `674 
F N "rcv_buffer_full" 2 1749 ""
F B "rcv_buffer_full" 2 1749 "int8()" `676 
F N "rcv_buffer_full" 2 1750 ""
V L "stream" 2 1750 "int8" `678 
F B "rcv_buffer_full" 2 1750 "int8(int8 stream)" `677 
F N "rcv_buffer_bytes" 2 1751 ""
F B "rcv_buffer_bytes" 2 1751 "int16()" `679 
F N "rcv_buffer_bytes" 2 1752 ""
V L "stream" 2 1752 "int8" `681 
F B "rcv_buffer_bytes" 2 1752 "int16(int8 stream)" `680 
F N "tx_buffer_full" 2 1753 ""
F B "tx_buffer_full" 2 1753 "int8()" `682 
F N "tx_buffer_full" 2 1754 ""
V L "stream" 2 1754 "int8" `684 
F B "tx_buffer_full" 2 1754 "int8(int8 stream)" `683 
F N "tx_buffer_bytes" 2 1755 ""
F B "tx_buffer_bytes" 2 1755 "int16()" `685 
F N "tx_buffer_bytes" 2 1756 ""
V L "stream" 2 1756 "int8" `687 
F B "tx_buffer_bytes" 2 1756 "int16(int8 stream)" `686 
F N "linbus_header" 2 1757 ""
V L "identifier" 2 1757 "int8" `689 
F B "linbus_header" 2 1757 "int8(int8 identifier)" `688 
F N "linbus_header" 2 1758 ""
V L "stream" 2 1758 "int8" `691 
V L "identifier" 2 1758 "int8" `692 
F B "linbus_header" 2 1758 "int8(int8 stream,int8 identifier)" `690 
F N "linbus_header_hit" 2 1759 ""
F B "linbus_header_hit" 2 1759 "int8()" `693 
F N "linbus_header_hit" 2 1760 ""
V L "stream" 2 1760 "int8" `695 
F B "linbus_header_hit" 2 1760 "int8(int8 stream)" `694 
F N "linbus_header_get" 2 1761 ""
F B "linbus_header_get" 2 1761 "int8()" `696 
F N "linbus_header_get" 2 1762 ""
V L "stream" 2 1762 "int8" `698 
F B "linbus_header_get" 2 1762 "int8(int8 stream)" `697 
F N "linbus_rx_response" 2 1763 ""
V L "DataPtr" 2 1763 "*int8" `700 
V L "count" 2 1763 "int8" `701 
F B "linbus_rx_response" 2 1763 "int8(*int8 DataPtr,int8 count)" `699 
F N "linbus_rx_response" 2 1764 ""
V L "stream" 2 1764 "int8" `703 
V L "DataPtr" 2 1764 "*int8" `704 
V L "count" 2 1764 "int8" `705 
F B "linbus_rx_response" 2 1764 "int8(int8 stream,*int8 DataPtr,int8 count)" `702 
F N "linbus_tx_response" 2 1765 ""
V L "DataPtr" 2 1765 "*int8" `707 
V L "count" 2 1765 "int8" `708 
F B "linbus_tx_response" 2 1765 "void(*int8 DataPtr,int8 count)" `706 
F N "linbus_tx_response" 2 1766 ""
V L "stream" 2 1766 "int8" `710 
V L "DataPtr" 2 1766 "*int8" `711 
V L "count" 2 1766 "int8" `712 
F B "linbus_tx_response" 2 1766 "void(int8 stream,*int8 DataPtr,int8 count)" `709 
F N "linbus_checksum_type" 2 1767 ""
V L "type" 2 1767 "int8" `714 
F B "linbus_checksum_type" 2 1767 "void(int8 type)" `713 
F N "linbus_checksum_type" 2 1768 ""
V L "stream" 2 1768 "int8" `716 
V L "type" 2 1768 "int8" `717 
F B "linbus_checksum_type" 2 1768 "void(int8 stream,int8 type)" `715  "#use i2c() Prototypes:"
F N "i2c_read" 2 1771 ""
F B "i2c_read" 2 1771 "int8()" `718 
F N "i2c_read" 2 1772 ""
V L "ack" 2 1772 "int8" `720 
F B "i2c_read" 2 1772 "int8(int8 ack)" `719 
F N "i2c_read" 2 1773 ""
V L "stream" 2 1773 "int8" `722 
V L "ack" 2 1773 "int8" `723 
F B "i2c_read" 2 1773 "int8(int8 stream,int8 ack)" `721 
F N "i2c_write" 2 1774 ""
V L "data" 2 1774 "int8" `725 
F B "i2c_write" 2 1774 "int8(int8 data)" `724 
F N "i2c_write" 2 1775 ""
V L "stream" 2 1775 "int8" `727 
V L "data" 2 1775 "int8" `728 
F B "i2c_write" 2 1775 "int8(int8 stream,int8 data)" `726 
F N "i2c_start" 2 1776 ""
F B "i2c_start" 2 1776 "void()" `729 
F N "i2c_start" 2 1777 ""
V L "stream" 2 1777 "int8" `731 
F B "i2c_start" 2 1777 "void(int8 stream)" `730 
F N "i2c_start" 2 1778 ""
V L "stream" 2 1778 "int8" `733 
V L "restart" 2 1778 "int8" `734 
F B "i2c_start" 2 1778 "void(int8 stream,int8 restart)" `732 
F N "i2c_stop" 2 1779 ""
F B "i2c_stop" 2 1779 "void()" `735 
F N "i2c_stop" 2 1780 ""
V L "stream" 2 1780 "int8" `737 
F B "i2c_stop" 2 1780 "void(int8 stream)" `736 
F N "i2c_isr_state" 2 1781 ""
F B "i2c_isr_state" 2 1781 "int8()" `738 
F N "i2c_slaveaddr" 2 1782 ""
V L "addr" 2 1782 "int8" `740 
F B "i2c_slaveaddr" 2 1782 "void(int8 addr)" `739 
F N "i2c_slaveaddr" 2 1783 ""
V L "stream" 2 1783 "int8" `742 
V L "addr" 2 1783 "int8" `743 
F B "i2c_slaveaddr" 2 1783 "void(int8 stream,int8 addr)" `741 
F N "i2c_poll" 2 1784 ""
F B "i2c_poll" 2 1784 "int8()" `744 
F N "i2c_poll" 2 1785 ""
V L "stream" 2 1785 "int8" `746 
F B "i2c_poll" 2 1785 "int8(int8 stream)" `745 
F N "i2c_init" 2 1786 ""
V L "baud" 2 1786 "int32" `748 
F B "i2c_init" 2 1786 "void(int32 baud)" `747 
F N "i2c_init" 2 1787 ""
V L "stream" 2 1787 "int8" `750 
V L "baud" 2 1787 "int32" `751 
F B "i2c_init" 2 1787 "void(int8 stream,int32 baud)" `749 
F N "i2c_transfer" 2 1788 ""
V L "address" 2 1788 "int8" `753 
V L "wData" 2 1788 "*int8" `754 
V L "wCount" 2 1788 "int8" `755 
F B "i2c_transfer" 2 1788 "int8(int8 address,*int8 wData,int8 wCount)" `752 
F N "i2c_transfer" 2 1789 ""
V L "address" 2 1789 "int8" `757 
V L "wData" 2 1789 "*int8" `758 
V L "wCount" 2 1789 "int8" `759 
V L "rData" 2 1789 "*int8" `760 
V L "rCount" 2 1789 "*int8" `761 
F B "i2c_transfer" 2 1789 "int8(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `756 
F N "i2c_transfer" 2 1790 ""
V L "stream" 2 1790 "int8" `763 
V L "address" 2 1790 "int8" `764 
V L "wData" 2 1790 "*int8" `765 
V L "wCount" 2 1790 "int8" `766 
F B "i2c_transfer" 2 1790 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `762 
F N "i2c_transfer" 2 1791 ""
V L "stream" 2 1791 "int8" `768 
V L "address" 2 1791 "int8" `769 
V L "wData" 2 1791 "*int8" `770 
V L "wCount" 2 1791 "int8" `771 
V L "rData" 2 1791 "*int8" `772 
V L "rCount" 2 1791 "*int8" `773 
F B "i2c_transfer" 2 1791 "int8(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `767 
F N "i2c_transfer_out" 2 1792 ""
V L "address" 2 1792 "int8" `775 
V L "wData" 2 1792 "*int8" `776 
V L "wCount" 2 1792 "int8" `777 
F B "i2c_transfer_out" 2 1792 "int8(int8 address,*int8 wData,int8 wCount)" `774 
F N "i2c_transfer_out" 2 1793 ""
V L "stream" 2 1793 "int8" `779 
V L "address" 2 1793 "int8" `780 
V L "wData" 2 1793 "*int8" `781 
V L "wCount" 2 1793 "int8" `782 
F B "i2c_transfer_out" 2 1793 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `778 
F N "i2c_transfer_in" 2 1794 ""
V L "address" 2 1794 "int8" `784 
V L "rData" 2 1794 "*int8" `785 
V L "rCount" 2 1794 "int8" `786 
F B "i2c_transfer_in" 2 1794 "int8(int8 address,*int8 rData,int8 rCount)" `783 
F N "i2c_transfer_in" 2 1795 ""
V L "stream" 2 1795 "int8" `788 
V L "address" 2 1795 "int8" `789 
V L "rData" 2 1795 "*int8" `790 
V L "rCount" 2 1795 "int8" `791 
F B "i2c_transfer_in" 2 1795 "int8(int8 stream,int8 address,*int8 rData,int8 rCount)" `787  "#use spi() Prototypes:"
F N "spi_xfer" 2 1798 ""
F B "spi_xfer" 2 1798 "int8()" `792 
F N "spi_xfer" 2 1799 ""
f G "spi_xfer" 2 1799 "int16(int8 data)" `793 
F N "spi_xfer" 2 1800 ""
f G "spi_xfer" 2 1800 "int32(int8 data)" `793 
F N "spi_xfer" 2 1801 ""
V L "data" 2 1801 "int8" `794 
F B "spi_xfer" 2 1801 "int8(int8 data)" `793 
F N "spi_xfer" 2 1802 ""
V L "data" 2 1802 "int16" `796 
F B "spi_xfer" 2 1802 "int16(int16 data)" `795 
F N "spi_xfer" 2 1803 ""
V L "data" 2 1803 "int32" `798 
F B "spi_xfer" 2 1803 "int32(int32 data)" `797 
F N "spi_xfer" 2 1804 ""
V L "stream" 2 1804 "int8" `800 
V L "data" 2 1804 "int8" `801 
F B "spi_xfer" 2 1804 "int8(int8 stream,int8 data)" `799 
F N "spi_xfer" 2 1805 ""
V L "stream" 2 1805 "int8" `803 
V L "data" 2 1805 "int16" `804 
F B "spi_xfer" 2 1805 "int16(int8 stream,int16 data)" `802 
F N "spi_xfer" 2 1806 ""
V L "stream" 2 1806 "int8" `806 
V L "data" 2 1806 "int32" `807 
F B "spi_xfer" 2 1806 "int32(int8 stream,int32 data)" `805 
F N "spi_xfer" 2 1807 ""
V L "stream" 2 1807 "int8" `809 
V L "data" 2 1807 "int8" `810 
V L "bits" 2 1807 "int8" `811 
F B "spi_xfer" 2 1807 "int8(int8 stream,int8 data,int8 bits)" `808 
F N "spi_xfer" 2 1808 ""
V L "stream" 2 1808 "int8" `813 
V L "data" 2 1808 "int16" `814 
V L "bits" 2 1808 "int8" `815 
F B "spi_xfer" 2 1808 "int16(int8 stream,int16 data,int8 bits)" `812 
F N "spi_xfer" 2 1809 ""
V L "stream" 2 1809 "int8" `817 
V L "data" 2 1809 "int32" `818 
V L "bits" 2 1809 "int8" `819 
F B "spi_xfer" 2 1809 "int32(int8 stream,int32 data,int8 bits)" `816 
F N "spi_init" 2 1810 ""
V L "baud" 2 1810 "int32" `821 
F B "spi_init" 2 1810 "void(int32 baud)" `820 
F N "spi_init" 2 1811 ""
V L "stream" 2 1811 "int8" `823 
V L "baud" 2 1811 "int32" `824 
F B "spi_init" 2 1811 "void(int8 stream,int32 baud)" `822 
F N "spi_speed" 2 1812 ""
V L "baud" 2 1812 "int32" `826 
F B "spi_speed" 2 1812 "void(int32 baud)" `825 
F N "spi_speed" 2 1813 ""
V L "stream" 2 1813 "int8" `828 
V L "baud" 2 1813 "int32" `829 
F B "spi_speed" 2 1813 "void(int8 stream,int32 baud)" `827 
F N "spi_speed" 2 1814 ""
V L "stream" 2 1814 "int8" `831 
V L "baud" 2 1814 "int32" `832 
V L "clock" 2 1814 "int32" `833 
F B "spi_speed" 2 1814 "void(int8 stream,int32 baud,int32 clock)" `830 
F N "spi_prewrite" 2 1815 ""
V L "data" 2 1815 "int8" `835 
F B "spi_prewrite" 2 1815 "void(int8 data)" `834 
F N "spi_prewrite" 2 1816 ""
V L "data" 2 1816 "int16" `837 
F B "spi_prewrite" 2 1816 "void(int16 data)" `836 
F N "spi_prewrite" 2 1817 ""
V L "data" 2 1817 "int32" `839 
F B "spi_prewrite" 2 1817 "void(int32 data)" `838 
F N "spi_prewrite" 2 1818 ""
V L "??65535" 2 1818 "int8" `841 
V L "data" 2 1818 "int8" `842 
F B "spi_prewrite" 2 1818 "void(int8 ,int8 data)" `840 
F N "spi_prewrite" 2 1819 ""
V L "??65535" 2 1819 "int8" `844 
V L "data" 2 1819 "int16" `845 
F B "spi_prewrite" 2 1819 "void(int8 ,int16 data)" `843 
F N "spi_prewrite" 2 1820 ""
V L "??65535" 2 1820 "int8" `847 
V L "data" 2 1820 "int32" `848 
F B "spi_prewrite" 2 1820 "void(int8 ,int32 data)" `846 
F N "spi_xfer_in" 2 1821 ""
F B "spi_xfer_in" 2 1821 "int8()" `849 
F N "spi_xfer_in" 2 1822 ""
f G "spi_xfer_in" 2 1822 "int16(int8 bits)" `850 
F N "spi_xfer_in" 2 1823 ""
f G "spi_xfer_in" 2 1823 "int32(int8 bits)" `850 
F N "spi_xfer_in" 2 1824 ""
V L "bits" 2 1824 "int8" `851 
F B "spi_xfer_in" 2 1824 "int8(int8 bits)" `850 
F N "spi_xfer_in" 2 1825 ""
V L "bits" 2 1825 "int8" `853 
f G "spi_xfer_in" 2 1825 "int16(int8 bits,int8 bits)" `852 
F N "spi_xfer_in" 2 1826 ""
V L "bits" 2 1826 "int8" `853 
f G "spi_xfer_in" 2 1826 "int32(int8 bits,int8 bits)" `852 
F N "spi_xfer_in" 2 1827 ""
V L "stream" 2 1827 "int8" `853 
V L "bits" 2 1827 "int8" `854 
F B "spi_xfer_in" 2 1827 "int8(int8 stream,int8 bits)" `852 
F N "spi_xfer_in" 2 1828 ""
V L "stream" 2 1828 "int8" `853 
V L "bits" 2 1828 "int8" `857 
f G "spi_xfer_in" 2 1828 "int16(int8 stream,int8 bits,int16 count)" `855 
F N "spi_xfer_in" 2 1829 ""
V L "stream" 2 1829 "int8" `853 
V L "bits" 2 1829 "int8" `857 
f G "spi_xfer_in" 2 1829 "int32(int8 stream,int8 bits,int16 count)" `855 
F N "spi_transfer" 2 1830 ""
V L "wData" 2 1830 "*int8" `856 
V L "rData" 2 1830 "*int8" `857 
V L "count" 2 1830 "int16" `858 
F B "spi_transfer" 2 1830 "void(*int8 wData,*int8 rData,int16 count)" `855 
F N "spi_transfer" 2 1831 ""
V L "stream" 2 1831 "int8" `860 
V L "wData" 2 1831 "*int8" `861 
V L "rData" 2 1831 "*int8" `862 
V L "count" 2 1831 "int16" `863 
F B "spi_transfer" 2 1831 "void(int8 stream,*int8 wData,*int8 rData,int16 count)" `859 
F N "spi_transfer_write" 2 1832 ""
V L "wData" 2 1832 "*int8" `865 
V L "count" 2 1832 "int16" `866 
F B "spi_transfer_write" 2 1832 "void(*int8 wData,int16 count)" `864 
F N "spi_transfer_write" 2 1833 ""
V L "stream" 2 1833 "int8" `868 
V L "wData" 2 1833 "*int8" `869 
V L "count" 2 1833 "int16" `870 
F B "spi_transfer_write" 2 1833 "void(int8 stream,*int8 wData,int16 count)" `867 
F N "spi_transfer_read" 2 1834 ""
V L "rData" 2 1834 "*int8" `872 
V L "count" 2 1834 "int16" `873 
F B "spi_transfer_read" 2 1834 "void(*int8 rData,int16 count)" `871 
F N "spi_transfer_read" 2 1835 ""
V L "stream" 2 1835 "int8" `875 
V L "rData" 2 1835 "*int8" `876 
V L "count" 2 1835 "int16" `877 
F B "spi_transfer_read" 2 1835 "void(int8 stream,*int8 rData,int16 count)" `874  "#use rtos() Prototypes:"
F N "rtos_run" 2 1838 ""
F B "rtos_run" 2 1838 "void()" `878 
F N "rtos_yield" 2 1839 ""
F B "rtos_yield" 2 1839 "void()" `879 
F N "rtos_enable" 2 1840 ""
V L "task" 2 1840 "int8" `881 
F B "rtos_enable" 2 1840 "void(int8 task)" `880 
F N "rtos_disable" 2 1841 ""
V L "task" 2 1841 "int8" `883 
F B "rtos_disable" 2 1841 "void(int8 task)" `882 
F N "rtos_terminate" 2 1842 ""
F B "rtos_terminate" 2 1842 "void()" `884 
F N "rtos_await" 2 1843 ""
V L "flag" 2 1843 "int8" `886 
F B "rtos_await" 2 1843 "void(int8 flag)" `885 
F N "rtos_wait" 2 1844 ""
V L "sem" 2 1844 "int8" `888 
F B "rtos_wait" 2 1844 "void(int8 sem)" `887 
F N "rtos_signal" 2 1845 ""
V L "sem" 2 1845 "int8" `890 
F B "rtos_signal" 2 1845 "void(int8 sem)" `889 
F N "rtos_msg_send" 2 1846 ""
V L "task" 2 1846 "int8" `892 
V L "msg" 2 1846 "int8" `893 
F B "rtos_msg_send" 2 1846 "void(int8 task,int8 msg)" `891 
F N "rtos_msg_read" 2 1847 ""
F B "rtos_msg_read" 2 1847 "int8()" `894 
F N "rtos_msg_poll" 2 1848 ""
F B "rtos_msg_poll" 2 1848 "int8()" `895 
F N "rtos_overrun" 2 1849 ""
V L "task" 2 1849 "int8" `897 
F B "rtos_overrun" 2 1849 "int8(int8 task)" `896 
F N "rtos_stats" 2 1850 ""
V L "task" 2 1850 "int8" `899 
V L "stat" 2 1850 "*int8" `900 
F B "rtos_stats" 2 1850 "void(int8 task,*int8 stat)" `898  "#use timer() Prototypes:"
F N "get_ticks" 2 1853 ""
F B "get_ticks" 2 1853 "int8()" `901 
F N "get_ticks" 2 1854 ""
f G "get_ticks" 2 1854 "int16(int8 stream)" `902 
F N "get_ticks" 2 1855 ""
f G "get_ticks" 2 1855 "int32(int8 stream)" `902 
F N "get_ticks" 2 1856 ""
V L "stream" 2 1856 "int8" `903 
F B "get_ticks" 2 1856 "int8(int8 stream)" `902 
F N "get_ticks" 2 1857 ""
V L "stream" 2 1857 "int8" `905 
f G "get_ticks" 2 1857 "int16(int8 stream)" `904 
F N "get_ticks" 2 1858 ""
V L "stream" 2 1858 "int8" `905 
f G "get_ticks" 2 1858 "int32(int8 stream)" `904 
F N "set_ticks" 2 1859 ""
V L "value" 2 1859 "int8" `905 
F B "set_ticks" 2 1859 "void(int8 value)" `904 
F N "set_ticks" 2 1860 ""
V L "value" 2 1860 "int16" `907 
F B "set_ticks" 2 1860 "void(int16 value)" `906 
F N "set_ticks" 2 1861 ""
V L "value" 2 1861 "int32" `909 
F B "set_ticks" 2 1861 "void(int32 value)" `908 
F N "set_ticks" 2 1862 ""
V L "stream" 2 1862 "int8" `911 
V L "value" 2 1862 "int8" `912 
F B "set_ticks" 2 1862 "void(int8 stream,int8 value)" `910 
F N "set_ticks" 2 1863 ""
V L "stream" 2 1863 "int8" `914 
V L "value" 2 1863 "int16" `915 
F B "set_ticks" 2 1863 "void(int8 stream,int16 value)" `913 
F N "set_ticks" 2 1864 ""
V L "stream" 2 1864 "int8" `917 
V L "value" 2 1864 "int32" `918 
F B "set_ticks" 2 1864 "void(int8 stream,int32 value)" `916  "#use pwm() Prototypes:"
F N "pwm_on" 2 1867 ""
F B "pwm_on" 2 1867 "void()" `919 
F N "pwm_on" 2 1868 ""
V L "stream" 2 1868 "int8" `921 
F B "pwm_on" 2 1868 "void(int8 stream)" `920 
F N "pwm_off" 2 1869 ""
F B "pwm_off" 2 1869 "void()" `922 
F N "pwm_off" 2 1870 ""
V L "stream" 2 1870 "int8" `924 
F B "pwm_off" 2 1870 "void(int8 stream)" `923 
F N "pwm_set_duty" 2 1871 ""
V L "duty" 2 1871 "int16" `926 
F B "pwm_set_duty" 2 1871 "void(int16 duty)" `925 
F N "pwm_set_duty" 2 1872 ""
V L "stream" 2 1872 "int8" `928 
V L "duty" 2 1872 "int16" `929 
F B "pwm_set_duty" 2 1872 "void(int8 stream,int16 duty)" `927 
F N "pwm_set_duty_percent" 2 1873 ""
V L "percent" 2 1873 "int16" `931 
F B "pwm_set_duty_percent" 2 1873 "void(int16 percent)" `930 
F N "pwm_set_duty_percent" 2 1874 ""
V L "stream" 2 1874 "int8" `933 
V L "percent" 2 1874 "int16" `934 
F B "pwm_set_duty_percent" 2 1874 "void(int8 stream,int16 percent)" `932 
F N "pwm_set_frequency" 2 1875 ""
V L "frequency" 2 1875 "int32" `936 
F B "pwm_set_frequency" 2 1875 "void(int32 frequency)" `935 
F N "pwm_set_frequency" 2 1876 ""
V L "stream" 2 1876 "int8" `938 
V L "frequency" 2 1876 "int32" `939 
F B "pwm_set_frequency" 2 1876 "void(int8 stream,int32 frequency)" `937 
F N "pwm_get_duty_period" 2 1877 ""
F B "pwm_get_duty_period" 2 1877 "int16()" `940 
F N "pwm_get_duty_period" 2 1878 ""
V L "stream" 2 1878 "int8" `942 
F B "pwm_get_duty_period" 2 1878 "int16(int8 stream)" `941  "#use capture() Prototypes:"
F N "get_capture_time" 2 1881 ""
F B "get_capture_time" 2 1881 "int16()" `943 
F N "get_capture_time" 2 1882 ""
V L "stream" 2 1882 "int8" `945 
F B "get_capture_time" 2 1882 "int16(int8 stream)" `944 
F N "get_capture_event" 2 1883 ""
F B "get_capture_event" 2 1883 "int8()" `946 
F N "get_capture_event" 2 1884 ""
V L "stream" 2 1884 "int8" `948 
F B "get_capture_event" 2 1884 "int8(int8 stream)" `947  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
F N "goto_address" 2 1897 ""
V L "address" 2 1897 "int32" `950 
F B "goto_address" 2 1897 "void(int32 address)" `949 
F N "label_address" 2 1898 ""
V L "label" 2 1898 "int32" `952 
F B "label_address" 2 1898 "int32(int32 label)" `951  "Program Memory Read Prototypes:"
F N "read_program_memory" 2 1901 ""
V L "address" 2 1901 "int32" `954 
V L "DataPtr" 2 1901 "*int8" `955 
V L "count" 2 1901 "int16" `956 
F B "read_program_memory" 2 1901 "void(int32 address,*int8 DataPtr,int16 count)" `953 
F N "read_program_eeprom" 2 1902 ""
V L "address" 2 1902 "int32" `958 
F B "read_program_eeprom" 2 1902 "int16(int32 address)" `957 
D G "DINFO_EUI" 2 1903 "20"
D G "DINFO_TI_LOW_GAIN" 2 1904 "36"
D G "DINFO_TI_LOW_OFFSET" 2 1905 "40"
D G "DINFO_TI_HIGH_GAIN" 2 1906 "42"
D G "DINFO_TI_HIGH_OFFSET" 2 1907 "46"
D G "DINFO_MUI_BYTES" 2 1908 "18"
D G "DINFO_EUI_BYTES" 2 1909 "16"
c L "read_program_eeprom" 2 3 1 "FUNCTION"
F N "write_program_memory" 2 1912 ""
V L "address" 2 1912 "int32" `960 
V L "DataPtr" 2 1912 "*int8" `961 
V L "count" 2 1912 "int16" `962 
F B "write_program_memory" 2 1912 "void(int32 address,*int8 DataPtr,int16 count)" `959 
F N "write_program_eeprom" 2 1913 ""
V L "address" 2 1913 "int32" `964 
V L "data" 2 1913 "int16" `965 
F B "write_program_eeprom" 2 1913 "void(int32 address,int16 data)" `963  "EEPROM Prototypes:"
D G "__EEADDRESS__" 2 1918 "unsigned int16"
F N "read_eeprom" 2 1923 ""
V L "address" 2 1923 "int16" `967 
F B "read_eeprom" 2 1923 "int8(int16 address)" `966 
F N "write_eeprom" 2 1924 ""
V L "address" 2 1924 "int16" `969 
V L "value" 2 1924 "int8" `970 
F B "write_eeprom" 2 1924 "void(int16 address,int8 value)" `968  "INT"
c L "write_eeprom" 2 3 4 "FUNCTION"
F N "enable_interrupts" 2 1931 ""
V L "interrupt" 2 1931 "int32" `972 
F B "enable_interrupts" 2 1931 "void(int32 interrupt)" `971 
F N "disable_interrupts" 2 1932 ""
V L "interrupt" 2 1932 "int32" `974 
F B "disable_interrupts" 2 1932 "void(int32 interrupt)" `973 
F N "clear_interrupt" 2 1933 ""
V L "interrupt" 2 1933 "int32" `976 
F B "clear_interrupt" 2 1933 "void(int32 interrupt)" `975 
F N "interrupt_active" 2 1934 ""
V L "interrupt" 2 1934 "int32" `978 
F B "interrupt_active" 2 1934 "int8(int32 interrupt)" `977 
F N "interrupt_enabled" 2 1935 ""
V L "interrupt" 2 1935 "int32" `980 
F B "interrupt_enabled" 2 1935 "int8(int32 interrupt)" `979 
F N "ext_int_edge" 2 1936 ""
V L "source" 2 1936 "int8" `982 
V L "edge" 2 1936 "int8" `983 
F B "ext_int_edge" 2 1936 "void(int8 source,int8 edge)" `981 
F N "jump_to_isr" 2 1937 ""
V L "address" 2 1937 "int16" `985 
F B "jump_to_isr" 2 1937 "void(int16 address)" `984  "Constants used in EXT_INT_EDGE() are:"
D G "L_TO_H" 2 1939 "0x40"
D G "H_TO_L" 2 1940 "0"
D G "GLOBAL" 2 1942 "0xF2C0"
D G "PERIPH" 2 1943 "0xF240"
D G "INT_IOC_A0" 2 1944 "0x3001BD10"
D G "INT_IOC_A0_L2H" 2 1945 "0x1001BD10"
D G "INT_IOC_A0_H2L" 2 1946 "0x2001BD10"
D G "INT_IOC_A1" 2 1947 "0x3002BD10"
D G "INT_IOC_A1_L2H" 2 1948 "0x1002BD10"
D G "INT_IOC_A1_H2L" 2 1949 "0x2002BD10"
D G "INT_IOC_A2" 2 1950 "0x3004BD10"
D G "INT_IOC_A2_L2H" 2 1951 "0x1004BD10"
D G "INT_IOC_A2_H2L" 2 1952 "0x2004BD10"
D G "INT_IOC_A3" 2 1953 "0x3008BD10"
D G "INT_IOC_A3_L2H" 2 1954 "0x1008BD10"
D G "INT_IOC_A3_H2L" 2 1955 "0x2008BD10"
D G "INT_IOC_A4" 2 1956 "0x3010BD10"
D G "INT_IOC_A4_L2H" 2 1957 "0x1010BD10"
D G "INT_IOC_A4_H2L" 2 1958 "0x2010BD10"
D G "INT_IOC_A5" 2 1959 "0x3020BD10"
D G "INT_IOC_A5_L2H" 2 1960 "0x1020BD10"
D G "INT_IOC_A5_H2L" 2 1961 "0x2020BD10"
D G "INT_IOC_A6" 2 1962 "0x3040BD10"
D G "INT_IOC_A6_L2H" 2 1963 "0x1040BD10"
D G "INT_IOC_A6_H2L" 2 1964 "0x2040BD10"
D G "INT_IOC_A7" 2 1965 "0x3080BD10"
D G "INT_IOC_A7_L2H" 2 1966 "0x1080BD10"
D G "INT_IOC_A7_H2L" 2 1967 "0x2080BD10"
D G "INT_IOC_B0" 2 1968 "0x3101BD10"
D G "INT_IOC_B0_L2H" 2 1969 "0x1101BD10"
D G "INT_IOC_B0_H2L" 2 1970 "0x2101BD10"
D G "INT_IOC_B1" 2 1971 "0x3102BD10"
D G "INT_IOC_B1_L2H" 2 1972 "0x1102BD10"
D G "INT_IOC_B1_H2L" 2 1973 "0x2102BD10"
D G "INT_IOC_B2" 2 1974 "0x3104BD10"
D G "INT_IOC_B2_L2H" 2 1975 "0x1104BD10"
D G "INT_IOC_B2_H2L" 2 1976 "0x2104BD10"
D G "INT_IOC_B3" 2 1977 "0x3108BD10"
D G "INT_IOC_B3_L2H" 2 1978 "0x1108BD10"
D G "INT_IOC_B3_H2L" 2 1979 "0x2108BD10"
D G "INT_IOC_B4" 2 1980 "0x3110BD10"
D G "INT_IOC_B4_L2H" 2 1981 "0x1110BD10"
D G "INT_IOC_B4_H2L" 2 1982 "0x2110BD10"
D G "INT_IOC_B5" 2 1983 "0x3120BD10"
D G "INT_IOC_B5_L2H" 2 1984 "0x1120BD10"
D G "INT_IOC_B5_H2L" 2 1985 "0x2120BD10"
D G "INT_IOC_B6" 2 1986 "0x3140BD10"
D G "INT_IOC_B6_L2H" 2 1987 "0x1140BD10"
D G "INT_IOC_B6_H2L" 2 1988 "0x2140BD10"
D G "INT_IOC_B7" 2 1989 "0x3180BD10"
D G "INT_IOC_B7_L2H" 2 1990 "0x1180BD10"
D G "INT_IOC_B7_H2L" 2 1991 "0x2180BD10"
D G "INT_IOC_C0" 2 1992 "0x3201BD10"
D G "INT_IOC_C0_L2H" 2 1993 "0x1201BD10"
D G "INT_IOC_C0_H2L" 2 1994 "0x2201BD10"
D G "INT_IOC_C1" 2 1995 "0x3202BD10"
D G "INT_IOC_C1_L2H" 2 1996 "0x1202BD10"
D G "INT_IOC_C1_H2L" 2 1997 "0x2202BD10"
D G "INT_IOC_C2" 2 1998 "0x3204BD10"
D G "INT_IOC_C2_L2H" 2 1999 "0x1204BD10"
D G "INT_IOC_C2_H2L" 2 2000 "0x2204BD10"
D G "INT_IOC_C3" 2 2001 "0x3208BD10"
D G "INT_IOC_C3_L2H" 2 2002 "0x1208BD10"
D G "INT_IOC_C3_H2L" 2 2003 "0x2208BD10"
D G "INT_IOC_C4" 2 2004 "0x3210BD10"
D G "INT_IOC_C4_L2H" 2 2005 "0x1210BD10"
D G "INT_IOC_C4_H2L" 2 2006 "0x2210BD10"
D G "INT_IOC_C5" 2 2007 "0x3220BD10"
D G "INT_IOC_C5_L2H" 2 2008 "0x1220BD10"
D G "INT_IOC_C5_H2L" 2 2009 "0x2220BD10"
D G "INT_IOC_C6" 2 2010 "0x3240BD10"
D G "INT_IOC_C6_L2H" 2 2011 "0x1240BD10"
D G "INT_IOC_C6_H2L" 2 2012 "0x2240BD10"
D G "INT_IOC_C7" 2 2013 "0x3280BD10"
D G "INT_IOC_C7_L2H" 2 2014 "0x1280BD10"
D G "INT_IOC_C7_H2L" 2 2015 "0x2280BD10"
D G "INT_IOC_E3" 2 2016 "0x3408BD10"
D G "INT_IOC_E3_L2H" 2 2017 "0x1408BD10"
D G "INT_IOC_E3_H2L" 2 2018 "0x2408BD10"
D G "INT_EXT_L2H" 2 2019 "0x5000BD01"
D G "INT_EXT_H2L" 2 2020 "0x6000BD01"
D G "INT_EXT" 2 2021 "0x00BD01"
D G "INT_EXT1_L2H" 2 2022 "0x5001BD02"
D G "INT_EXT1_H2L" 2 2023 "0x6001BD02"
D G "INT_EXT1" 2 2024 "0x00BD02"
D G "INT_EXT2_L2H" 2 2025 "0x5002BD04"
D G "INT_EXT2_H2L" 2 2026 "0x6002BD04"
D G "INT_EXT2" 2 2027 "0x00BD04"
D G "INT_IOC" 2 2028 "0x0FFFBD10"
D G "INT_TIMER0" 2 2029 "0x00BD20"
D G "INT_AD" 2 2030 "0x00BE01"
D G "INT_AD_THRESHOLD" 2 2031 "0x00BE02"
D G "INT_CSW" 2 2032 "0x00BE40"
D G "INT_OSC_FAIL" 2 2033 "0x00BE80"
D G "INT_COMP1" 2 2034 "0x00BF01"
D G "INT_COMP2" 2 2035 "0x00BF02"
D G "INT_ZCD" 2 2036 "0x00BF40"
D G "INT_LOWVOLT" 2 2037 "0x00BF80"
D G "INT_SSP" 2 2038 "0x00C001"
D G "INT_BUSCOL" 2 2039 "0x00C002"
D G "INT_SSP2" 2 2040 "0x00C004"
D G "INT_BUSCOL2" 2 2041 "0x00C008"
D G "INT_TBE" 2 2042 "0x00C010"
D G "INT_RDA" 2 2043 "0x00C020"
D G "INT_TBE2" 2 2044 "0x00C040"
D G "INT_RDA2" 2 2045 "0x00C080"
D G "INT_TIMER1" 2 2046 "0x00C101"
D G "INT_TIMER2" 2 2047 "0x00C102"
D G "INT_TIMER3" 2 2048 "0x00C104"
D G "INT_TIMER4" 2 2049 "0x00C108"
D G "INT_TIMER5" 2 2050 "0x00C110"
D G "INT_TIMER6" 2 2051 "0x00C120"
D G "INT_TMR1G" 2 2052 "0x00C201"
D G "INT_TMR3G" 2 2053 "0x00C202"
D G "INT_TMR5G" 2 2054 "0x00C204"
D G "INT_CLC1" 2 2055 "0x00C210"
D G "INT_CLC2" 2 2056 "0x00C220"
D G "INT_CLC3" 2 2057 "0x00C240"
D G "INT_CLC4" 2 2058 "0x00C280"
D G "INT_CCP1" 2 2059 "0x00C301"
D G "INT_CCP2" 2 2060 "0x00C302"
D G "INT_CLC5" 2 2061 "0x00C310"
D G "INT_CLC6" 2 2062 "0x00C320"
D G "INT_CLC7" 2 2063 "0x00C340"
D G "INT_CLC8" 2 2064 "0x00C380"
D G "INT_CWG" 2 2065 "0x00C401"
D G "INT_EEPROM" 2 2066 "0x00C420"
D G "INT_CRC" 2 2067 "0x00C440"
D G "INT_SCANNER" 2 2068 "0x00C480"
D G "baudRate" 1 9 "128000"
D G "numChannels" 1 10 "2"
D G "version" 1 12 ""20250522"" "SW Version"
D G "serialID" 1 13 ""0000"" "Unique Serial ID"
D G "magPP" 1 14 "1" "Magnetoresistive Sensor Pole Pitch in mm"
D G "IO" 3 2 ""
D G "A0" 3 10 "PIN_A0"
D G "A1" 3 11 "PIN_A1"
D G "A2" 3 12 "PIN_A2"
D G "A3" 3 13 "PIN_A3"
D G "_CS_ACC1" 3 14 "PIN_A4"
D G "_CS_ACC0" 3 15 "PIN_A5"
D G "MON_N15V" 3 16 "PIN_A6"
D G "_CS_YCOS" 3 18 "PIN_B0"
D G "SCLK_B" 3 19 "PIN_B1"
D G "MISO_B" 3 20 "PIN_B2"
D G "MOSI_B" 3 21 "PIN_B3"
D G "_LE" 3 22 "PIN_B4"
D G "CLR" 3 23 "PIN_B5"
D G "MON_200V" 3 25 "PIN_C0"
D G "MON_3V6X" 3 26 "PIN_C1"
D G "MOSI_A" 3 27 "PIN_C2"
D G "SCLK_A" 3 28 "PIN_C3"
D G "MISO_A" 3 29 "PIN_C4"
D G "TX_ENABLE" 3 30 "PIN_C5"
D G "TX_PIN" 3 31 "PIN_C6"
D G "RX_PIN" 3 32 "PIN_C7"
D G "MON_5V6" 3 34 "PIN_D0"
D G "MON_5VA" 3 35 "PIN_D1"
D G "MON_3V3D" 3 36 "PIN_D2"
D G "MON_3V3A" 3 37 "PIN_D3"
D G "RS485_FLT" 3 38 "PIN_D4"
D G "_CS_XSIN" 3 39 "PIN_D5"
D G "_CS_XCOS" 3 40 "PIN_D6"
D G "_CS_YSIN" 3 41 "PIN_D7"
D G "EN_EXC" 3 43 "PIN_E0"
D G "_SYNC_Y" 3 44 "PIN_E1"
D G "_SYNC_X" 3 45 "PIN_E2"
D G "portA_reset" 3 51 "0x00"
D G "portB_reset" 3 52 "0x00"
D G "portC_reset" 3 53 "0x00"
D G "portD_reset" 3 54 "0x00"
D G "portE_reset" 3 55 "0x00"
D G "portA_pullups" 3 57 "0xFF"
D G "portB_pullups" 3 58 "0x00"
D G "portC_pullups" 3 59 "0x00"
D G "portD_pullups" 3 60 "0xFF"
D G "portE_pullups" 3 61 "0x00"
C L "jump_to_isr" 3 50 1 "FUNCTION"
F N "IO_init" 3 66 ""
F G "IO_init" 3 67 "void()" `990 
D G "parameters" 4 2 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 24 "unsigned int16"
D G "wchar_t" 5 26 "unsigned char"
D G "NULL" 5 27 "0"
D G "offsetof" 5 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_STDLIB" 6 13 ""
D G "RAND_MAX" 6 20 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 6 26 "1"
T G "div_t" 6 34 "{sint8 quot,sint8 rem}" `994 
T G "ldiv_t" 6 39 "{sint16 quot,sint16 rem}" `998  "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 5 3 6 "FUNCTION"
C L "atoi" 6 44 2 "FUNCTION"
C L "atoi" 6 47 1 "*"
C L "atoi" 6 47 1 "*"
F N "atoi" 6 51 ""
V L "s" 6 51 "*int8" `1000 
f G "atoi" 6 51 "sint8(*int8 s)" `999  "Syntax: signed int32  atoi32(char * s)"
F N "atoi32" 6 59 ""
V L "s" 6 59 "*int8" `1002 
f G "atoi32" 6 59 "sint32(*int8 s)" `1001  "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 6 47 2 "FUNCTION"
F N "itoa" 6 80 ""
V L "num" 6 80 "sint32" `1004 
V L "base" 6 80 "int8" `1005 
V L "s" 6 80 "*int8" `1006 
f G "itoa" 6 80 "*int8(sint32 num,int8 base,*int8 s)" `1003  "Standard template: signed int16  atol(char * s)"
C L "itoa" 6 82 1 "*"
C L "itoa" 6 82 1 "*"
F N "atol" 6 86 ""
V L "s" 6 86 "*int8" `1008 
f G "atol" 6 86 "sint16(*int8 s)" `1007  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 6 88 1 "*"
C L "atol" 6 88 1 "*"
C L "atol" 6 88 1 "*"
C L "atol" 6 88 1 "*"
F N "strtol" 6 94 ""
V L "s" 6 94 "*int8" `1010 
V L "endptr" 6 94 "*int8" `1011 
V L "base" 6 94 "sint8" `1012 
f G "strtol" 6 94 "sint16(*int8 s,*int8 endptr,sint8 base)" `1009  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 6 96 1 "*"
C L "strtol" 6 96 1 "*"
C L "strtol" 6 96 1 "*"
C L "strtol" 6 96 1 "*"
F N "strtoul" 6 102 ""
V L "s" 6 102 "*int8" `1014 
V L "endptr" 6 102 "*int8" `1015 
V L "base" 6 102 "sint8" `1016 
f G "strtoul" 6 102 "int16(*int8 s,*int8 endptr,sint8 base)" `1013  "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 6 96 2 "FUNCTION"
C L "strtoul" 6 104 1 "*"
C L "strtoul" 6 104 1 "*"
C L "strtoul" 6 104 1 "*"
F N "strtof" 6 111 ""
V L "s" 6 111 "*int8" `1018 
V L "endptr" 6 111 "??0 *" `1019 
f G "strtof" 6 111 "float(*int8 s,??0 * endptr)" `1017  "provided for compatibility"
D G "strtof48" 6 117 "(s,e) strtof(s, e)"
D G "strtod" 6 118 "(s,e) strtof(s, e)"
C L "strtof" 6 104 1 "FUNCTION"
C L "strtof" 6 121 1 "*"
D G "atof" 6 125 "(s)   strtof(s, (char*)0)"
C L "strtof" 6 121 1 "FUNCTION"
C L "strtof" 6 144 1 "*"
C L "strtof" 6 144 1 "*"
C L "strtof" 6 144 1 "*"
F N "atoe" 6 150 ""
V L "s" 6 150 "*int8" `1022 
f G "atoe" 6 150 "float(*int8 s)" `1021  "Pseudo-random sequence generation functions"
C L "atoe" 6 144 1 "FUNCTION"
C L "atoe" 6 161 1 "*"
C L "atoe" 6 161 1 "*"
C L "atoe" 6 161 1 "*"
C L "atoe" 6 161 1 "*"
C L "atoe" 6 161 1 "*"
F N "rand" 6 170 ""
f G "rand" 6 170 "int16()" `1023  "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
C L "rand" 6 172 1 "*"
F N "srand" 6 192 ""
V L "seed" 6 192 "int32" `1025 
f G "srand" 6 192 "void(int32 seed)" `1024  "Memory management functions"
C L "srand" 6 172 3 "FUNCTION"
F N "system" 6 206 ""
V L "string" 6 206 "*int8" `1027 
f G "system" 6 206 "sint8(*int8 string)" `1026  "Searching and sorting utilities"
C L "system" 6 172 1 "FUNCTION"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 1 "*"
C L "system" 6 212 4 "*"
C L "system" 6 230 1 "*"
C L "system" 6 230 1 "*"
C L "system" 6 230 1 "*"
C L "system" 6 230 1 "*"
C L "system" 6 230 1 "*"
C L "system" 6 230 1 "*"
C L "system" 6 230 1 "*"
C L "system" 6 230 1 "*"
D G "labs" 6 250 "abs"
F N "div" 6 252 ""
V L "numer" 6 252 "sint8" `1029 
V L "denom" 6 252 "sint8" `1030 
f G "div" 6 252 "div_t(sint8 numer,sint8 denom)" `1028 
F N "ldiv" 6 253 ""
V L "numer" 6 253 "sint16" `1032 
V L "denom" 6 253 "sint16" `1033 
f G "ldiv" 6 253 "ldiv_t(sint16 numer,sint16 denom)" `1031  "Multibyte character functions"
C L "ldiv" 6 230 4 "FUNCTION"
C L "ldiv" 5 2 7 "FUNCTION"
D G "_STRING" 7 12 ""
C L "ldiv" 5 2 7 "FUNCTION"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 7 19 10 "FUNCTION"
F N "memmove" 7 34 ""
V L "s1" 7 34 "*void" `1035 
V L "s2" 7 34 "*void" `1036 
V L "n" 7 34 "int16" `1037 
F G "memmove" 7 35 "*int8(*void s1,*void s2,int16 n)" `1034 
V L "sc1" 7 36 "*int8" `1038 
V L "sc2" 7 37 "*int8" `1039 
D G "strcopy" 7 54 "strcpy"
C L "strncpy" 7 19 4 "FUNCTION"
F N "strncpy" 7 61 ""
V L "s1" 7 61 "*int8" `1041 
V L "s2" 7 61 "*int8" `1042 
V L "n" 7 61 "int16" `1043 
F G "strncpy" 7 62 "*int8(*int8 s1,*int8 s2,int16 n)" `1040 
V L "s" 7 63 "*int8" `1044 
C L "strcat" 7 19 3 "FUNCTION"
F N "strcat" 7 78 ""
V L "s1" 7 78 "*int8" `1046 
V L "s2" 7 78 "*int8" `1047 
F G "strcat" 7 79 "*int8(*int8 s1,*int8 s2)" `1045 
V L "s" 7 80 "*int8" `1048 
C L "strncat" 7 19 2 "FUNCTION"
F N "strncat" 7 96 ""
V L "s1" 7 96 "*int8" `1050 
V L "s2" 7 96 "*int8" `1051 
V L "n" 7 96 "int16" `1052 
F G "strncat" 7 97 "*int8(*int8 s1,*int8 s2,int16 n)" `1049 
V L "s" 7 98 "*int8" `1053 
C L "memcmp" 7 19 3 "FUNCTION"
F N "memcmp" 7 120 ""
V L "s1" 7 120 "*void" `1055 
V L "s2" 7 120 "*void" `1056 
V L "n" 7 120 "int16" `1057 
F G "memcmp" 7 121 "sint8(*void s1,*void s2,int16 n)" `1054 
V L "su1" 7 122 "*int8" `1058 
V L "su2" 7 122 "*int8" `1059 
C L "strcmp" 7 19 2 "FUNCTION"
F N "strcmp" 7 134 ""
V L "s1" 7 134 "*int8" `1061 
V L "s2" 7 134 "*int8" `1062 
F G "strcmp" 7 135 "sint8(*int8 s1,*int8 s2)" `1060 
C L "strcoll" 7 19 2 "FUNCTION"
F N "strcoll" 7 144 ""
V L "s1" 7 144 "*int8" `1064 
V L "s2" 7 144 "*int8" `1065 
F G "strcoll" 7 145 "sint8(*int8 s1,*int8 s2)" `1063 
C L "strncmp" 7 19 4 "FUNCTION"
F N "strncmp" 7 157 ""
V L "s1" 7 157 "*int8" `1067 
V L "s2" 7 157 "*int8" `1068 
V L "n" 7 157 "int16" `1069 
F G "strncmp" 7 158 "sint8(*int8 s1,*int8 s2,int16 n)" `1066 
C L "strxfrm" 7 19 4 "FUNCTION"
F N "strxfrm" 7 170 ""
V L "s1" 7 170 "*int8" `1071 
V L "s2" 7 170 "*int8" `1072 
V L "n" 7 170 "int16" `1073 
F G "strxfrm" 7 171 "int16(*int8 s1,*int8 s2,int16 n)" `1070 
V L "c" 7 172 "int8" `1074 
V L "n1" 7 173 "int16" `1075 
C L "strxfrm" 7 19 1 "FUNCTION"
C L "memchr" 7 19 3 "FUNCTION"
F N "memchr" 7 201 ""
V L "s" 7 201 "*void" `1077 
V L "c" 7 201 "int8" `1078 
V L "n" 7 201 "int16" `1079 
F G "memchr" 7 202 "*int8(*void s,int8 c,int16 n)" `1076 
V L "uc" 7 203 "int8" `1080 
V L "su" 7 204 "*int8" `1081 
C L "strchr" 7 19 2 "FUNCTION"
F N "strchr" 7 215 ""
V L "s" 7 215 "*int8" `1083 
V L "c" 7 215 "int8" `1084 
F G "strchr" 7 216 "*int8(*int8 s,int8 c)" `1082 
C L "strcspn" 7 19 4 "FUNCTION"
F N "strcspn" 7 227 ""
V L "s1" 7 227 "*int8" `1086 
V L "s2" 7 227 "*int8" `1087 
F G "strcspn" 7 228 "int16(*int8 s1,*int8 s2)" `1085 
V L "sc1" 7 229 "*int8" `1088 
V L "sc2" 7 229 "*int8" `1089 
C L "strpbrk" 7 19 4 "FUNCTION"
F N "strpbrk" 7 242 ""
V L "s1" 7 242 "*int8" `1091 
V L "s2" 7 242 "*int8" `1092 
F G "strpbrk" 7 243 "*int8(*int8 s1,*int8 s2)" `1090 
V L "sc1" 7 244 "*int8" `1093 
V L "sc2" 7 244 "*int8" `1094 
C L "strrchr" 7 19 2 "FUNCTION"
F N "strrchr" 7 257 ""
V L "s" 7 257 "*int8" `1096 
V L "c" 7 257 "int8" `1097 
F G "strrchr" 7 258 "*int8(*int8 s,int8 c)" `1095 
V L "p" 7 259 "*int8" `1098 
C L "strspn" 7 19 2 "FUNCTION"
F N "strspn" 7 272 ""
V L "s1" 7 272 "*int8" `1100 
V L "s2" 7 272 "*int8" `1101 
F G "strspn" 7 273 "int16(*int8 s1,*int8 s2)" `1099 
V L "sc1" 7 274 "*int8" `1102 
V L "sc2" 7 274 "*int8" `1103 
C L "strstr" 7 19 6 "FUNCTION"
F N "strstr" 7 291 ""
V L "s1" 7 291 "*int8" `1105 
V L "s2" 7 291 "*int8" `1106 
F G "strstr" 7 292 "*int8(*int8 s1,*int8 s2)" `1104 
V L "s" 7 293 "*int8" `1107 
V L "t" 7 293 "*int8" `1108 
C L "strlen" 7 19 2 "FUNCTION"
F N "strlen" 7 318 ""
V L "s" 7 318 "*int8" `1110 
F G "strlen" 7 319 "int16(*int8 s)" `1109 
V L "sc" 7 320 "*int8" `1111 
C L "strtok" 7 19 13 "FUNCTION"
F N "strtok" 7 341 ""
V L "s1" 7 341 "*int8" `1113 
V L "s2" 7 341 "*int8" `1114 
F G "strtok" 7 342 "*int8(*int8 s1,*int8 s2)" `1112 
V L "beg" 7 343 "*int8" `1115 
V L "end" 7 343 "*int8" `1116 
V L "save" 7 344 "*int8" `1117 
C L "stricmp" 7 19 6 "FUNCTION"
F N "stricmp" 7 392 ""
V L "s1" 7 392 "*int8" `1119 
V L "s2" 7 392 "*int8" `1120 
F G "stricmp" 7 393 "sint8(*int8 s1,*int8 s2)" `1118 
C L "strlwr" 7 19 3 "FUNCTION"
F N "strlwr" 7 406 ""
V L "s" 7 406 "*int8" `1124 
F G "strlwr" 7 407 "*int8(*int8 s)" `1123 
V L "p" 7 408 "*int8" `1125 
C L "strupr" 7 19 3 "FUNCTION"
F N "strupr" 7 420 ""
V L "s" 7 420 "*int8" `1127 
F G "strupr" 7 421 "*int8(*int8 s)" `1126 
V L "p" 7 422 "*int8" `1128 
F N "div" 6 275 ""
V L "numer" 6 275 "sint8" `1029 
V L "denom" 6 275 "sint8" `1131 
F G "div" 6 276 "div_t(sint8 numer,sint8 denom)" `1028 
V L "val" 6 277 "div_t" `1129 
F N "ldiv" 6 283 ""
V L "numer" 6 283 "sint16" `1032 
V L "denom" 6 283 "sint16" `1138 
F G "ldiv" 6 284 "ldiv_t(sint16 numer,sint16 denom)" `1031 
V L "val" 6 285 "ldiv_t" `1136 
F N "atoe" 6 362 ""
V L "s" 6 362 "*int8" `1144 
F G "atoe" 6 363 "float(*int8 s)" `1021 
V L "pow10" 6 364 "float" `1143 
V L "result" 6 365 "float" `1144 
V L "sign" 6 366 "int8" `1145 
V L "expsign" 6 367 "int8" `1146 
V L "c" 6 368 "int8" `1147 
V L "ptr" 6 369 "int8" `1148 
V L "i" 6 370 "int8" `1149 
V L "exp" 6 371 "float" `1150 
V L "expcnt" 6 372 "int8" `1151 
C L "atoe" 6 398 1 "FUNCTION"
F N "atoi" 6 430 ""
V L "s" 6 430 "*int8" `1164 
F G "atoi" 6 431 "sint8(*int8 s)" `999 
V L "result" 6 432 "sint8" `1163 
V L "sign" 6 433 "int8" `1164 
V L "base" 6 433 "int8" `1165 
V L "index" 6 433 "int8" `1166 
V L "c" 6 434 "int8" `1167 
C L "atoi" 6 398 1 "FUNCTION"
C L "atoi" 6 398 1 "FUNCTION"
C L "atoi" 6 398 1 "FUNCTION"
C L "atoi" 6 398 1 "FUNCTION"
C L "atoi" 6 398 1 "FUNCTION"
C L "atoi" 6 398 1 "FUNCTION"
F N "atol" 6 499 ""
V L "s" 6 499 "*int8" `1169 
F G "atol" 6 500 "sint16(*int8 s)" `1007 
V L "result" 6 501 "sint16" `1168 
V L "sign" 6 502 "int8" `1169 
V L "base" 6 502 "int8" `1170 
V L "index" 6 502 "int8" `1171 
V L "c" 6 503 "int8" `1172 
C L "atol" 6 398 1 "FUNCTION"
C L "atol" 6 398 1 "FUNCTION"
C L "atol" 6 398 1 "FUNCTION"
C L "atol" 6 398 1 "FUNCTION"
C L "mult_with10" 6 398 1 "FUNCTION"
F N "mult_with10" 6 566 ""
V L "num" 6 566 "int32" `1174 
F G "mult_with10" 6 567 "sint32(int32 num)" `1173 
F N "atoi32" 6 572 ""
V L "s" 6 572 "*int8" `1176 
F G "atoi32" 6 573 "sint32(*int8 s)" `1001 
V L "result" 6 574 "sint32" `1175 
V L "sign" 6 575 "int8" `1176 
V L "base" 6 575 "int8" `1177 
V L "index" 6 575 "int8" `1178 
V L "c" 6 576 "int8" `1179 
C L "atoi32" 6 398 1 "FUNCTION"
C L "atoi32" 6 398 1 "FUNCTION"
C L "atoi32" 6 398 1 "FUNCTION"
C L "atoi32" 6 398 1 "FUNCTION"
C L "atoi32" 6 398 1 "FUNCTION"
F N "itoa" 6 771 ""
V L "num" 6 771 "sint32" `1004 
V L "base" 6 771 "int8" `1005 
V L "s" 6 771 "*int8" `1183 
F G "itoa" 6 772 "*int8(sint32 num,int8 base,*int8 s)" `1003 
V L "temp" 6 773 "int32" `1180 
V L "i" 6 774 "int8" `1181 
V L "sign" 6 774 "int8" `1182 
V L "cnt" 6 774 "int8" `1183 
V L "c" 6 775 "int8" `1184 
C L "itoa" 6 398 1 "FUNCTION"
C L "itoa" 6 398 1 "FUNCTION"
C L "itoa" 6 398 1 "FUNCTION"
C L "itoa" 6 398 1 "FUNCTION"
C L "itoa" 6 398 1 "FUNCTION"
F N "strtof" 6 886 ""
V L "s" 6 886 "*int8" `1018 
V L "endptr" 6 886 "??0 *" `1193 
F G "strtof" 6 887 "float(*int8 s,??0 * endptr)" `1017 
V L "pow10" 6 888 "float" `1191 
V L "result" 6 889 "float" `1192 
V L "skip" 6 890 "int1" `1193 
V L "sign" 6 890 "int1" `1194 
V L "point" 6 890 "int1" `1195 
V L "c" 6 891 "int8" `1196 
V L "ptr" 6 892 "int8" `1197 
F N "strtoul" 6 1105 ""
V L "s" 6 1105 "*int8" `1014 
V L "endptr" 6 1105 "*int8" `1015 
V L "base" 6 1105 "sint8" `1202 
F G "strtoul" 6 1106 "int16(*int8 s,*int8 endptr,sint8 base)" `1013 
V L "sc" 6 1107 "*int8" `1199 
V L "s1" 6 1107 "*int8" `1200 
V L "sd" 6 1107 "*int8" `1201 
V L "x" 6 1108 "int16" `1202 
V L "sign" 6 1109 "int8" `1203 
V L "digits" 6 1110 "int8[1]" `1204 
C L "strtoul" 6 398 1 "FUNCTION"
C L "strtoul" 6 398 1 "FUNCTION"
C L "strtoul" 6 398 1 "FUNCTION"
F N "strtol" 6 1167 ""
V L "s" 6 1167 "*int8" `1010 
V L "endptr" 6 1167 "*int8" `1011 
V L "base" 6 1167 "sint8" `1209 
F G "strtol" 6 1168 "sint16(*int8 s,*int8 endptr,sint8 base)" `1009 
V L "sc" 6 1169 "*int8" `1206 
V L "s1" 6 1169 "*int8" `1207 
V L "sd" 6 1169 "*int8" `1208 
V L "x" 6 1170 "sint16" `1209 
V L "sign" 6 1171 "int8" `1210 
V L "digits" 6 1172 "int8[1]" `1211 
C L "strtol" 6 398 1 "FUNCTION"
C L "strtol" 6 398 1 "FUNCTION"
C L "strtol" 6 398 1 "FUNCTION"
F N "system" 6 1231 ""
V L "string" 6 1231 "*int8" `1214 
F G "system" 6 1232 "sint8(*int8 string)" `1026 
F N "mblen" 6 1236 ""
V L "s" 6 1236 "*int8" `1214 
V L "n" 6 1236 "int16" `1215 
F G "mblen" 6 1237 "int16(*int8 s,int16 n)" `1213 
F N "mbtowc" 6 1241 ""
V L "pwc" 6 1241 "*int8" `1217 
V L "s" 6 1241 "*int8" `1218 
V L "n" 6 1241 "int16" `1219 
F G "mbtowc" 6 1242 "int8(*int8 pwc,*int8 s,int16 n)" `1216 
F N "wctomb" 6 1247 ""
V L "s" 6 1247 "*int8" `1221 
V L "wchar" 6 1247 "int8" `1222 
F G "wctomb" 6 1248 "int8(*int8 s,int8 wchar)" `1220 
F N "mbstowcs" 6 1253 ""
V L "pwcs" 6 1253 "*int8" `1224 
V L "s" 6 1253 "*int8" `1225 
V L "n" 6 1253 "int16" `1226 
F G "mbstowcs" 6 1254 "int16(*int8 pwcs,*int8 s,int16 n)" `1223 
F N "wcstombs" 6 1259 ""
V L "s" 6 1259 "*int8" `1228 
V L "pwcs" 6 1259 "*int8" `1229 
V L "n" 6 1259 "int16" `1230 
F G "wcstombs" 6 1260 "int16(*int8 s,*int8 pwcs,int16 n)" `1227 
V G "_Randseed" 6 1269 "int32" `1231 
F N "rand" 6 1271 ""
F G "rand" 6 1272 "int16()" `1023 
F N "srand" 6 1277 ""
V L "seed" 6 1277 "int32" `1236 
F G "srand" 6 1278 "void(int32 seed)" `1024 
F N "*_Cmpfun" 6 1287 ""
V L "p1" 6 1287 "*int8" `1236 
V L "p2" 6 1287 "*int8" `1237 
T G "*_Cmpfun" 6 1287 "sint8(*int8 p1,*int8 p2)" `1235 
F N "qsort" 6 1294 ""
V L "qdata" 6 1294 "*int8" `1240 
V L "qitems" 6 1294 "int8" `1241 
V L "qsize" 6 1294 "int8" `1242 
V L "cmp" 6 1294 "_Cmpfun" `1243 
F G "qsort" 6 1294 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)" `1239 
V L "m" 6 1295 "int8" `1244 
V L "j" 6 1295 "int8" `1245 
V L "i" 6 1295 "int8" `1246 
V L "l" 6 1295 "int8" `1247 
V L "done" 6 1296 "int1" `1248 
V L "t" 6 1297 "int8[16]" `1249 
F N "bsearch" 6 1322 ""
V L "key" 6 1322 "*int8" `1252 
V L "base" 6 1322 "*int8" `1253 
V L "num" 6 1322 "int16" `1254 
V L "width" 6 1322 "int16" `1255 
V L "cmp" 6 1322 "_Cmpfun" `1256 
F G "bsearch" 6 1323 "*int8(*int8 key,*int8 base,int16 num,int16 width,_Cmpfun cmp)" `1251 
V L "p" 6 1324 "*int8" `1257 
V L "q" 6 1324 "*int8" `1258 
V L "n" 6 1325 "int16" `1259 
V L "pivot" 6 1326 "int16" `1260 
V L "val" 6 1327 "sint8" `1261 
C L "bsearch" 6 398 1 "FUNCTION"
E G "chX" 4 19 "0" `1266 
E G "chY" 4 19 "1" `1267 
V G "" 4 19 "" "Piezo channels"
E G "MANUAL" 4 20 "0" `1269 
E G "MAGSNS" 4 20 "1" `1270 
V G "" 4 20 "" "Voltage or Magnetic Sensor Control"
C L "ee_save_reg" 4 21 3 "FUNCTION"
F N "ee_save_reg" 4 42 ""
V L "reg" 4 42 "*int8" `1272 
V L "eeLocation" 4 42 "int16" `1273 
V L "length" 4 42 "int8" `1274 
f G "ee_save_reg" 4 42 "void(*int8 reg,int16 eeLocation,int8 length)" `1271 
F N "ee_load_reg" 4 43 ""
V L "reg" 4 43 "*int8" `1276 
V L "eeLocation" 4 43 "int16" `1277 
V L "length" 4 43 "int8" `1278 
f G "ee_load_reg" 4 43 "void(*int8 reg,int16 eeLocation,int8 length)" `1275 
F N "params_save_to_ee" 4 44 ""
f G "params_save_to_ee" 4 44 "void()" `1279 
F N "params_load_from_ee" 4 45 ""
f G "params_load_from_ee" 4 45 "void()" `1280 
F N "params_init" 4 46 ""
f G "params_init" 4 46 "void()" `1281 
F N "params_invalidate" 4 47 ""
f G "params_invalidate" 4 47 "void()" `1282  "PARAMETERS START HERE. All Params should have an EEPROM address that is   *"
D G "pid_params_ee_addr" 4 59 "0"
D G "pid_params_length" 4 60 "128" "length in bytes"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
V G "PID" 4 71 "{float kP,float kI,float kD,float SP,float PV,float PVold,float CV,float i}[2]" `1292  "Output Channel Map                                                        *"
D G "channel_map_ee_addr" 4 76 "128"
D G "channel_map_length" 4 77 "2" "length in bytes"
V G "chMap" 4 78 "channelMap[2]" `1293 
D G "channel_mode_ee_addr" 4 83 "144"
D G "channel_mode_length" 4 84 "2" "length in bytes"
V G "chMode" 4 85 "channelMode[2]" `1294 
D G "adc_cal_params_ee_addr" 4 90 "160"
D G "adc_cal_params_length" 4 91 "32" "length in bytes"
V G "adcCal" 4 98 "{float sinOS,float cosOS,float sinGain,float cosGain}[2]" `1300 
D G "sensor_cal_params_ee_addr" 4 106 "192"
D G "sensor_cal_params_length" 4 107 "48" "length in bytes"
V G "sensorCal" 4 116 "{float c0,float c1,float c2,float c3,float c4,float c5}[2]" `1308 
D G "mon_cal_params_ee_addr" 4 126 "240"
D G "mon_cal_params_length" 4 127 "56" "length in bytes"
C L "params_invalidate" 4 21 1 "FUNCTION"
V G "monCal" 4 138 "{float[2] vN15,float[2] v200,float[2] v5V6,float[2] v5VA,float[2] v3V6X,float[2] v3V3A,float[2] v3V3D}" `1317 
D G "man_op_vals_ee_addr" 4 146 "304"
D G "man_op_vals_length" 4 147 "8"
V G "manualOutputValues" 4 148 "float[2]" `1318 
D G "invalidate" 4 153 "0xFF"
D G "isValid" 4 154 "0xAA"
D G "params_valid_ee_addr" 4 155 "320"
D G "params_valid_length" 4 156 "1" "length in bytes"
V G "paramsValid" 4 157 "int8" `1319 
C L "params_invalidate" 4 21 2 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
V G "monitorVals" 4 174 "{float vN15,float v200,float v5V6,float v5VA,float v3V6X,float v3V3A,float v3V3D}" `1328 
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
V G "adcVals" 4 185 "{float sinRaw,float cosRaw,float sinCounts,float cosCounts,float p0,int8 npoles,float pReal}[2]" `1337 
C L "params_invalidate" 4 21 1 "FUNCTION"
V G "timeoutReg0" 4 192 "int32" `1338 
C L "params_invalidate" 4 21 1 "FUNCTION"
V G "timeoutReg1" 4 193 "int32" `1339 
C L "params_invalidate" 4 21 1 "FUNCTION"
V G "timeoutReg2" 4 194 "int32" `1340 
V G "intTimeoutReg" 4 195 "int16" `1341 
C L "params_invalidate" 4 21 5 "FUNCTION"
F N "ee_save_reg" 4 238 ""
V L "reg" 4 238 "*int8" `1272 
V L "eeLocation" 4 238 "int16" `1273 
V L "length" 4 238 "int8" `1345 
F G "ee_save_reg" 4 275 "void(*int8 reg,int16 eeLocation,int8 length)" `1271 
V L "i" 4 276 "int8" `1342 
C L "ee_load_reg" 4 21 1 "FUNCTION"
F N "ee_load_reg" 4 287 ""
V L "reg" 4 287 "*int8" `1276 
V L "eeLocation" 4 287 "int16" `1277 
V L "length" 4 287 "int8" `1346 
F G "ee_load_reg" 4 302 "void(*int8 reg,int16 eeLocation,int8 length)" `1275 
V L "i" 4 303 "int8" `1343 
C L "params_save_to_ee" 4 21 1 "FUNCTION"
F N "params_save_to_ee" 4 314 ""
F G "params_save_to_ee" 4 315 "void()" `1279 
C L "params_load_from_ee" 4 21 1 "FUNCTION"
F N "params_load_from_ee" 4 334 ""
F G "params_load_from_ee" 4 335 "void()" `1280 
C L "params_init" 4 21 1 "FUNCTION"
F N "params_init" 4 348 ""
F G "params_init" 4 349 "void()" `1281 
C L "params_init" 4 21 1 "FUNCTION"
C L "params_invalidate" 4 21 1 "FUNCTION"
F N "params_invalidate" 4 366 ""
F G "params_invalidate" 4 367 "void()" `1282 
D G "monitor" 9 2 ""
D G "ADS1220" 10 2 ""
D G "_CS0" 10 7 "PIN_D5" "chip select pins"
D G "_CS1" 10 8 "PIN_D6"
D G "_CS2" 10 9 "PIN_D7"
D G "_CS3" 10 10 "PIN_B0"
E G "reg0" 10 22 "0" `1348 
E G "reg1" 10 22 "4" `1349 
E G "reg2" 10 22 "8" `1350 
E G "reg3" 10 22 "12" `1351 
T G "adsReg" 10 22 "" `1352  "REGISTER 0 OPTIONS"
D G "IPp0n1" 10 26 "0x00"
D G "IPp0n2" 10 27 "0x10"
D G "IPp0n3" 10 28 "0x20"
D G "IPp1n2" 10 29 "0x30"
D G "IPp1n3" 10 30 "0x40"
D G "IPp2n3" 10 31 "0x50"
D G "IPp1n0" 10 32 "0x60"
D G "IPp3n2" 10 33 "0x70"
D G "IPp0nVss" 10 34 "0x80"
D G "IPp1nVss" 10 35 "0x90"
D G "IPp2nVss" 10 36 "0xA0"
D G "IPp3nVss" 10 37 "0xB0"
D G "IPVrpVrn" 10 38 "0xC0"
D G "IPVddVss" 10 39 "0xD0"
D G "IPhalfRail" 10 40 "0xE0"
D G "g1" 10 42 "0x00"
D G "g2" 10 43 "0x02"
D G "g4" 10 44 "0x04"
D G "g8" 10 45 "0x06"
D G "g16" 10 46 "0x08"
D G "g32" 10 47 "0x0A"
D G "g64" 10 48 "0x0C"
D G "g128" 10 49 "0x0E"
D G "PGAenabled" 10 51 "0x00"
D G "PGAbypass" 10 52 "0x01"
D G "DRn20" 10 56 "0x00"
D G "DRn45" 10 57 "0x20"
D G "DRn90" 10 58 "0x40"
D G "DRn175" 10 59 "0x60"
D G "DRn330" 10 60 "0x80"
D G "DRn600" 10 61 "0xA0"
D G "DRn1000" 10 62 "0xC0"
D G "MDnormal" 10 64 "0x00"
D G "MDduty" 10 65 "0x80"
D G "MDturbo" 10 66 "0x10"
D G "CMsingle" 10 68 "0x00"
D G "CMcont" 10 69 "0x40"
D G "TSdisable" 10 71 "0x00"
D G "TSenable" 10 72 "0x20"
D G "BCSoff" 10 74 "0x00"
D G "BCSon" 10 75 "0x01"
D G "REFinternal" 10 79 "0x00"
D G "REFp0n0" 10 80 "0x40"
D G "REFp1n1" 10 81 "0x80"
D G "REFVddVss" 10 82 "0xC0"
D G "FIRoff" 10 84 "0x00"
D G "FIR5060" 10 85 "0x10"
D G "FIR50" 10 86 "0x20"
D G "FIR60" 10 87 "0x30"
D G "PSWopen" 10 89 "0x00"
D G "PSWstart" 10 90 "0x08"
D G "Ioff" 10 92 "0x00"
D G "Iu10" 10 93 "0x01"
D G "Iu50" 10 94 "0x02"
D G "Iu100" 10 95 "0x03"
D G "Iu250" 10 96 "0x04"
D G "Iu500" 10 97 "0x05"
D G "Iu1000" 10 98 "0x06"
D G "Iu1500" 10 99 "0x07"
D G "I1disabled" 10 103 "0x00"
D G "I1a0p1" 10 104 "0x20"
D G "I1a1" 10 105 "0x40"
D G "I1a2" 10 106 "0x60"
D G "I1a3n1" 10 107 "0x80"
D G "I1p0" 10 108 "0xA0"
D G "I1n0" 10 109 "0xC0"
D G "I2disabled" 10 111 "0x00"
D G "I2a0p1" 10 112 "0x04"
D G "I2a1" 10 113 "0x08"
D G "I2a2" 10 114 "0x0A"
D G "I2a3n1" 10 115 "0x10"
D G "I2p0" 10 116 "0x14"
D G "I2n0" 10 117 "0x18"
D G "drdyPin" 10 119 "0x00"
D G "doutPin" 10 120 "0x20"
D G "reg0config" 10 123 "IPp1n2|g16|PGAenabled" "0x3A//"
D G "reg1config" 10 124 "DRn20|MDturbo|CMsingle|TSDisable|BCSoff" "0x00"
D G "reg2config" 10 125 "REFinternal|FIR60|PSWopen|Ioff" "0x30"
D G "reg3config" 10 126 "I1disabled|I2disabled|drdyPin" "0x00"
D G "ADSreset" 10 129 "0x06"
D G "ADSstart" 10 130 "0x08"
D G "ADSpowerDn" 10 131 "0x02"
D G "ADSreadData" 10 132 "0x10"
D G "ADSreadReg" 10 133 "0x20"
D G "ADSwriteReg" 10 134 "0x40"
C L "ads_deselect_all" 10 5 2 "FUNCTION"
F N "ads_deselect_all" 10 145 ""
F G "ads_deselect_all" 10 146 "void()" `1353 
C L "ads_deselect_all" 10 5 1 "FUNCTION"
C L "ads_select_ch" 10 5 1 "FUNCTION"
F N "ads_select_ch" 10 156 ""
V L "ch" 10 156 "int8" `1355 
F G "ads_select_ch" 10 157 "void(int8 ch)" `1354 
C L "ads_select_ch" 10 5 1 "FUNCTION"
C L "ads_select_block" 10 5 1 "FUNCTION"
F N "ads_select_block" 10 182 ""
V L "block" 10 182 "int8" `1357 
F G "ads_select_block" 10 183 "void(int8 block)" `1356 
C L "ads_select_block" 10 5 1 "FUNCTION"
C L "ads_write_command" 10 5 1 "FUNCTION"
F N "ads_write_command" 10 207 ""
V L "ch" 10 207 "int8" `1359 
V L "command" 10 207 "int8" `1360 
F G "ads_write_command" 10 208 "void(int8 ch,int8 command)" `1358 
C L "ads_write_command_block" 10 5 1 "FUNCTION"
F N "ads_write_command_block" 10 216 ""
V L "block" 10 216 "int8" `1362 
V L "command" 10 216 "int8" `1363 
F G "ads_write_command_block" 10 217 "void(int8 block,int8 command)" `1361 
C L "ads_write_reg" 10 5 1 "FUNCTION"
F N "ads_write_reg" 10 225 ""
V L "ch" 10 225 "int8" `1365 
V L "regID" 10 225 "adsReg" `1366 
V L "data" 10 225 "int8" `1367 
F G "ads_write_reg" 10 226 "void(int8 ch,adsReg regID,int8 data)" `1364 
V L "command" 10 227 "int8" `1368 
C L "ads_write_reg" 10 5 1 "FUNCTION"
C L "ads_read_reg" 10 5 1 "FUNCTION"
F N "ads_read_reg" 10 236 ""
V L "ch" 10 236 "int8" `1370 
V L "regID" 10 236 "adsReg" `1371 
F G "ads_read_reg" 10 237 "int8(int8 ch,adsReg regID)" `1369 
V L "command" 10 238 "int8" `1372 
V L "data" 10 240 "int8" `1373 
C L "ads_read_data" 10 5 1 "FUNCTION"
F N "ads_read_data" 10 248 ""
V L "ch" 10 248 "int8" `1377 
F G "ads_read_data" 10 249 "int32(int8 ch)" `1376 
V L "data" 10 251 "int32" `1378 
C L "ADS1220init" 10 5 1 "FUNCTION"
F N "ADS1220init" 10 260 ""
V L "ch" 10 260 "int8" `1382 
V L "rc0" 10 260 "int8" `1383 
V L "rc1" 10 260 "int8" `1384 
V L "rc2" 10 260 "int8" `1385 
V L "rc3" 10 260 "int8" `1386 
F G "ADS1220init" 10 261 "void(int8 ch,int8=56 rc0,int8=16 rc1,int8=48 rc2,int8=0 rc3)" `1381 
C L "ADS1220init" 10 5 1 "FUNCTION"
C L "ADS1220init" 10 5 1 "FUNCTION"
D G "MATH_H" 11 30 ""
D G "PI" 11 35 "3.1415926535897932"
D G "SQRT2" 11 38 "1.4142135623730950"
C L "CEIL_FLOOR" 11 2 3 "FUNCTION"
F N "CEIL_FLOOR" 11 45 ""
V L "x" 11 45 "float" `1392 
V L "n" 11 45 "int8" `1393 
F G "CEIL_FLOOR" 11 46 "float(float x,int8 n)" `1391 
V L "y" 11 47 "float" `1394 
V L "res" 11 47 "float" `1395 
V L "l" 11 48 "int16" `1396 
V L "s" 11 49 "int1" `1397 
C L "floor" 11 2 5 "FUNCTION"
F N "floor" 11 207 ""
V L "x" 11 207 "float" `1404 
F G "floor" 11 208 "float(float x)" `1403 
C L "ceil" 11 2 5 "FUNCTION"
F N "ceil" 11 233 ""
V L "x" 11 233 "float" `1406 
F G "ceil" 11 234 "float(float x)" `1405 
D G "fabs" 11 259 "abs"
C L "fmod" 11 2 6 "FUNCTION"
F N "fmod" 11 271 ""
V L "x" 11 271 "float" `1408 
V L "y" 11 271 "float" `1409 
F G "fmod" 11 272 "float(float x,float y)" `1407 
V L "i" 11 273 "float" `1410 
D G "LN2" 11 334 "0.6931471805599453"
D G "LN2_INV" 11 335 "1.4426950408889634073"
V G "pe" 11 337 "[6]" `1412 
F N "exp" 11 341 ""
V L "x" 11 341 "float" `1415 
F G "exp" 11 342 "float(float x)" `1414 
V L "y" 11 343 "float" `1416 
V L "res" 11 343 "float" `1417 
V L "r" 11 343 "float" `1418 
V L "n" 11 347 "sint8" `1419 
V L "s" 11 348 "int1" `1420 
C L "exp" 11 2 1 "FUNCTION"
V G "pl" 11 525 "[4]" `1424 
V G "ql" 11 526 "[4]" `1427 
C L "log" 11 2 3 "FUNCTION"
F N "log" 11 534 ""
V L "x" 11 534 "float" `1430 
F G "log" 11 535 "float(float x)" `1429 
V L "y" 11 536 "float" `1431 
V L "res" 11 536 "float" `1432 
V L "r" 11 536 "float" `1433 
V L "y2" 11 536 "float" `1434 
V L "n" 11 540 "sint8" `1435 
C L "log" 11 2 1 "FUNCTION"
D G "LN10" 11 758 "2.3025850929940456"
D G "LN10_INV" 11 759 "0.4342944819032518276"
C L "log10" 11 2 3 "FUNCTION"
F N "log10" 11 767 ""
V L "x" 11 767 "float" `1437 
F G "log10" 11 768 "float(float x)" `1436 
V L "r" 11 769 "float" `1438 
C L "modf" 11 2 8 "FUNCTION"
F N "modf" 11 808 ""
V L "value" 11 808 "float" `1440 
V L "iptr" 11 808 "*float" `1441 
F G "modf" 11 809 "float(float value,*float iptr)" `1439 
C L "pwr" 11 2 6 "FUNCTION"
F N "pwr" 11 836 ""
V L "x" 11 836 "float" `1443 
V L "y" 11 836 "float" `1444 
F G "pwr" 11 837 "float(float x,float y)" `1442 
C L "pow" 11 2 7 "FUNCTION"
F N "pow" 11 899 ""
V L "x" 11 899 "float" `1446 
V L "y" 11 899 "float" `1447 
F G "pow" 11 900 "float(float x,float y)" `1445 
C L "sqrt" 11 2 5 "FUNCTION"
F N "sqrt" 11 960 ""
V L "x" 11 960 "float" `1449 
F G "sqrt" 11 961 "float(float x)" `1448 
V L "y" 11 962 "float" `1450 
V L "res" 11 962 "float" `1451 
V L "p" 11 967 "*int8" `1452 
D G "PI_DIV_BY_TWO_INV" 11 1156 "0.63661977236758134"
D G "PI_DIV_BY_TWO" 11 1160 "1.5707963267948966"
D G "TWOBYPI" 11 1164 "0.6366197723675813"
C L "cos" 11 2 3 "FUNCTION"
F N "cos" 11 1172 ""
V L "x" 11 1172 "float" `1454 
F G "cos" 11 1173 "float(float x)" `1453 
V L "y" 11 1174 "float" `1455 
V L "t" 11 1174 "float" `1456 
V L "t2" 11 1174 "float" `1457 
V L "quad" 11 1175 "int8" `1458 
V L "i" 11 1175 "int8" `1459 
V L "frac" 11 1176 "float" `1460 
V L "p" 11 1177 "float[5]" `1461  "by the series definition for cosine"
C L "cos" 11 2 1 "FUNCTION"
C L "cos" 11 2 2 "FUNCTION"
C L "cos" 11 2 1 "FUNCTION"
C L "cos" 11 2 1 "FUNCTION"
C L "cos" 11 2 1 "FUNCTION"
C L "cos" 11 2 1 "FUNCTION"
C L "cos" 11 2 1 "FUNCTION"
C L "cos" 11 2 1 "FUNCTION"
C L "sin" 11 2 5 "FUNCTION"
F N "sin" 11 1311 ""
V L "x" 11 1311 "float" `1463 
F G "sin" 11 1312 "float(float x)" `1462 
C L "tan" 11 2 5 "FUNCTION"
F N "tan" 11 1337 ""
V L "x" 11 1337 "float" `1465 
F G "tan" 11 1338 "float(float x)" `1464 
V L "c" 11 1339 "float" `1466 
V L "s" 11 1339 "float" `1467 
V G "pas" 11 1377 "[3]" `1469 
V G "qas" 11 1378 "[3]" `1472 
F N "ASIN_COS" 11 1380 ""
V L "x" 11 1380 "float" `1475 
V L "n" 11 1380 "int8" `1476 
F G "ASIN_COS" 11 1381 "float(float x,int8 n)" `1474 
V L "y" 11 1382 "float" `1477 
V L "res" 11 1382 "float" `1478 
V L "r" 11 1382 "float" `1479 
V L "y2" 11 1382 "float" `1480 
V L "s" 11 1383 "int1" `1481 
C L "ASIN_COS" 11 2 1 "FUNCTION"
C L "ASIN_COS" 11 2 1 "FUNCTION"
C L "asin" 11 2 5 "FUNCTION"
F N "asin" 11 1538 ""
V L "x" 11 1538 "float" `1483 
F G "asin" 11 1539 "float(float x)" `1482 
V L "r" 11 1540 "float" `1484 
C L "acos" 11 2 5 "FUNCTION"
F N "acos" 11 1572 ""
V L "x" 11 1572 "float" `1486 
F G "acos" 11 1573 "float(float x)" `1485 
V L "r" 11 1574 "float" `1487 
V G "pat" 11 1600 "[4]" `1489 
V G "qat" 11 1601 "[4]" `1492 
C L "atan" 11 2 3 "FUNCTION"
F N "atan" 11 1609 ""
V L "x" 11 1609 "float" `1495 
F G "atan" 11 1610 "float(float x)" `1494 
V L "y" 11 1611 "float" `1496 
V L "res" 11 1611 "float" `1497 
V L "r" 11 1611 "float" `1498 
V L "s" 11 1612 "int1" `1499 
V L "flag" 11 1612 "int1" `1500 
C L "atan" 11 2 1 "FUNCTION"
C L "atan2" 11 2 7 "FUNCTION"
F N "atan2" 11 1752 ""
V L "y" 11 1752 "float" `1502 
V L "x" 11 1752 "float" `1503 
F G "atan2" 11 1753 "float(float y,float x)" `1501 
V L "z" 11 1754 "float" `1504 
V L "sign" 11 1755 "int1" `1505 
V L "quad" 11 1756 "int8" `1506 
C L "atan2" 11 2 1 "FUNCTION"
C L "atan2" 11 2 1 "FUNCTION"
C L "cosh" 11 2 7 "FUNCTION"
F N "cosh" 11 1974 ""
V L "x" 11 1974 "float" `1509 
F G "cosh" 11 1975 "float(float x)" `1508 
C L "sinh" 11 2 6 "FUNCTION"
F N "sinh" 11 2001 ""
V L "x" 11 2001 "float" `1511 
F G "sinh" 11 2002 "float(float x)" `1510 
C L "tanh" 11 2 6 "FUNCTION"
F N "tanh" 11 2031 ""
V L "x" 11 2031 "float" `1513 
F G "tanh" 11 2032 "float(float x)" `1512 
D G "LOG2" 11 2061 ".30102999566398119521"
D G "LOG2_INV" 11 2062 "3.32192809488736234787"
F N "frexp" 11 2063 ""
V L "x" 11 2063 "float" `1515 
V L "exp" 11 2063 "*sint8" `1516 
F G "frexp" 11 2064 "float(float x,*sint8 exp)" `1514 
V L "res" 11 2065 "float" `1517 
V L "sign" 11 2066 "int1" `1518 
C L "ldexp" 11 2 6 "FUNCTION"
F N "ldexp" 11 2208 ""
V L "value" 11 2208 "float" `1520 
V L "exp" 11 2208 "sint8" `1521 
F G "ldexp" 11 2209 "float(float value,sint8 exp)" `1519 
D G "sensorSampleRate" 9 8 "50" "50mS delay between each sensor sample = 200ms cadence"
D G "maxCount" 9 10 "16777216.0" "ADC max count"
D G "sc" 9 13 "sensorCal"
D G "KMXP1000reg0config" 9 16 "IPp1n2|g16|PGAenabled" "0x3A//"
D G "KMXP1000reg1config" 9 17 "DRn20|MDturbo|CMsingle|TSDisable|BCSoff" "0x00"
D G "KMXP1000reg2config" 9 18 "REFinternal|FIR60|PSWopen|Ioff" "0x30"
D G "KMXP1000reg3config" 9 19 "I1disabled|I2disabled|drdyPin" "0x00"
D G "KMXP2000reg0config" 9 21 "IPp1n2|g16|PGAenabled" "0x3A//"
D G "KMXP2000reg1config" 9 22 "DRn20|MDturbo|CMsingle|TSDisable|BCSoff" "0x00"
D G "KMXP2000reg2config" 9 23 "REFinternal|FIR60|PSWopen|Ioff" "0x30"
D G "KMXP2000reg3config" 9 24 "I1disabled|I2disabled|drdyPin" "0x00"
D G "vMonN15" 9 26 "6"
D G "vMon200" 9 27 "16"
D G "vMon5V6" 9 28 "24"
D G "vMon5VA" 9 29 "25"
D G "vMon3V6X" 9 30 "17"
D G "vMon3V3A" 9 31 "27"
D G "vMon3V3D" 9 32 "26"
V G "smData" 9 39 "{int1 dataReady,int1 adcBusy,int8 channel}" `1526 
C L "internal_monitor_task" 9 11 2 "FUNCTION"
F N "internal_monitor_task" 9 45 ""
F G "internal_monitor_task" 9 46 "void()" `1527 
V L "state" 9 47 "int8" `1528 
C L "internal_monitor_task" 9 11 1 "FUNCTION"
C L "internal_monitor_task" 9 11 1 "FUNCTION"
C L "internal_monitor_task" 9 11 1 "FUNCTION"
C L "internal_monitor_task" 9 11 1 "FUNCTION"
C L "internal_monitor_task" 9 11 1 "FUNCTION"
C L "internal_monitor_task" 9 11 1 "FUNCTION"
C L "internal_monitor_task" 9 11 1 "FUNCTION"
C L "sensor_process_data" 9 11 1 "FUNCTION"
F N "sensor_process_data" 9 106 ""
V L "ch" 9 106 "int8" `1530 
V L "sinRawCounts" 9 106 "int32" `1531 
V L "cosRawCounts" 9 106 "int32" `1532 
F G "sensor_process_data" 9 107 "void(int8 ch,int32 sinRawCounts,int32 cosRawCounts)" `1529 
V L "pTmp" 9 113 "float" `1535 
V L "polePitch" 9 114 "float" `1536 
C L "sensor_monitor_interrupt_task" 9 11 2 "FUNCTION"
F N "sensor_monitor_interrupt_task" 9 129 ""
F G "sensor_monitor_interrupt_task" 9 130 "void()" `1537 
C L "sensor_monitor_task" 9 11 2 "FUNCTION"
F N "sensor_monitor_task" 9 154 ""
F G "sensor_monitor_task" 9 155 "void()" `1538 
V L "sinRaw" 9 158 "int32" `1539 
V L "cosRaw" 9 159 "int32" `1540 
V L "ch" 9 160 "int8" `1541 
C L "setup_external_ADCs" 9 11 1 "FUNCTION"
F N "setup_external_ADCs" 9 187 ""
F G "setup_external_ADCs" 9 188 "void()" `1542 
V L "rc0" 9 189 "int8" `1543 
V L "rc1" 9 190 "int8" `1544 
V L "rc2" 9 191 "int8" `1545 
V L "rc3" 9 192 "int8" `1546 
V L "ch" 9 194 "int8" `1547 
C L "monitor_init" 9 11 1 "FUNCTION"
F N "monitor_init" 9 226 ""
F G "monitor_init" 9 227 "void()" `1548 
C L "monitor_init" 9 11 1 "FUNCTION"
D G "control" 12 2 ""
D G "__STDBOOL_H__" 13 18 ""
T G "bool" 13 33 "int1" `1549 
D G "true" 13 34 "1"
D G "false" 13 35 "0"
D G "__bool_true_false_are_defined" 13 36 "1"
D G "DACfullScale" 12 12 "655.36" "full scale/100 because CV = %"
C L "set_nanoDAC_outputs" 12 6 35 "FUNCTION"
F N "set_nanoDAC_outputs" 12 55 ""
V L "ch" 12 55 "int8" `1554 
F G "set_nanoDAC_outputs" 12 56 "void(int8 ch)" `1553 
V L "txData" 12 57 "int16" `1555 
C L "set_nanoDAC_outputs" 12 6 2 "FUNCTION"
C L "set_nanoDAC_outputs" 12 6 1 "FUNCTION"
C L "set_nanoDAC_outputs" 12 6 2 "FUNCTION"
C L "control_task" 12 6 1 "FUNCTION"
F N "control_task" 12 84 ""
F G "control_task" 12 85 "void()" `1561 
V L "state" 12 86 "int8" `1562 
C L "control_init" 12 6 1 "FUNCTION"
F N "control_init" 12 104 ""
F G "control_init" 12 105 "void()" `1563 
D G "serialPort" 14 2 ""
D G "cmd_buffer" 15 2 ""
D G "startChr" 15 17 "'~'" "start character. Also diagnostic command type"
D G "diagCmdType" 15 18 "startChr"
D G "endChr" 15 19 "'\n'"
D G "delimiter" 15 20 "','"
D G "ignoreChr1" 15 21 "'\r'"
D G "ignoreChr2" 15 22 "' '"
D G "noRecordFound" 15 23 " (char)0xFF"
D G "numRecords" 15 25 "4"
D G "numParam" 15 26 "7"
D G "lenParam" 15 27 "25"
D G "useSerial" 15 29 ""
E G "tcp" 15 32 "0" `1565 
E G "ser" 15 32 "1" `1566 
V G "" 15 32 "" "this structure holds a command. This is used by the serial routine as well"
V G "SERcmd" 15 52 "{int1 full,int8 chrIndex,int8 paramIndex,int8 recReadIndex,int8 recWriteIndex,int8 t,int8[7][25] SERcmd}[4]" `1576  "holds serial command"
V G "SRI" 15 53 "int8" `1577 
V G "SWI" 15 54 "int8" `1578 
V G "retData" 15 63 "int8[100]" `1579  "this is used to hold return data"
C L "resetSERcmd" 15 5 1 "FUNCTION"
F N "resetSERcmd" 15 69 ""
V L "recNum" 15 69 "int8" `1581 
F G "resetSERcmd" 15 70 "void(int8 recNum)" `1580 
V L "i" 15 73 "int8" `1582 
C L "getNextSERReadIndex" 15 5 1 "FUNCTION"
F N "getNextSERReadIndex" 15 90 ""
F G "getNextSERReadIndex" 15 91 "int8()" `1583 
C L "setNextSERWriteIndex" 15 5 1 "FUNCTION"
F N "setNextSERWriteIndex" 15 104 ""
F G "setNextSERWriteIndex" 15 105 "void()" `1584 
D G "use_RS485" 14 6 "" "adds RX enable pin//"
D G "oneByteCmdTestValue" 14 8 "128"
D G "UART_BUFFER_SIZE" 14 9 "60"
D G "UART_EOT_CHAR1" 14 10 "0x0D" "Carriage Return"
D G "UART_EOT_CHAR2" 14 11 "0x0A" "Line Feed"
D G "UART_SOT_CHAR" 14 12 "'~'" "START CHARACTER"
D G "line_turnaround_char" 14 13 "0xFF"
V G "UART_BUFFER" 14 17 "int8[60]" `1586 
V G "UART_WR_PTR" 14 18 "int8" `1587 
V G "UART_RD_PTR" 14 19 "int8" `1588 
V G "BYTES_AVAILABLE" 14 20 "int1" `1589 
C L "RX_isr" 14 28 4 "FUNCTION"
F N "RX_isr" 14 40 ""
F G "RX_isr" 14 41 "void()" `1595 
C L "getchFromBuffer" 14 28 1 "FUNCTION"
F N "getchFromBuffer" 14 54 ""
F G "getchFromBuffer" 14 55 "int8()" `1596 
V L "data" 14 56 "int8" `1597 
C L "serial_task" 14 28 1 "FUNCTION"
F N "serial_task" 14 66 ""
F G "serial_task" 14 67 "void()" `1598 
V L "rxChar" 14 70 "int8" `1599 
C L "serial_task" 14 28 1 "FUNCTION"
C L "serial_task" 14 28 1 "FUNCTION"
C L "serial_init" 14 28 1 "FUNCTION"
F N "serial_init" 14 128 ""
F G "serial_init" 14 129 "void()" `1604 
V L "i" 14 130 "int8" `1605 
D G "pidcontroller" 16 2 ""
C L "pid_update" 11 2 24 "FUNCTION"
C L "pid_update" 16 7 1 "FUNCTION"
F N "pid_update" 16 9 ""
V L "ch" 16 9 "int8" `1607 
F G "pid_update" 16 9 "void(int8 ch)" `1606 
V L "err" 16 10 "float" `1608 
C L "pid_update" 16 7 1 "FUNCTION"
C L "pid_update" 16 7 1 "FUNCTION"
V L "p" 16 12 "float" `1609 
C L "pid_update" 16 7 1 "FUNCTION"
V L "D" 16 13 "float" `1610 
C L "pid_update" 16 7 1 "FUNCTION"
C L "pid_update" 16 7 1 "FUNCTION"
C L "pid_update" 16 7 1 "FUNCTION"
C L "pid_task" 16 7 1 "FUNCTION"
F N "pid_task" 16 24 ""
V L "ch" 16 24 "int8" `1612 
F G "pid_task" 16 24 "void(int8 ch)" `1611 
V L "index" 16 25 "int8" `1613 
D G "timeout" 17 2 ""
V G "timeCounter" 17 21 "int32" `1614 
C L "event_timer_init" 17 6 1 "FUNCTION"
F N "event_timer_init" 17 26 ""
F G "event_timer_init" 17 27 "void()" `1615 
C L "event_timer_init" 17 6 1 "FUNCTION"
C L "TIMER1_isr" 17 6 1 "FUNCTION"
F N "TIMER1_isr" 17 41 ""
F G "TIMER1_isr" 17 42 "void()" `1616 
C L "TIMER1_isr" 17 6 1 "FUNCTION"
C L "TIMER1_isr" 17 6 1 "FUNCTION"
D G "cmdHandlerC" 18 2 ""
D G "cmdHandler" 19 2 ""
D G "hwID" 19 5 "'D'" "DiFCS"
T G "resp" 19 13 "{int8 id,*int8 msg}" `1620  "!#define INVALID_DATA "error - invalid data""
C L "getRev" 19 8 15 "FUNCTION"
F N "getRev" 19 37 ""
V L "??65535" 19 37 "int8" `1622 
f G "getRev" 19 37 "int8(int8 )" `1621  "gr"
F N "getSN" 19 38 ""
V L "??65535" 19 38 "int8" `1624 
f G "getSN" 19 38 "int8(int8 )" `1623  "gs"
F N "getOPchMap" 19 40 ""
V L "??65535" 19 40 "int8" `1626 
f G "getOPchMap" 19 40 "int8(int8 )" `1625  "gChMap,   {1|2}"
F N "setOPchMap" 19 41 ""
V L "??65535" 19 41 "int8" `1628 
f G "setOPchMap" 19 41 "int8(int8 )" `1627  "sChMap,   {1|2}, {X|Y}"
F N "getIPchMode" 19 43 ""
V L "??65535" 19 43 "int8" `1630 
f G "getIPchMode" 19 43 "int8(int8 )" `1629  "gChMode,  {1|2}"
F N "setIPchMode" 19 44 ""
V L "??65535" 19 44 "int8" `1632 
f G "setIPchMode" 19 44 "int8(int8 )" `1631  "sChMode,  {1|2}, {MANUAL|MAGSNS}"
F N "getPIDvals" 19 46 ""
V L "??65535" 19 46 "int8" `1634 
f G "getPIDvals" 19 46 "int8(int8 )" `1633  "gPID,     {1|2}, {P|I|D}"
F N "setPIDvals" 19 47 ""
V L "??65535" 19 47 "int8" `1636 
f G "setPIDvals" 19 47 "int8(int8 )" `1635  "sPID,     {1|2}, {P|I|D}, <float>"
F N "getSetPoint" 19 49 ""
V L "??65535" 19 49 "int8" `1638 
f G "getSetPoint" 19 49 "int8(int8 )" `1637  "gSP,      {1|2}"
F N "setSetPoint" 19 50 ""
V L "??65535" 19 50 "int8" `1640 
f G "setSetPoint" 19 50 "int8(int8 )" `1639  "sSP,      {1|2}, <float>"
F N "getAllSensorCalParams" 19 52 ""
V L "??65535" 19 52 "int8" `1642 
f G "getAllSensorCalParams" 19 52 "int8(int8 )" `1641  "gSCals,   {1|2}"
F N "getSensorCalParam" 19 53 ""
V L "??65535" 19 53 "int8" `1644 
f G "getSensorCalParam" 19 53 "int8(int8 )" `1643  "gSCal,    {1|2}, {c0|c1|c2|c3|c4|c5}"
F N "setSensorCalParam" 19 54 ""
V L "??65535" 19 54 "int8" `1646 
f G "setSensorCalParam" 19 54 "int8(int8 )" `1645  "sSCal,    {1|2}, {c0|c1|c2|c3|c4|c5}, <float>"
F N "getMonitorCalParam" 19 56 ""
V L "??65535" 19 56 "int8" `1648 
f G "getMonitorCalParam" 19 56 "int8(int8 )" `1647  "gMCal,    {N15|200|5V6|5VA|3V6X|3V3A|3V3D}"
F N "setMonitorCalParam" 19 57 ""
V L "??65535" 19 57 "int8" `1650 
f G "setMonitorCalParam" 19 57 "int8(int8 )" `1649  "sMCal,    {N15|200|5V6|5VA|3V6X|3V3A|3V3D}, <float>, <float>"
F N "getMonitorValue" 19 58 ""
V L "??65535" 19 58 "int8" `1652 
f G "getMonitorValue" 19 58 "int8(int8 )" `1651  "gMon,     {N15|200|5V6|5VA|3V6X|3V3A|3V3D|all}"
F N "getPIDdata" 19 60 ""
V L "??65535" 19 60 "int8" `1654 
f G "getPIDdata" 19 60 "int8(int8 )" `1653  "gPIDdata, {1|2}"
F N "getIPdata" 19 62 ""
V L "??65535" 19 62 "int8" `1656 
f G "getIPdata" 19 62 "int8(int8 )" `1655  "gIPdata,  {1|2}, {raw|calib|pos}"
F N "getManOPvals" 19 64 ""
V L "??65535" 19 64 "int8" `1658 
f G "getManOPvals" 19 64 "int8(int8 )" `1657  "gManOP,    {1|2}"
F N "setManOPvals" 19 65 ""
V L "??65535" 19 65 "int8" `1660 
f G "setManOPvals" 19 65 "int8(int8 )" `1659  "gManOP,    {1|2}, <float>"
F N "invalidCmd" 19 67 ""
V L "??65535" 19 67 "int8" `1662 
f G "invalidCmd" 19 67 "int8(int8 )" `1661 
F N "*cmd_func" 19 71 ""
V L "??65535" 19 71 "int8" `1666 
T G "*cmd_func" 19 71 "int8(int8 )" `1665 
F N "arg_is_float" 19 74 ""
V L "??65535" 19 74 "*int8" `1670 
f G "arg_is_float" 19 74 "int8(*int8 )" `1669 
F N "is_valid_channel" 19 75 ""
V L "??65535" 19 75 "*int8" `1672 
f G "is_valid_channel" 19 75 "int8(*int8 )" `1671 
F N "hex_to_int" 19 76 ""
V L "??65535" 19 76 "int8" `1674 
f G "hex_to_int" 19 76 "int8(int8 )" `1673 
F N "echo_cmd" 19 77 ""
V L "rec" 19 77 "int8" `1676 
f G "echo_cmd" 19 77 "void(int8 rec)" `1675 
F N "command_parser" 19 78 ""
V L "rec" 19 78 "int8" `1678 
f G "command_parser" 19 78 "int8(int8 rec)" `1677 
F N "command_handler_task" 19 79 ""
f G "command_handler_task" 19 79 "void()" `1679  "LIST OF DIAGNOSTIC COMMAND KEYWORDS AND THEIR FUNCTIONS *"
V G "cmd_list" 18 6 "{*int8 cmd_name,int8(int8 ) cmd_func,cmd_func cmd_func}[1]" `1680 
C L "command_handler_task" 18 28 1 "FUNCTION"
E G "SUCCESS" 18 31 "0" `1701 
E G "INV_CMD" 18 32 "1" `1702 
E G "INV_PARAM" 18 33 "2" `1703 
V G "" 18 33 ""
V G "resp_list" 18 35 "resp[1]" `1704 
C L "command_handler_task" 18 28 1 "FUNCTION"
F N "getRev" 18 45 ""
V L "rec" 18 45 "int8" `1709 
F G "getRev" 18 45 "int8(int8 rec)" `1621 
F N "getSN" 18 50 ""
V L "rec" 18 50 "int8" `1712 
F G "getSN" 18 50 "int8(int8 rec)" `1623 
F N "getOPchMap" 18 55 ""
V L "rec" 18 55 "int8" `1714 
F G "getOPchMap" 18 55 "int8(int8 rec)" `1625  "** ARG CHECKS ********************"
V L "arg1" 18 57 "int8" `1713 
C L "getOPchMap" 18 62 1 "*"
F N "setOPchMap" 18 70 ""
V L "rec" 18 70 "int8" `1717 
F G "setOPchMap" 18 70 "int8(int8 rec)" `1627  "** ARG CHECKS ********************"
V L "arg1" 18 72 "int8" `1716 
V L "arg2" 18 73 "int8" `1717 
C L "setOPchMap" 18 81 1 "*"
F N "getIPchMode" 18 89 ""
V L "rec" 18 89 "int8" `1723 
F G "getIPchMode" 18 89 "int8(int8 rec)" `1629  "** ARG CHECKS ********************"
V L "arg1" 18 91 "int8" `1722 
C L "getIPchMode" 18 96 1 "*"
F N "setIPchMode" 18 104 ""
V L "rec" 18 104 "int8" `1726 
F G "setIPchMode" 18 104 "int8(int8 rec)" `1631  "** ARG CHECKS ********************"
V L "arg1" 18 106 "int8" `1725 
V L "arg2" 18 107 "*int8" `1726 
V L "s_manual" 18 108 "*int8" `1727 
V L "s_magsns" 18 109 "*int8" `1729 
C L "setIPchMode" 18 117 1 "*"
F N "getPIDvals" 18 125 ""
V L "rec" 18 125 "int8" `1732 
F G "getPIDvals" 18 125 "int8(int8 rec)" `1633  "** ARG CHECKS ********************"
V L "arg1" 18 127 "int8" `1731 
V L "arg2" 18 128 "int8" `1732 
C L "getPIDvals" 18 136 1 "*"
F N "setPIDvals" 18 145 ""
V L "rec" 18 145 "int8" `1745 
F G "setPIDvals" 18 145 "int8(int8 rec)" `1635  "** ARG CHECKS ********************"
V L "arg1" 18 147 "int8" `1744 
V L "arg2" 18 148 "int8" `1745 
V L "arg3" 18 149 "float" `1746 
C L "setPIDvals" 18 160 1 "*"
F N "getSetPoint" 18 169 ""
V L "rec" 18 169 "int8" `1748 
F G "getSetPoint" 18 169 "int8(int8 rec)" `1637  "** ARG CHECKS ********************"
V L "arg1" 18 171 "int8" `1747 
C L "getSetPoint" 18 176 1 "*"
F N "setSetPoint" 18 181 ""
V L "rec" 18 181 "int8" `1750 
F G "setSetPoint" 18 181 "int8(int8 rec)" `1639  "** ARG CHECKS ********************"
V L "arg1" 18 183 "int8" `1749 
V L "arg2" 18 184 "float" `1750 
C L "setSetPoint" 18 192 1 "*"
F N "getAllSensorCalParams" 18 198 ""
V L "rec" 18 198 "int8" `1752 
F G "getAllSensorCalParams" 18 198 "int8(int8 rec)" `1641  "** ARG CHECKS ********************"
V L "arg1" 18 200 "int8" `1751 
C L "getAllSensorCalParams" 18 205 1 "*"
F N "getSensorCalParam" 18 216 ""
V L "rec" 18 216 "int8" `1759 
F G "getSensorCalParam" 18 216 "int8(int8 rec)" `1643  "** ARG CHECKS ********************"
V L "arg1" 18 218 "int8" `1758 
V L "arg2" 18 219 "int8" `1759 
C L "getSensorCalParam" 18 227 1 "*"
F N "setSensorCalParam" 18 239 ""
V L "rec" 18 239 "int8" `1767 
F G "setSensorCalParam" 18 239 "int8(int8 rec)" `1645  "** ARG CHECKS ********************"
V L "arg1" 18 241 "int8" `1766 
V L "arg2" 18 242 "int8" `1767 
V L "arg3" 18 243 "float" `1768 
C L "setSensorCalParam" 18 254 1 "*"
F N "getMonitorCalParam" 18 266 ""
V L "rec" 18 266 "int8" `1770 
F G "getMonitorCalParam" 18 266 "int8(int8 rec)" `1647 
F N "setMonitorCalParam" 18 271 ""
V L "rec" 18 271 "int8" `1770 
F G "setMonitorCalParam" 18 271 "int8(int8 rec)" `1649 
F N "getMonitorValue" 18 276 ""
V L "rec" 18 276 "int8" `1770 
F G "getMonitorValue" 18 276 "int8(int8 rec)" `1651 
F N "getPIDdata" 18 281 ""
V L "rec" 18 281 "int8" `1770 
F G "getPIDdata" 18 281 "int8(int8 rec)" `1653 
F N "getIPdata" 18 286 ""
V L "rec" 18 286 "int8" `1770 
F G "getIPdata" 18 286 "int8(int8 rec)" `1655  "** ARG CHECKS ********************"
V L "arg1" 18 288 "int8" `1769 
V L "arg2" 18 289 "*int8" `1770 
V L "s_raw" 18 290 "*int8" `1771 
V L "s_calibrated" 18 291 "*int8" `1773 
V L "s_position" 18 292 "*int8" `1775 
C L "getIPdata" 18 297 1 "*"
F N "getManOPvals" 18 314 ""
V L "rec" 18 314 "int8" `1785 
F G "getManOPvals" 18 314 "int8(int8 rec)" `1657  "** ARG CHECKS ********************"
V L "arg1" 18 316 "int8" `1784 
C L "getManOPvals" 18 321 1 "*"
F N "setManOPvals" 18 327 ""
V L "rec" 18 327 "int8" `1787 
F G "setManOPvals" 18 327 "int8(int8 rec)" `1659  "** ARG CHECKS ********************"
V L "arg1" 18 329 "int8" `1786 
V L "arg2" 18 330 "float" `1787 
C L "setManOPvals" 18 338 1 "*"
F N "invalidCmd" 18 344 ""
V L "rec" 18 344 "int8" `1789 
F G "invalidCmd" 18 344 "int8(int8 rec)" `1661 
C L "arg_is_float" 18 338 1 "FUNCTION"
F N "arg_is_float" 18 351 ""
V L "arg" 18 351 "*int8" `1789 
F G "arg_is_float" 18 351 "int8(*int8 arg)" `1669 
V L "decimal" 18 352 "int1" `1788 
V L "i" 18 353 "int8" `1789 
C L "arg_is_float" 18 338 1 "FUNCTION"
C L "arg_is_float" 18 338 1 "FUNCTION"
F N "is_valid_channel" 18 369 ""
V L "arg" 18 369 "*int8" `1792 
F G "is_valid_channel" 18 369 "int8(*int8 arg)" `1671 
C L "hex_to_int" 18 338 1 "FUNCTION"
F N "hex_to_int" 18 378 ""
V L "ascii" 18 378 "int8" `1792 
F G "hex_to_int" 18 378 "int8(int8 ascii)" `1673 
C L "echo_cmd" 18 338 1 "FUNCTION"
F N "echo_cmd" 18 387 ""
V L "rec" 18 387 "int8" `1792 
F G "echo_cmd" 18 387 "void(int8 rec)" `1675 
F N "command_parser" 18 398 ""
V L "rec" 18 398 "int8" `1795 
F G "command_parser" 18 398 "int8(int8 rec)" `1677 
V L "cmd_adr" 18 399 "*int8" `1794 
V L "cmd_str" 18 400 "*int8" `1795 
C L "command_parser" 18 338 1 "FUNCTION"
V L "devID" 18 402 "int8" `1796 
V L "i" 18 403 "int8" `1797 
V L "return_code" 18 410 "int8" `1798 
C L "command_parser" 18 338 1 "FUNCTION"
C L "command_parser" 18 338 1 "FUNCTION"
C L "command_parser" 18 338 1 "FUNCTION"
F N "command_handler_task" 18 420 ""
F G "command_handler_task" 18 420 "void()" `1679 
V L "return_code" 18 423 "int8" `1799 
C L "command_handler_task" 18 338 1 "FUNCTION"
F N "MAIN" 0 11 ""
F G "MAIN" 0 12 "void()" `1803 
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "set_slow_slew_a" 1 0
F B "set_slow_slew_b" 1 0
F B "set_slow_slew_c" 1 0
F B "set_slow_slew_d" 1 0
F B "set_slow_slew_e" 1 0
F B "set_input_level_a" 1 0
F B "set_input_level_b" 1 0
F B "set_input_level_c" 1 0
F B "set_input_level_d" 1 0
F B "set_input_level_e" 1 0
F B "set_open_drain_a" 1 0
F B "set_open_drain_b" 1 0
F B "set_open_drain_c" 1 0
F B "set_open_drain_d" 1 0
F B "set_open_drain_e" 1 0
F B "port_a_pullups" 1 0
F B "port_b_pullups" 1 0
F B "port_c_pullups" 1 0
F B "port_d_pullups" 1 0
F B "port_e_pullups" 1 0
F B "pin_select" 2 4
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "get_wdt" 0 0
F B "setup_comparator" 1 0
F B "set_analog_pins" 0 255
F B "setup_adc_reference" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 3
F B "get_adc_ports" 0 0
F B "setup_adc" 1 3
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "set_adc_trigger" 1 0
F B "adc_write" 2 0
F B "adc_read" 1 0
F B "adc_status" 0 0
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 3
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_timer_6" 3 0
F B "get_timer6" 0 0
F B "set_timer6" 1 0
F B "setup_timer_5" 1 0
F B "get_timer5" 0 0
F B "set_timer5" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_pwm3" 1 0
F B "set_pwm3_duty" 1 0
F B "setup_pwm4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 2
F B "spi_data_is_in2" 0 0
F B "setup_dac" 1 0
F B "dac_write" 1 0
F B "brownout_enable" 1 0
F B "setup_cwg" 4 0
F B "cwg_status" 0 0
F B "cwg_restart" 0 0
F B "setup_clc1" 1 0
F B "clc1_setup_gate" 2 0
F B "clc1_setup_input" 2 0
F B "setup_clc2" 1 0
F B "clc2_setup_gate" 2 0
F B "clc2_setup_input" 2 0
F B "setup_clc3" 1 0
F B "clc3_setup_gate" 2 0
F B "clc3_setup_input" 2 0
F B "setup_clc4" 1 0
F B "clc4_setup_gate" 2 0
F B "clc4_setup_input" 2 0
F B "setup_clc5" 1 0
F B "clc5_setup_gate" 2 0
F B "clc5_setup_input" 2 0
F B "setup_clc6" 1 0
F B "clc6_setup_gate" 2 0
F B "clc6_setup_input" 2 0
F B "setup_clc7" 1 0
F B "clc7_setup_gate" 2 0
F B "clc7_setup_input" 2 0
F B "setup_clc8" 1 0
F B "clc8_setup_gate" 2 0
F B "clc8_setup_input" 2 0
F B "setup_dsm" 1 3
F B "setup_zcd" 1 0
F B "zcd_status" 0 0
F B "setup_crc" F B "crc_init" 0 1
F B "crc_calc8" 1 3
F B "crc_calc" 1 3
F B "crc_calc16" 1 3
F B "crc_write" 1 2
F B "crc_read" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "spi_xfer" 0 3
F B "spi_transfer" 3 4
F B "spi_transfer_write" 2 3
F B "spi_transfer_read" 2 3
F B "spi_speed" 1 3
F B "spi_init" 1 2
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
